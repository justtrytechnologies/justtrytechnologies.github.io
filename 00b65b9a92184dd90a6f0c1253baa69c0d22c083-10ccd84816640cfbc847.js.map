{"version":3,"file":"00b65b9a92184dd90a6f0c1253baa69c0d22c083-10ccd84816640cfbc847.js","mappings":"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","sources":["webpack://justtry-app/./src/components/common/faq.js","webpack://justtry-app/./src/components/common/consult.js","webpack://justtry-app/./src/components/common/move-forward.js","webpack://justtry-app/./src/components/common/talk-to-us-new.js","webpack://justtry-app/./src/components/common/talk-to-us-popup.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionContext.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionCollapse.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionItemContext.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionBody.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionButton.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionHeader.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionItem.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/Accordion.js"],"sourcesContent":["import React from \"react\";\nimport { Container, Row, Col, Accordion } from \"react-bootstrap\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Faq = ({ faqData }) => {\n  return (\n    <div className=\"faq_outline\">\n      <Container>\n        <Row className=\"faq_row\">\n          <Col\n            xxl={6}\n            xl={6}\n            lg={6}\n            md={12}\n            sm={12}\n            className=\"d-flex justify-content-center align-items-center align-items-lg-end p-lg-0 \"\n          >\n            <StaticImage\n              className=\"faq_lhs\"\n              imgClassName=\"faq_lhs_image\"\n              src=\"../../styles/assets/images/recentworks/faq.webp\"\n              alt=\"frequently asked question\"\n            />\n          </Col>\n          <Col xxl={6} xl={6} lg={6} md={12} sm={12} className=\"p-lg-0\">\n            <div className=\"faq_rhs\">\n              <h2 className=\"faq_title\">\n                Resolve your unanswered queries effortlessly\n              </h2>\n              <div className=\"faq_acc_wrapper\">\n                <Accordion>\n                  {faqData.map((item, index) => (\n                    <Accordion.Item key={index} eventKey={index.toString()}>\n                      <Accordion.Header>{item.question}</Accordion.Header>\n                      <Accordion.Body>{item.answer}</Accordion.Body>\n                    </Accordion.Item>\n                  ))}\n                </Accordion>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Faq;\n","import React, { useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport addToMailchimp from \"gatsby-plugin-mailchimp\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport { utils } from \"../../core/helper\";\nimport Loading from \"./loading\";\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email(\"Please Enter a Email\").label(\"Email\").required(),\n});\n\nconst FormModal = (props) => {\n  const [loading, setLoading] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const handleSubscribe = async (values) => {\n    setLoading(true);\n    const { email } = values;\n    const resp = await addToMailchimp(email);\n    if (resp.result === \"success\") {\n      utils.showSuccssMsg(resp?.msg);\n      setLoading(false);\n      reset();\n    } else {\n      utils.showErrMsg(resp?.msg);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Modal {...props} size=\"md\" className=\"form_modal_layout\">\n        <div className=\"form_modal_wrapper\">\n          <Modal.Header>\n            <Modal.Title>\n              <span className=\"clr_text\">Free </span>\n              Consult\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>\n              Secure a cost-free consultation for expert insights and\n              personalized advice tailored to your needs. No charges, just{\" \"}\n              <span className=\"bold_txt\">valuable guidance.</span>\n            </p>\n            <form autoComplete=\"on\" onSubmit={handleSubmit(handleSubscribe)}>\n              <input\n                {...register(\"email\")}\n                className=\"form_modal_input\"\n                placeholder=\"Enter your mail\"\n                id=\"email\"\n                type=\"email\"\n                maxLength={50}\n              />\n              <p\n                style={{\n                  fontSize: \"12px\",\n                  color: \"#FF0000\",\n                  fontFamily: \"Poppins\",\n                  fontStyle: \"normal\",\n                  fontWeight: 400,\n                  lineHeight: \"20px\",\n                }}\n              >\n                {errors.email?.message}\n              </p>\n              <button\n                disabled={loading}\n                className=\"form_modal_btn\"\n                type=\"submit\"\n              >\n                Submit Now {loading && <Loading />}\n              </button>\n            </form>\n          </Modal.Body>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default FormModal;\n","import React, { useState } from \"react\";\nimport { Country } from \"country-state-city\";\nimport { collection, addDoc } from \"firebase/firestore/lite\";\nimport { utils } from \"../../core/helper\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport Loading from \"./loading\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport FormModal from \"./consult\";\n\nconst emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().label(\"Name\").required(),\n  contact: Yup.string().label(\"Contact\").required(),\n  email: Yup.string()\n    .matches(emailRegex, \"Invalid email address\")\n    .label(\"Email\")\n    .required(),\n  country: Yup.string().label(\"Country\").required(),\n  mobile: Yup.string().when(\"contact\", ([contactVal], schema) => {\n    if (contactVal === \"mobileNum\" && contactVal !== \"\") {\n      return schema.label(\"Mobile number\").required();\n    }\n    if (contactVal === \"whatsapp\" && contactVal !== \"\") {\n      return schema.label(\"Whatsapp no\").required();\n    }\n    if (contactVal === \"telegram\" && contactVal !== \"\") {\n      return schema.label(\"Telegram no\").required();\n    }\n    if (contactVal === \"skype\" && contactVal !== \"\") {\n      return schema.label(\"Skype link\").url(\"Invalid Skype link\").required();\n    }\n  }),\n  service: Yup.string().label(\"Service\").required(),\n  content: Yup.string().label(\"Content\").required(),\n});\n\nconst MoveForward = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [consultantShow, setConsultantShow] = React.useState(false);\n  const [contactVal, setContactVal] = useState(\"\");\n\n  const countries = Country.getAllCountries();\n\n  const handleConsultantTogg = () => {\n    setConsultantShow(!consultantShow);\n  };\n\n  const { db } = props;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    setValue,\n    getValues,\n    trigger,\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n    mode: \"onChange\",\n    criteriaMode: \"firstError\",\n  });\n  const contactValue = getValues(\"contact\");\n\n  const handlecontactChange = (e) => {\n    const { value } = e.target;\n    setValue(\"contact\", value, { shouldValidate: true });\n    trigger(\"mobile\");\n  };\n\n  const handleMobileNoChange = (e) => {\n    console.log(\"contactValue::\", contactValue);\n    const { value } = e.target;\n    if (contactValue === (\"telegram\" || \"whatsapp\" || \"mobileNum\")) {\n      const regex = /^[0-9\\b]+$/;\n      if (value === \"\" || regex.test(value)) {\n        setValue(\"mobile\", value, { shouldValidate: true });\n        setContactVal(value);\n      }\n    } else {\n      setValue(\"mobile\", value, { shouldValidate: true });\n      setContactVal(value);\n    }\n  };\n\n  const handleOnSubmit = async (values) => {\n    values.date = new Date();\n    delete values.contact;\n    setLoading(true);\n    try {\n      // return false\n      const clients = collection(db, \"clients\");\n      await addDoc(clients, values);\n      utils.showSuccssMsg(\"We will contact/talk to you soon\");\n      reset();\n      setContactVal(\"\");\n      setLoading(false);\n    } catch (e) {\n      utils.showErrMsg(\"Error adding document\");\n      setLoading(false);\n    }\n  };\n\n  return (\n    <section className=\"justtry_cta_sec\">\n      <Container>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <Row className=\"justtry_cta_form_wrapper\">\n            <Col\n              xxl={7}\n              xl={6}\n              lg={6}\n              md={12}\n              className=\"d-flex align-items-center justify-content-center\"\n            >\n              <div className=\"justtry_cta_form_sec\">\n                <h2 className=\"text-dark\">\n                  Get in <span style={{ color: \"#7534fc\" }}>Touch</span>\n                </h2>\n                <p>\n                  We're available to assist and address any inquiries you may\n                  have. We eagerly anticipate receiving your communication.\n                </p>\n                <form\n                  onSubmit={handleSubmit(handleOnSubmit)}\n                  className=\"justtry_cta_form\"\n                >\n                  <div className=\"justtry_cta_form_content\">\n                    <div className=\"justtry_cta_form_lhs\">\n                      <input\n                        placeholder=\"Enter your name\"\n                        id=\"full-name\"\n                        type=\"text\"\n                        {...register(\"name\")}\n                        maxLength={30}\n                      />\n                      <span className=\"error_msg_text\">\n                        {errors.name?.message}\n                      </span>\n                    </div>\n                    <div className=\"justtry_cta_form_rhs\">\n                      <input\n                        placeholder=\"Enter your mail\"\n                        id=\"email\"\n                        type=\"email\"\n                        {...register(\"email\")}\n                        maxLength={50}\n                      />\n                      <span className=\"error_msg_text\">\n                        {errors.email?.message}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"justtry_cta_form_content\">\n                    <div className=\"justtry_cta_form_lhs\">\n                      <div className=\"justtry_input_grp\">\n                        <input\n                          className=\"cta_inputs\"\n                          {...register(\"mobile\")}\n                          placeholder=\"Enter ID\"\n                          onChange={(e) => handleMobileNoChange(e)}\n                          value={contactVal}\n                          type=\"text\"\n                          disabled={\n                            !contactValue ||\n                            contactValue === undefined ||\n                            contactValue === \"undefined\"\n                          }\n                        />\n                        <select\n                          {...register(\"contact\")}\n                          onChange={handlecontactChange}\n                          className=\"cta_input_select\"\n                        >\n                          <option value=\"\" selected disabled>\n                            Select\n                          </option>\n                          <option value={\"mobileNum\"}>Mobile No</option>\n                          <option value={\"whatsapp\"}>Whatsapp</option>\n                          <option value={\"telegram\"}>Telegram</option>\n                          <option value={\"skype\"}>Skype</option>\n                        </select>\n                      </div>\n                      <span className=\"error_msg_text\">\n                        {errors.mobile?.message}\n                      </span>\n                      <span className=\"error_msg_text\">\n                        {errors.contact?.message}\n                      </span>\n                    </div>\n                    <div className=\"justtry_cta_form_rhs\">\n                      <select id=\"select-where\" {...register(\"country\")}>\n                        <option value=\"\">Select your Country</option>\n                        {countries.map((ele, ind) => {\n                          return (\n                            <option key={ind} value={ele.isoCode}>\n                              {ele.name}\n                            </option>\n                          );\n                        })}\n                      </select>\n                      <span className=\"error_msg_text\">\n                        {errors.country?.message}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"justtry_cta_form_service\">\n                    <select {...register(\"service\")}>\n                      <option value=\"\">Select your services</option>\n                      <option value=\"crypto exchange development\">\n                        Crypto Exchange Development\n                      </option>\n                      <option value=\"nft marketplace development\">\n                        NFT Marketplace Development\n                      </option>\n                      <option value=\"defi development\">DeFi Development</option>\n                      <option value=\"metaverse development\">\n                        Metaverse Development\n                      </option>\n                      <option value=\"blockchain solutions\">\n                        Blockchain Solutions\n                      </option>\n                      <option value=\"web 3.0 development\">\n                        Web 3.0 Development\n                      </option>\n                      <option value=\"crypto wallet development\">\n                        Crypto Wallet Development\n                      </option>\n                      <option value=\"custom software development\">\n                        Custom Software Development\n                      </option>\n                      <option value=\"mobile app development services\">\n                        Mobile App Development Services\n                      </option>\n                      <option value=\"artificial intelligence solutions\">\n                        Artificial Intelligence Solutions\n                      </option>\n                      <option value=\"others\"> Others</option>\n                    </select>\n                    <span className=\"error_msg_text\">\n                      {errors.service?.message}\n                    </span>\n                  </div>\n                  <div className=\"justtry_cta_textarea\">\n                    <textarea\n                      placeholder=\"Text your message here...\"\n                      id=\"content\"\n                      rows={5}\n                      {...register(\"content\")}\n                      maxLength={200}\n                    />\n                    <span className=\"error_msg_text\">\n                      {errors.content?.message}\n                    </span>\n                  </div>\n                  <div className=\"justtry_cta_sumbit\">\n                    <button\n                      className=\"form_submit_btn\"\n                      disabled={loading}\n                      type=\"submit\"\n                    >\n                      Submit Now {loading && <Loading />}\n                    </button>\n                    <button\n                      className=\"form_consult_btn\"\n                      onClick={handleConsultantTogg}\n                      type=\"button\"\n                    >\n                      Free consult\n                    </button>\n                  </div>\n                </form>\n                <FormModal\n                  onAddProps={props}\n                  show={consultantShow}\n                  onHide={handleConsultantTogg}\n                />\n              </div>\n            </Col>\n            <Col\n              xxl={5}\n              xl={6}\n              lg={6}\n              md={12}\n              className=\"d-flex align-items-center justify-content-center\"\n            >\n              <div className=\"justtry_cta_map_sec\">\n                <iframe\n                  title=\"Justtry Office\"\n                  src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3930.2126470840517!2d78.1340045741623!3d9.916240074472167!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3b00c539e6118b11%3A0x6c3891e5d1526c93!2sJusttry%20Technologies!5e0!3m2!1sen!2sin!4v1694181975876!5m2!1sen!2sin\"\n                  className=\"map_frame\"\n                  allowFullScreen=\"\"\n                  loading=\"lazy\"\n                  referrerPolicy=\"no-referrer-when-downgrade\"\n                ></iframe>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default MoveForward;\n","import React, { Fragment, useState } from \"react\";\nimport TalkToUsPopup from \"./talk-to-us-popup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { Country } from \"country-state-city\";\nimport { collection, addDoc } from \"firebase/firestore/lite\";\nimport { utils } from \"../../core/helper\";\nimport Loading from \"./loading\";\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().label(\"Name\").required(),\n  email: Yup.string().label(\"Email\").required(),\n  country: Yup.string().label(\"Country\").required(),\n  mobile: Yup.string().label(\"Contact\").required(),\n  content: Yup.string().label(\"Content\").required(),\n  service: Yup.string().label(\"Service\").required(),\n});\n\nconst TalkToUsNew = (props) => {\n  const { db, label = \"TALK TO US\", isFor } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [talkToUsShow, setTalkToUsShow] = useState(false);\n\n  const countries = Country.getAllCountries();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  // useEffect(() => {\n  //   handleToggleTalkToUs(); //children function of interest\n  // }, [props.togglePopup]);\n\n  const handleToggleTalkToUs = () => {\n    console.log(\"handleToggleTalkToUs\");\n    setTalkToUsShow(!talkToUsShow);\n    reset();\n  };\n\n  const handleOnSubmit = async (values) => {\n    const { name, email, country, content, mobile, service } = values;\n    const payload = {\n      name,\n      email,\n      country,\n      content,\n      mobile,\n      service,\n      date: new Date(),\n    };\n    setLoading(true);\n    try {\n      const clients = collection(db, \"clients\");\n      await addDoc(clients, payload);\n      utils.showSuccssMsg(\"We will contact/talk to you soon\");\n      reset();\n      setLoading(false);\n      setTimeout(() => {\n        handleToggleTalkToUs();\n      }, 1000);\n    } catch (e) {\n      utils.showErrMsg(\"Error adding document\");\n      setLoading(false);\n    }\n  };\n\n  const getButtonFor = (isFor) => {\n    switch (isFor) {\n      case \"banner\":\n        return (\n          <span className=\"primary_btn\" onClick={handleToggleTalkToUs}>\n            {label}\n          </span>\n        );\n      case \"about\":\n        return (\n          <span className=\"about_rhs_btn\" onClick={handleToggleTalkToUs}>\n            {label}\n          </span>\n        );\n      case \"cta\":\n        return (\n          <span className=\"cta_btn_div\" onClick={handleToggleTalkToUs}>\n            {label}\n          </span>\n        );\n      default:\n        return (\n          <span className=\"primary_btn\" onClick={handleToggleTalkToUs}>\n            {label}\n          </span>\n        );\n    }\n  };\n\n  return (\n    <Fragment>\n      {getButtonFor(isFor)}\n      {/* {isFor === \"banner\" ? (\n        <button  className=\"primary_btn\" type=\"button\"  onClick={handleToggleTalkToUs}>\n          {label}\n        </button>\n      ) : (\n        <button className=\"header_custom_btn\" onClick={handleToggleTalkToUs}>\n          {label}\n        </button>\n      )} */}\n      <TalkToUsPopup\n        show={talkToUsShow}\n        onHide={handleToggleTalkToUs}\n        closeButton={true}\n        size={\"lg\"}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <div className=\"screen__content\">\n          <form onSubmit={handleSubmit(handleOnSubmit)} className=\"login\">\n            <div className=\"login__field\">\n              <i className=\"login__icon fas fa-user\"></i>\n              <input\n                type=\"text\"\n                className=\"login__input\"\n                {...register(\"name\")}\n                placeholder=\"Your Name\"\n              />\n              <p className=\"text-danger mb-0\">{errors.name?.message}</p>\n            </div>\n\n            <div className=\"login__field\">\n              <input\n                type=\"email\"\n                className=\"login__input\"\n                {...register(\"email\")}\n                placeholder=\"Email\"\n              />\n              <p className=\"text-danger mb-0\">{errors.email?.message}</p>\n            </div>\n            <div className=\"login__field\">\n              <input\n                type=\"text\"\n                className=\"login__input\"\n                placeholder=\"Skype / Mobile / Whatsapp\"\n                {...register(\"mobile\")}\n              />\n              <p className=\"text-danger mb-0\">{errors.mobile?.message}</p>\n            </div>\n            <div className=\"login__field\">\n              <select className=\"login__input\" {...register(\"service\")}>\n                <option value=\"\">Select your services</option>\n                <option value=\"crypto exchange development\">\n                  Crypto Exchange Development\n                </option>\n                <option value=\"nft marketplace development\">\n                  NFT Marketplace Development\n                </option>\n                <option value=\"defi development\">DeFi Development</option>\n                <option value=\"metaverse development\">\n                  Metaverse Development\n                </option>\n                <option value=\"blockchain solutions\">\n                  Blockchain Solutions\n                </option>\n                <option value=\"web 3.0 development\">Web 3.0 Development</option>\n                <option value=\"crypto wallet development\">\n                  Crypto Wallet Development\n                </option>\n                <option value=\"custom software development\">\n                  Custom Software Development\n                </option>\n                <option value=\"mobile app development services\">\n                  Mobile App Development Services\n                </option>\n                <option value=\"artificial intelligence solutions\">\n                  Artificial Intelligence Solutions\n                </option>\n                <option value=\"others\"> Others</option>\n              </select>\n              <p className=\"text-danger mb-0\">{errors.service?.message}</p>\n            </div>\n            <div className=\"login__field\">\n              <select className=\"login__input\" {...register(\"country\")}>\n                <option value=\"\">Select Country</option>\n                {countries.map((ele, ind) => {\n                  return (\n                    <option key={ind} value={ele.isoCode}>\n                      {ele.name}\n                    </option>\n                  );\n                })}\n              </select>\n              <p className=\"text-danger mb-0\">{errors.country?.message}</p>\n            </div>\n            <div className=\"login__field\">\n              <textarea\n                id=\"content\"\n                placeholder=\"Type content here\"\n                rows={5}\n                className=\"login__input\"\n                {...register(\"content\")}\n                maxLength={500}\n              ></textarea>\n              <p className=\"text-danger mb-0\">{errors.content?.message}</p>\n            </div>\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"button login__submit\"\n            >\n              <span className=\"button__text\">\n                {\" \"}\n                Submit {loading && <Loading />}\n              </span>\n              <i className=\"button__icon fas fa-chevron-right\"></i>\n            </button>\n          </form>\n        </div>\n        <div className=\"screen__background\">\n          <span className=\"screen__background__shape screen__background__shape4\"></span>\n          <span className=\"screen__background__shape screen__background__shape3\"></span>\n          <span className=\"screen__background__shape screen__background__shape2\"></span>\n          <span className=\"screen__background__shape screen__background__shape1\"></span>\n        </div>\n      </TalkToUsPopup>\n    </Fragment>\n  );\n};\n\nexport default TalkToUsNew;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\nconst TalkToUsPopup = (props) => {\n  const { show, onHide, closeButton, size, children, backdrop } = props;\n\n  return (\n    <Modal\n      scrollable={false}\n      size={size}\n      centered\n      backdrop={backdrop}\n      keyboard={false}\n      show={show}\n      onHide={onHide}\n      className=\"custom-modal\"\n    >\n      <Modal.Header className=\"border-0\" closeButton={closeButton}>\n        <Modal.Title className=\"font-weight-normal fs-2\">\n          Talk To Us\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{children}</Modal.Body>\n    </Modal>\n  );\n};\n\nexport default TalkToUsPopup;\n","import * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});"],"names":["_ref","faqData","React","className","Container","Row","Col","xxl","xl","lg","md","sm","StaticImage","imgClassName","src","alt","__imageData","require","Accordion","map","item","index","Item","key","eventKey","toString","Header","question","Body","answer","validationSchema","Yup","shape","email","label","required","props","_errors$email","loading","setLoading","useState","register","handleSubmit","formState","errors","reset","useForm","resolver","yupResolver","Modal","Object","assign","size","Title","autoComplete","onSubmit","async","values","resp","addToMailchimp","result","utils","msg","placeholder","id","type","maxLength","style","fontSize","color","fontFamily","fontStyle","fontWeight","lineHeight","message","disabled","Loading","name","contact","matches","country","mobile","when","schema","contactVal","url","service","content","_errors$name","_errors$mobile","_errors$contact","_errors$country","_errors$service","_errors$content","consultantShow","setConsultantShow","setContactVal","countries","Country","getAllCountries","handleConsultantTogg","db","setValue","getValues","trigger","mode","criteriaMode","contactValue","date","Date","clients","collection","addDoc","e","onChange","console","log","value","target","test","shouldValidate","handleMobileNoChange","undefined","selected","ele","ind","isoCode","rows","onClick","FormModal","onAddProps","show","onHide","title","allowFullScreen","referrerPolicy","isFor","talkToUsShow","setTalkToUsShow","handleToggleTalkToUs","Fragment","getButtonFor","TalkToUsPopup","closeButton","backdrop","keyboard","payload","setTimeout","children","scrollable","centered","isAccordionItemSelected","activeEventKey","Array","isArray","includes","context","displayName","AccordionCollapse","as","Component","bsPrefix","ref","useContext","AccordionContext","Collapse","in","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","accordionOnClick","onSelect","alwaysOpen","eventKeyPassed","filter","k","useAccordionButton","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","activeKey","flush","controlledProps","prefix","Button"],"sourceRoot":""}