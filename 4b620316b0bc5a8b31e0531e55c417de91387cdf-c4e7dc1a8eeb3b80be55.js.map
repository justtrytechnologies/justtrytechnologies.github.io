{"version":3,"file":"4b620316b0bc5a8b31e0531e55c417de91387cdf-c4e7dc1a8eeb3b80be55.js","mappings":"kKA0BA,IAtBmBA,IACjB,MAAM,GAAEC,GAAOD,EACf,OACEE,EAAAA,cAACC,EAAAA,EAAS,KACRD,EAAAA,cAAA,OAAKE,UAAU,eACbF,EAAAA,cAACG,EAAAA,EAAG,KACFH,EAAAA,cAACI,EAAAA,EAAG,CAACC,GAAI,IACPL,EAAAA,cAAA,OAAKE,UAAU,mBACbF,EAAAA,cAAA,UAAI,6BACwBA,EAAAA,cAAA,WAAM,wBAElCA,EAAAA,cAAA,UAAQM,KAAK,SAASJ,UAAU,eAC9BF,EAAAA,cAACO,EAAAA,EAAW,CAACC,MAAM,aAAaC,MAAM,SAASV,GAAIA,SAMnD,C,sFCkBhB,IApCYW,IAAkB,IAAjB,QAAEC,GAASD,EACtB,OACEV,EAAAA,cAAA,OAAKE,UAAU,eACbF,EAAAA,cAACC,EAAAA,EAAS,KACRD,EAAAA,cAACG,EAAAA,EAAG,CAACD,UAAU,WACbF,EAAAA,cAACI,EAAAA,EAAG,CAACQ,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGT,GAAI,GAAIU,GAAI,IACrCf,EAAAA,cAAA,OAAKE,UAAU,WACbF,EAAAA,cAACgB,EAAAA,EAAW,CACVC,IAAI,iDACJC,IAAI,oCAAmCC,YAAAC,EAAA,UAI7CpB,EAAAA,cAACI,EAAAA,EAAG,CAACQ,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGT,GAAI,GAAIU,GAAI,IACrCf,EAAAA,cAAA,OAAKE,UAAU,WACbF,EAAAA,cAAA,MAAIE,UAAU,aAAY,gDAG1BF,EAAAA,cAAA,OAAKE,UAAU,mBACbF,EAAAA,cAACqB,EAAAA,EAAS,KACPV,EAAQW,KAAI,CAACC,EAAMC,IAClBxB,EAAAA,cAACqB,EAAAA,EAAUI,KAAI,CAACC,IAAKF,EAAOG,SAAUH,EAAMI,YAC1C5B,EAAAA,cAACqB,EAAAA,EAAUQ,OAAM,KAAEN,EAAKO,UACxB9B,EAAAA,cAACqB,EAAAA,EAAUU,KAAI,KAAER,EAAKS,iBASlC,C,oICxBV,MAAMC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAAa1B,MAAM,QAAQ6B,WACjCC,MAAOJ,EAAAA,KAAa1B,MAAM,SAAS6B,WACnCE,QAASL,EAAAA,KAAa1B,MAAM,WAAW6B,WACvCG,OAAQN,EAAAA,KAAa1B,MAAM,WAAW6B,WACtCI,QAASP,EAAAA,KAAa1B,MAAM,WAAW6B,aA2LzC,IAxLqBvC,IAAW,IAAD4C,EAAAC,EAAAC,EAAAC,EAAAC,EAC7B,MAAM,GAAE/C,EAAE,MAAES,EAAQ,aAAY,MAAEC,GAAUX,GAEtC,EAACiD,EAAQ,EAACC,IAAcC,EAAAA,EAAAA,WAAS,IACjC,EAACC,EAAa,EAACC,IAAmBF,EAAAA,EAAAA,WAAS,GAE3CG,EAAYC,EAAAA,EAAQC,mBAEpB,SACJC,EAAQ,aACRC,EACAC,WAAW,OAAEC,GAAQ,MACrBC,IACEC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAY7B,KAOlB8B,EAAuBA,KAC3BC,QAAQC,IAAI,wBACZd,GAAiBD,GACjBS,GAAO,EA0DT,OACE3D,EAAAA,cAACkE,EAAAA,SAAQ,KA9BWzD,KACpB,OAAQA,GACN,IAAK,SAkBL,QACE,OACET,EAAAA,cAAA,QAAME,UAAU,cAAciE,QAASJ,GACpCvD,GAfP,IAAK,QACH,OACER,EAAAA,cAAA,QAAME,UAAU,gBAAgBiE,QAASJ,GACtCvD,GAGP,IAAK,MACH,OACER,EAAAA,cAAA,QAAME,UAAU,cAAciE,QAASJ,GACpCvD,GAST,EAKG4D,CAAa3D,GAUdT,EAAAA,cAACqE,EAAAA,EAAa,CACZC,KAAMpB,EACNqB,OAAQR,EACRS,aAAa,EACbC,KAAM,KACNC,SAAS,SACTC,UAAU,GAEV3E,EAAAA,cAAA,OAAKE,UAAU,mBACbF,EAAAA,cAAA,QAAM4E,SAAUpB,GA5EDqB,UACrB,MAAM,KAAEzC,EAAI,MAAEE,EAAK,QAAEC,EAAO,QAAEE,EAAO,OAAED,GAAWsC,EAC5CC,EAAU,CACd3C,OACAE,QACAC,UACAE,UACAD,SACAwC,KAAM,IAAIC,MAEZjC,GAAW,GACX,IACE,MAAMkC,GAAUC,EAAAA,EAAAA,IAAWpF,EAAI,iBACzBqF,EAAAA,EAAAA,IAAOF,EAASH,GACtBM,EAAAA,EAAAA,cAAoB,oCACpB1B,IACAX,GAAW,GACXsC,YAAW,KACTvB,GAAsB,GACrB,IACL,CAAE,MAAOwB,GACPF,EAAAA,EAAAA,WAAiB,yBACjBrC,GAAW,EACb,KAqDoD9C,UAAU,SACtDF,EAAAA,cAAA,OAAKE,UAAU,gBACbF,EAAAA,cAAA,KAAGE,UAAU,4BACbF,EAAAA,cAAA,QAAAwF,OAAAC,OAAA,CACEnF,KAAK,OACLJ,UAAU,gBACNqD,EAAS,QAAO,CACpBmC,YAAY,eAEd1F,EAAAA,cAAA,KAAGE,UAAU,oBAA+B,QAAbwC,EAAEgB,EAAOtB,YAAI,IAAAM,OAAA,EAAXA,EAAaiD,UAEhD3F,EAAAA,cAAA,OAAKE,UAAU,gBACbF,EAAAA,cAAA,KAAGE,UAAU,4BACbF,EAAAA,cAAA,QAAAwF,OAAAC,OAAA,CACEnF,KAAK,QACLJ,UAAU,gBACNqD,EAAS,SAAQ,CACrBmC,YAAY,WAEd1F,EAAAA,cAAA,KAAGE,UAAU,oBAAgC,QAAdyC,EAAEe,EAAOpB,aAAK,IAAAK,OAAA,EAAZA,EAAcgD,UAEjD3F,EAAAA,cAAA,OAAKE,UAAU,gBACbF,EAAAA,cAAA,KAAGE,UAAU,4BACbF,EAAAA,cAAA,QAAAwF,OAAAC,OAAA,CACEnF,KAAK,OACLJ,UAAU,eACVwF,YAAY,6BACRnC,EAAS,YAEfvD,EAAAA,cAAA,KAAGE,UAAU,oBAAiC,QAAf0C,EAAEc,EAAOlB,cAAM,IAAAI,OAAA,EAAbA,EAAe+C,UAElD3F,EAAAA,cAAA,OAAKE,UAAU,gBACbF,EAAAA,cAAA,KAAGE,UAAU,4BACbF,EAAAA,cAAA,SAAAwF,OAAAC,OAAA,CAAQvF,UAAU,gBAAmBqD,EAAS,YAC5CvD,EAAAA,cAAA,UAAQ4F,MAAM,IAAG,kBAChBxC,EAAU9B,KAAI,CAACuE,EAAKC,IAEjB9F,EAAAA,cAAA,UAAQ0B,IAAKoE,EAAKF,MAAOC,EAAIE,SAC1BF,EAAIzD,SAKbpC,EAAAA,cAAA,KAAGE,UAAU,oBAAkC,QAAhB2C,EAAEa,EAAOnB,eAAO,IAAAM,OAAA,EAAdA,EAAgB8C,UAEnD3F,EAAAA,cAAA,OAAKE,UAAU,gBACbF,EAAAA,cAAA,KAAGE,UAAU,4BACbF,EAAAA,cAAA,WAAAwF,OAAAC,OAAA,CACEO,GAAG,UACHN,YAAY,oBACZO,KAAM,EACN/F,UAAU,gBACNqD,EAAS,WAAU,CACvB2C,UAAW,OAEblG,EAAAA,cAAA,KAAGE,UAAU,oBAAkC,QAAhB4C,EAAEY,EAAOjB,eAAO,IAAAK,OAAA,EAAdA,EAAgB6C,UAEnD3F,EAAAA,cAAA,UACEM,KAAK,SACL6F,SAAUpD,EACV7C,UAAU,wBAEVF,EAAAA,cAAA,QAAME,UAAU,gBACb,IAAI,UACG6C,GAAW/C,EAAAA,cAACoG,EAAAA,EAAO,OAE7BpG,EAAAA,cAAA,KAAGE,UAAU,yCAInBF,EAAAA,cAAA,OAAKE,UAAU,sBACbF,EAAAA,cAAA,QAAME,UAAU,yDAChBF,EAAAA,cAAA,QAAME,UAAU,yDAChBF,EAAAA,cAAA,QAAME,UAAU,yDAChBF,EAAAA,cAAA,QAAME,UAAU,2DAGX,C,+CC7Kf,IAxBuBJ,IACrB,MAAM,KAAEwE,EAAI,OAAEC,EAAM,YAAEC,EAAW,KAAEC,EAAI,SAAE4B,EAAQ,SAAE3B,GAAa5E,EAEhE,OACEE,EAAAA,cAACsG,EAAAA,EAAK,CACJC,YAAY,EACZ9B,KAAMA,EACN+B,UAAQ,EACR9B,SAAUA,EACVC,UAAU,EACVL,KAAMA,EACNC,OAAQA,EACRrE,UAAU,gBAEVF,EAAAA,cAACsG,EAAAA,EAAMzE,OAAM,CAAC3B,UAAU,WAAWsE,YAAaA,GAC9CxE,EAAAA,cAACsG,EAAAA,EAAMG,MAAK,CAACvG,UAAU,2BAA0B,eAInDF,EAAAA,cAACsG,EAAAA,EAAMvE,KAAI,KAAEsE,GACP,C,uGC0DZ,IAzEgBvG,IACd,MAAM,GAAEC,GAAOD,EAEf,OACEE,EAAAA,cAAA,WAASE,UAAU,iBACjBF,EAAAA,cAACC,EAAAA,EAAS,KACRD,EAAAA,cAACG,EAAAA,EAAG,KACFH,EAAAA,cAACI,EAAAA,EAAG,CAACC,GAAI,IACPL,EAAAA,cAAA,OAAKE,UAAU,mBACbF,EAAAA,cAAA,OAAKE,UAAU,qBACbF,EAAAA,cAAA,OAAKE,UAAU,kBACbF,EAAAA,cAAC0G,EAAAA,GAAM,CACLC,QAAS,CAACC,EAAAA,IACVC,UAAW,WACXC,MAAO,IACPC,SAAU,CACRC,MAAO,KACPC,sBAAsB,GAExBC,MAAM,EACNC,cAAe,EACfjH,UAAU,YAEVF,EAAAA,cAACoH,EAAAA,GAAW,KACVpH,EAAAA,cAAA,UAAI,oBAENA,EAAAA,cAACoH,EAAAA,GAAW,KACVpH,EAAAA,cAAA,UAAI,SAENA,EAAAA,cAACoH,EAAAA,GAAW,KACVpH,EAAAA,cAAA,UAAI,oBAENA,EAAAA,cAACoH,EAAAA,GAAW,KACVpH,EAAAA,cAAA,UAAI,eAENA,EAAAA,cAACoH,EAAAA,GAAW,KACVpH,EAAAA,cAAA,UAAI,SAENA,EAAAA,cAACoH,EAAAA,GAAW,KACVpH,EAAAA,cAAA,UAAI,cAENA,EAAAA,cAACoH,EAAAA,GAAW,KACVpH,EAAAA,cAAA,UAAI,SAENA,EAAAA,cAACoH,EAAAA,GAAW,KACVpH,EAAAA,cAAA,UAAI,WAENA,EAAAA,cAACoH,EAAAA,GAAW,KACVpH,EAAAA,cAAA,UAAI,WAIVA,EAAAA,cAAA,MAAIE,UAAU,eAAc,wBAE9BF,EAAAA,cAAA,SAAG,6MAMHA,EAAAA,cAAA,OAAKE,UAAU,wBACbF,EAAAA,cAACO,EAAAA,EAAW,CAACC,MAAM,cAAcC,MAAM,QAAQV,GAAIA,KAErDC,EAAAA,cAAA,OAAKE,UAAU,4BACfF,EAAAA,cAAA,OAAKE,UAAU,iCAKf,C,sHC5EP,SAASmH,EAAwBC,EAAgB3F,GACtD,OAAO4F,MAAMC,QAAQF,GAAkBA,EAAeG,SAAS9F,GAAY2F,IAAmB3F,CAChG,CACA,MAAM+F,EAAuB,gBAAoB,CAAC,GAClDA,EAAQC,YAAc,mBACtB,Q,UCIA,MAAMC,EAAiC,cAAiB,EACtDC,GAAIC,EAAY,MAChBC,WACA7H,YACAmG,WACA1E,cACG7B,GACFkI,KACD,MAAM,eACJV,IACE,IAAAW,YAAWC,GAEf,OADAH,GAAW,QAAmBA,EAAU,uBACpB,SAAKI,EAAA,EAAU,CACjCH,IAAKA,EACLI,GAAIf,EAAwBC,EAAgB3F,MACzC7B,EACHI,UAAW,IAAWA,EAAW6H,GACjC1B,UAAuB,SAAKyB,EAAW,CACrCzB,SAAU,WAAegC,KAAKhC,MAEhC,IAEJuB,EAAkBD,YAAc,oBAChC,QChCA,MAAM,EAAuB,gBAAoB,CAC/ChG,SAAU,KAEZ,EAAQgG,YAAc,uBACtB,QCEA,MAAMW,EAA6B,cAAiB,EAElDT,GAAIC,EAAY,MAChBC,WACA7H,YACAqI,UACAC,aACAC,YACAC,SACAC,YACAC,cACG9I,GACFkI,KACDD,GAAW,QAAmBA,EAAU,kBACxC,MAAM,SACJpG,IACE,IAAAsG,YAAWY,GACf,OAAoB,SAAK,EAAmB,CAC1ClH,SAAUA,EACV4G,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACVvC,UAAuB,SAAKyB,EAAW,CACrCE,IAAKA,KACFlI,EACHI,UAAW,IAAWA,EAAW6H,MAEnC,IAEJO,EAAcX,YAAc,gBAC5B,QCLA,MAAMmB,EAA+B,cAAiB,EAEpDjB,GAAIC,EAAY,SAChBC,WACA7H,YACAiE,aACGrE,GACFkI,KACDD,GAAW,QAAmBA,EAAU,oBACxC,MAAM,SACJpG,IACE,IAAAsG,YAAWY,GACTE,EAxCD,SAA4BpH,EAAUwC,GAC3C,MAAM,eACJmD,EAAc,SACd0B,EAAQ,WACRC,IACE,IAAAhB,YAAWC,GACf,OAAO3C,IAKL,IAAI2D,EAAiBvH,IAAa2F,EAAiB,KAAO3F,EACtDsH,IAGEC,EAFA3B,MAAMC,QAAQF,GACZA,EAAeG,SAAS9F,GACT2F,EAAe6B,QAAOC,GAAKA,IAAMzH,IAEjC,IAAI2F,EAAgB3F,GAItB,CAACA,IAGV,MAAZqH,GAA4BA,EAASE,EAAgB3D,GAC1C,MAAXpB,GAA2BA,EAAQoB,EAAE,CAEzC,CAa2B8D,CAAmB1H,EAAUwC,IAChD,eACJmD,IACE,IAAAW,YAAWC,GAIf,MAHkB,WAAdJ,IACFhI,EAAMQ,KAAO,WAEK,SAAKwH,EAAW,CAClCE,IAAKA,EACL7D,QAAS4E,KACNjJ,EACH,gBAAiByH,MAAMC,QAAQF,GAAkBA,EAAeG,SAAS9F,GAAYA,IAAa2F,EAClGpH,UAAW,IAAWA,EAAW6H,GAAWV,EAAwBC,EAAgB3F,IAAa,cACjG,IAEJmH,EAAgBnB,YAAc,kBAC9B,QC1DA,MAAM2B,EAA+B,cAAiB,EAEpDzB,GAAIC,EAAY,KAChBC,WACA7H,YACAmG,WACAlC,aACGrE,GACFkI,KACDD,GAAW,QAAmBA,EAAU,qBACpB,SAAKD,EAAW,CAClCE,IAAKA,KACFlI,EACHI,UAAW,IAAWA,EAAW6H,GACjC1B,UAAuB,SAAK,EAAiB,CAC3ClC,QAASA,EACTkC,SAAUA,SAIhBiD,EAAgB3B,YAAc,kBAC9B,QCpBA,MAAM4B,EAA6B,cAAiB,EAElD1B,GAAIC,EAAY,MAChBC,WACA7H,YACAyB,cACG7B,GACFkI,KACDD,GAAW,QAAmBA,EAAU,kBACxC,MAAMyB,GAAe,IAAAC,UAAQ,KAAM,CACjC9H,cACE,CAACA,IACL,OAAoB,SAAKkH,EAAqBa,SAAU,CACtD9D,MAAO4D,EACPnD,UAAuB,SAAKyB,EAAW,CACrCE,IAAKA,KACFlI,EACHI,UAAW,IAAWA,EAAW6H,MAEnC,IAEJwB,EAAc5B,YAAc,gBAC5B,QChBA,MAAMtG,EAAyB,cAAiB,CAACvB,EAAOkI,KACtD,MAEEH,GAAIC,EAAY,MAAK,UACrB6B,EAAS,SACT5B,EAAQ,UACR7H,EAAS,SACT8I,EAAQ,MACRY,EAAK,WACLX,KACGY,IACD,QAAgB/J,EAAO,CACzB6J,UAAW,aAEPG,GAAS,QAAmB/B,EAAU,aACtCyB,GAAe,IAAAC,UAAQ,KAAM,CACjCnC,eAAgBqC,EAChBX,WACAC,gBACE,CAACU,EAAWX,EAAUC,IAC1B,OAAoB,SAAKf,EAAiBwB,SAAU,CAClD9D,MAAO4D,EACPnD,UAAuB,SAAKyB,EAAW,CACrCE,IAAKA,KACF6B,EACH3J,UAAW,IAAWA,EAAW4J,EAAQF,GAAS,GAAGE,cAEvD,IAEJzI,EAAUsG,YAAc,YACxB,MAAenC,OAAOC,OAAOpE,EAAW,CACtC0I,OAAQ,EACR5B,SAAU,EACV1G,KAAM,EACNI,OAAQ,EACRE,KAAM,G","sources":["webpack://justtry-app/./src/components/common/contactbutton.js","webpack://justtry-app/./src/components/common/faq.js","webpack://justtry-app/./src/components/common/talk-to-us-new.js","webpack://justtry-app/./src/components/common/talk-to-us-popup.js","webpack://justtry-app/./src/screens/main/banner.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionContext.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionCollapse.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionItemContext.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionBody.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionButton.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionHeader.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/AccordionItem.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/Accordion.js"],"sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport TalkToUsNew from \"./talk-to-us-new\";\r\n\r\nconst CtaButton = (props) => {\r\n  const { db } = props;\r\n  return (\r\n    <Container>\r\n      <div className=\"cta_btns_bg\">\r\n        <Row>\r\n          <Col md={12}>\r\n            <div className=\"cta_content_div\">\r\n              <h1>\r\n                Take Your Business to the <br /> Next Level With Us!\r\n              </h1>\r\n              <button type=\"submit\" className=\"cta_btn_div\">\r\n                <TalkToUsNew label=\"Talk to us\" isFor=\"banner\" db={db} />\r\n              </button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CtaButton;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Accordion } from \"react-bootstrap\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nconst Faq = ({ faqData }) => {\r\n  return (\r\n    <div className=\"faq_outline\">\r\n      <Container>\r\n        <Row className=\"faq_row\">\r\n          <Col xxl={6} xl={6} lg={6} md={12} sm={12}>\r\n            <div className=\"faq_lhs\">\r\n              <StaticImage\r\n                src=\"../../styles/assets/images/recentworks/faq.png\"\r\n                alt=\"Frequently asked questions poster\"\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col xxl={6} xl={6} lg={6} md={12} sm={12}>\r\n            <div className=\"faq_rhs\">\r\n              <h1 className=\"faq_title\">\r\n                Resolve your unanswered queries effortlessly\r\n              </h1>\r\n              <div className=\"faq_acc_wrapper\">\r\n                <Accordion>\r\n                  {faqData.map((item, index) => (\r\n                    <Accordion.Item key={index} eventKey={index.toString()}>\r\n                      <Accordion.Header>{item.question}</Accordion.Header>\r\n                      <Accordion.Body>{item.answer}</Accordion.Body>\r\n                    </Accordion.Item>\r\n                  ))}\r\n                </Accordion>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Faq;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport TalkToUsPopup from \"./talk-to-us-popup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Country } from \"country-state-city\";\r\nimport { collection, addDoc } from \"firebase/firestore/lite\";\r\nimport { utils } from \"../../core/helper\";\r\nimport Loading from \"./loading\";\r\nimport Banner from \"../../screens/main/banner\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().label(\"Name\").required(),\r\n  email: Yup.string().label(\"Email\").required(),\r\n  country: Yup.string().label(\"Country\").required(),\r\n  mobile: Yup.string().label(\"Contact\").required(),\r\n  content: Yup.string().label(\"Content\").required(),\r\n});\r\n\r\nconst TalkToUsNew = (props) => {\r\n  const { db, label = \"TALK TO US\", isFor } = props;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [talkToUsShow, setTalkToUsShow] = useState(false);\r\n\r\n  const countries = Country.getAllCountries();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   handleToggleTalkToUs(); //children function of interest\r\n  // }, [props.togglePopup]);\r\n\r\n  const handleToggleTalkToUs = () => {\r\n    console.log(\"handleToggleTalkToUs\");\r\n    setTalkToUsShow(!talkToUsShow);\r\n    reset();\r\n  };\r\n\r\n  const handleOnSubmit = async (values) => {\r\n    const { name, email, country, content, mobile } = values;\r\n    const payload = {\r\n      name,\r\n      email,\r\n      country,\r\n      content,\r\n      mobile,\r\n      date: new Date(),\r\n    };\r\n    setLoading(true);\r\n    try {\r\n      const clients = collection(db, \"clients\");\r\n      await addDoc(clients, payload);\r\n      utils.showSuccssMsg(\"We will contact/talk to you soon\");\r\n      reset();\r\n      setLoading(false);\r\n      setTimeout(() => {\r\n        handleToggleTalkToUs();\r\n      }, 1000);\r\n    } catch (e) {\r\n      utils.showErrMsg(\"Error adding document\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getButtonFor = (isFor) => {\r\n    switch (isFor) {\r\n      case \"banner\":\r\n        return (\r\n          <span className=\"primary_btn\" onClick={handleToggleTalkToUs}>\r\n            {label}\r\n          </span>\r\n        );\r\n      case \"about\":\r\n        return (\r\n          <span className=\"about_rhs_btn\" onClick={handleToggleTalkToUs}>\r\n            {label}\r\n          </span>\r\n        );\r\n      case \"cta\":\r\n        return (\r\n          <span className=\"cta_btn_div\" onClick={handleToggleTalkToUs}>\r\n            {label}\r\n          </span>\r\n        );\r\n      default:\r\n        return (\r\n          <span className=\"primary_btn\" onClick={handleToggleTalkToUs}>\r\n            {label}\r\n          </span>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {getButtonFor(isFor)}\r\n      {/* {isFor === \"banner\" ? (\r\n        <button  className=\"primary_btn\" type=\"button\"  onClick={handleToggleTalkToUs}>\r\n          {label}\r\n        </button>\r\n      ) : (\r\n        <button className=\"header_custom_btn\" onClick={handleToggleTalkToUs}>\r\n          {label}\r\n        </button>\r\n      )} */}\r\n      <TalkToUsPopup\r\n        show={talkToUsShow}\r\n        onHide={handleToggleTalkToUs}\r\n        closeButton={true}\r\n        size={\"lg\"}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <div className=\"screen__content\">\r\n          <form onSubmit={handleSubmit(handleOnSubmit)} className=\"login\">\r\n            <div className=\"login__field\">\r\n              <i className=\"login__icon fas fa-user\"></i>\r\n              <input\r\n                type=\"text\"\r\n                className=\"login__input\"\r\n                {...register(\"name\")}\r\n                placeholder=\"Your Name\"\r\n              />\r\n              <p className=\"text-danger mb-0\">{errors.name?.message}</p>\r\n            </div>\r\n            <div className=\"login__field\">\r\n              <i className=\"login__icon fas fa-lock\"></i>\r\n              <input\r\n                type=\"email\"\r\n                className=\"login__input\"\r\n                {...register(\"email\")}\r\n                placeholder=\"Email\"\r\n              />\r\n              <p className=\"text-danger mb-0\">{errors.email?.message}</p>\r\n            </div>\r\n            <div className=\"login__field\">\r\n              <i className=\"login__icon fas fa-lock\"></i>\r\n              <input\r\n                type=\"text\"\r\n                className=\"login__input\"\r\n                placeholder=\"Skype / Mobile / Whatsapp\"\r\n                {...register(\"mobile\")}\r\n              />\r\n              <p className=\"text-danger mb-0\">{errors.mobile?.message}</p>\r\n            </div>\r\n            <div className=\"login__field\">\r\n              <i className=\"login__icon fas fa-lock\"></i>\r\n              <select className=\"login__input\" {...register(\"country\")}>\r\n                <option value=\"\">Select Country</option>\r\n                {countries.map((ele, ind) => {\r\n                  return (\r\n                    <option key={ind} value={ele.isoCode}>\r\n                      {ele.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n              <p className=\"text-danger mb-0\">{errors.country?.message}</p>\r\n            </div>\r\n            <div className=\"login__field\">\r\n              <i className=\"login__icon fas fa-lock\"></i>\r\n              <textarea\r\n                id=\"content\"\r\n                placeholder=\"Type content here\"\r\n                rows={5}\r\n                className=\"login__input\"\r\n                {...register(\"content\")}\r\n                maxLength={500}\r\n              ></textarea>\r\n              <p className=\"text-danger mb-0\">{errors.content?.message}</p>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"button login__submit\"\r\n            >\r\n              <span className=\"button__text\">\r\n                {\" \"}\r\n                Submit {loading && <Loading />}\r\n              </span>\r\n              <i className=\"button__icon fas fa-chevron-right\"></i>\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"screen__background\">\r\n          <span className=\"screen__background__shape screen__background__shape4\"></span>\r\n          <span className=\"screen__background__shape screen__background__shape3\"></span>\r\n          <span className=\"screen__background__shape screen__background__shape2\"></span>\r\n          <span className=\"screen__background__shape screen__background__shape1\"></span>\r\n        </div>\r\n      </TalkToUsPopup>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TalkToUsNew;\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst TalkToUsPopup = (props) => {\r\n  const { show, onHide, closeButton, size, children, backdrop } = props;\r\n\r\n  return (\r\n    <Modal\r\n      scrollable={false}\r\n      size={size}\r\n      centered\r\n      backdrop={backdrop}\r\n      keyboard={false}\r\n      show={show}\r\n      onHide={onHide}\r\n      className=\"custom-modal\"\r\n    >\r\n      <Modal.Header className=\"border-0\" closeButton={closeButton}>\r\n        <Modal.Title className=\"font-weight-normal fs-2\">\r\n          Talk To Us\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TalkToUsPopup;\r\n","import React from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay } from \"swiper/modules\";\r\nimport TalkToUsNew from \"../../components/common/talk-to-us-new\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst Banner = (props) => {\r\n  const { db } = props;\r\n\r\n  return (\r\n    <section className=\"main_hero_sec\">\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div className=\"hero_center_div\">\r\n              <div className=\"hero_banner_title\">\r\n                <div className=\"hero_title_sec\">\r\n                  <Swiper\r\n                    modules={[Autoplay]}\r\n                    direction={\"vertical\"}\r\n                    speed={900}\r\n                    autoplay={{\r\n                      delay: 1500,\r\n                      disableOnInteraction: false,\r\n                    }}\r\n                    loop={true}\r\n                    slidesPerView={1}\r\n                    className=\"mySwiper\"\r\n                  >\r\n                    <SwiperSlide>\r\n                      <h1>NFT Marketplace</h1>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                      <h1>Web3</h1>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                      <h1>Crypto Exchange</h1>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                      <h1>Blockchain</h1>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                      <h1>Game</h1>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                      <h1>Metaverse</h1>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                      <h1>Defi</h1>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                      <h1>Wallet</h1>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                      <h1>Dapp</h1>\r\n                    </SwiperSlide>\r\n                  </Swiper>\r\n                </div>\r\n                <h2 className=\"stable_text\">Development Company</h2>\r\n              </div>\r\n              <p>\r\n                Our Team specializes in modernizing and automating industries,\r\n                enterprises, and Businesses with modern digital transformation\r\n                technology solutions like blockchain, AI, Metaverse, Crypto,\r\n                NFT, and Web3.\r\n              </p>\r\n              <div className=\"main_hero_btns_group\">\r\n                <TalkToUsNew label=\"Get started\" isFor=\"label\" db={db} />\r\n              </div>\r\n              <div className=\"main_hero_first_ellipse\"></div>\r\n              <div className=\"main_hero_second_ellipse\"></div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});"],"names":["props","db","React","Container","className","Row","Col","md","type","TalkToUsNew","label","isFor","_ref","faqData","xxl","xl","lg","sm","StaticImage","src","alt","__imageData","require","Accordion","map","item","index","Item","key","eventKey","toString","Header","question","Body","answer","validationSchema","Yup","shape","name","required","email","country","mobile","content","_errors$name","_errors$email","_errors$mobile","_errors$country","_errors$content","loading","setLoading","useState","talkToUsShow","setTalkToUsShow","countries","Country","getAllCountries","register","handleSubmit","formState","errors","reset","useForm","resolver","yupResolver","handleToggleTalkToUs","console","log","Fragment","onClick","getButtonFor","TalkToUsPopup","show","onHide","closeButton","size","backdrop","keyboard","onSubmit","async","values","payload","date","Date","clients","collection","addDoc","utils","setTimeout","e","Object","assign","placeholder","message","value","ele","ind","isoCode","id","rows","maxLength","disabled","Loading","children","Modal","scrollable","centered","Title","Swiper","modules","Autoplay","direction","speed","autoplay","delay","disableOnInteraction","loop","slidesPerView","SwiperSlide","isAccordionItemSelected","activeEventKey","Array","isArray","includes","context","displayName","AccordionCollapse","as","Component","bsPrefix","ref","useContext","AccordionContext","Collapse","in","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","accordionOnClick","onSelect","alwaysOpen","eventKeyPassed","filter","k","useAccordionButton","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","activeKey","flush","controlledProps","prefix","Button"],"sourceRoot":""}