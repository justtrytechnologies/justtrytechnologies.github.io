{"version":3,"file":"component---src-pages-blog-list-index-js-5ba605fe1ba253343e2f.js","mappings":"2JAgCA,IA5BmBA,IAAgB,IAAf,MAAEC,GAAOD,EAC3B,OACEE,EAAAA,cAACC,EAAAA,EAAS,CAACC,OAAK,EAACC,UAAU,QACzBH,EAAAA,cAACI,EAAAA,EAAG,KACFJ,EAAAA,cAAA,OAAK,aAAW,aAAaG,UAAU,qBACrCH,EAAAA,cAAA,MAAIG,UAAU,cACXJ,EAAMM,KAAI,CAACC,EAAMC,IAChBP,EAAAA,cAAA,MACEQ,IAAKD,EACL,eAAcA,IAAUR,EAAMU,OAAS,EAAI,OAAS,KACpDN,UAAS,mBACPI,IAAUR,EAAMU,OAAS,EAAI,UAAY,KAG1CF,IAAUR,EAAMU,OAAS,EACxBH,EAAKI,KAELV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAIN,EAAKO,MAAOP,EAAKI,YAO7B,C,qCCLhB,IArBkBI,IAChB,MAAM,EAACC,EAAsB,EAACC,IAA4BC,EAAAA,EAAAA,UAASH,IAC7D,EAACI,EAAU,EAACC,IAAgBF,EAAAA,EAAAA,WAAS,GAY3C,MAAO,CACLF,wBACAK,cAZqBC,IACrBF,GAAa,GAKbH,EAHED,EAAwBD,EAASO,EAC7BN,EAAwBD,EACxBO,GAENF,GAAa,EAAM,EAMnBD,YACD,C,qPCyWH,MApXmBI,IACjB,MAAM,GAAEC,GAAOD,EACf,IAAIE,EAAQ,EACZ,MAAM,sBAAET,EAAqB,cAAEK,EAAa,UAAEF,IAAcO,EAAAA,EAAAA,GAAS,IAC/D,EAACC,EAAc,EAACC,IAAoBV,EAAAA,EAAAA,UAAS,KAC7C,EAACW,EAAU,EAACC,IAAgBZ,EAAAA,EAAAA,WAAS,IACrC,EAACa,EAAU,EAACC,IAAgBd,EAAAA,EAAAA,UAAS,IAuD3C,OAjCAe,EAAAA,EAAAA,YAAU,KACJJ,GAAaL,GArBGU,WACpB,IAOE,MAAMX,QAAaY,EAAAA,EAAAA,WAAiBX,EAAI,SACpCD,aAAI,EAAJA,EAAMb,QAAS,EACjBsB,EAAaT,GAEbS,EAAa,GAEjB,CAAE,MAAOI,GACPJ,EAAa,IACbK,QAAQC,IAAI,QAASF,EACvB,GAKEG,CAAcf,EAChB,GACC,CAACK,EAAWL,KAEfS,EAAAA,EAAAA,YAAU,KACRH,GAAa,EAAK,GACjB,KAEHG,EAAAA,EAAAA,YAAU,KACR,GAAIJ,IACEE,aAAS,EAATA,EAAWrB,QAAS,EAAG,CACzB,MAAM8B,EAAoBN,MAAOV,EAAIiB,KACnC,IAAIC,EAAkB,GAClBC,QAAuBR,EAAAA,EAAAA,WAAiBX,EAAI,aAChD,IAAK,IAAIoB,KAAWH,EAAO,CACzB,IAAK,IAAII,KAAiBF,GACpBC,aAAO,EAAPA,EAASE,SAASD,aAAa,EAAbA,EAAepC,OACnCmC,EAAQG,UAAYF,aAAa,EAAbA,EAAepB,MACnCiB,EAAgBM,KAAKJ,IAGzBhB,EAAiBc,EACnB,GAEFF,EAAkBhB,EAAIO,EACxB,CACF,GACC,CAACF,EAAWL,EAAIO,IAEnBJ,EAAcsB,MAAK,CAACC,EAAGC,IAAMA,EAAEJ,UAAYG,EAAEH,YAG3C9C,EAAAA,cAACC,EAAAA,EAAS,CAACC,OAAK,EAACC,UAAU,QACxBuB,aAAa,EAAbA,EAAejB,QAAS,GACvBT,EAAAA,cAACmD,EAAAA,SAAQ,KACPnD,EAAAA,cAAA,OAAKG,UAAU,mBACbH,EAAAA,cAAA,UAAI,mBAENA,EAAAA,cAAA,OAAKG,UAAU,gBACbH,EAAAA,cAACC,EAAAA,EAAS,CAACE,UAAU,2BACnBH,EAAAA,cAACI,EAAAA,EAAG,CAACD,UAAU,gBACZuB,aAAa,EAAbA,EAAe0B,MAAM,EAAG,GAAG/C,KAAI,CAACgD,EAAKC,KACvBA,EACA,GAAM,IACjB9B,GAAgB,GAGhBxB,EAAAA,cAACuD,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,GAAItD,UAAU,UAC3BqB,EAAQ,GAAM,EACbxB,EAAAA,cAAC0D,EAAAA,EAAI,CAAClD,IAAK6C,EAAIM,GAAIxD,UAAU,gBAC3BH,EAAAA,cAACI,EAAAA,EAAG,CAACD,UAAU,WACbH,EAAAA,cAACuD,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAItD,UAAU,UAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAKyC,aAAG,EAAHA,EAAKR,MACZ1C,UAAU,kCAEVH,EAAAA,cAAA,OACE2D,GAAG,cACHxD,UAAU,uBAEVH,EAAAA,cAAC6D,EAAAA,EAAW,CACVC,IAAG,0CACHC,IAAKV,aAAG,EAAHA,EAAKW,UACV7D,UAAU,cAAa8D,YAAAC,EAAA,QAEzBlE,EAAAA,cAAA,OAAKG,UAAU,oBACbH,EAAAA,cAAA,OACEmE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,QAELvE,EAAAA,cAAA,QACEwE,EAAE,mCACFD,KAAK,eAOjBvE,EAAAA,cAACuD,EAAAA,EAAG,CACFK,GAAI,EACJH,GAAI,GACJtD,UAAU,yCAEVH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAKyC,aAAG,EAAHA,EAAKR,MACZ1C,UAAU,qBAEVH,EAAAA,cAAA,KAAGG,UAAU,gBACVsE,IAAOpB,aAAG,EAAHA,EAAKqB,mBAAmBC,OAC9B,iBAIJ3E,EAAAA,cAAA,KAAGG,UAAU,iBAAiBkD,aAAG,EAAHA,EAAKuB,OACnC5E,EAAAA,cAAA,KAAGG,UAAU,wBACVkD,aAAG,EAAHA,EAAKwB,kBAAkBzB,MAAM,EAAG,KAAM,WAOjDpD,EAAAA,cAAC0D,EAAAA,EAAI,CAAClD,IAAK6C,EAAIM,GAAIxD,UAAU,gBAC3BH,EAAAA,cAACI,EAAAA,EAAG,CAACD,UAAU,WACbH,EAAAA,cAACuD,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAItD,UAAU,oBAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAKyC,aAAG,EAAHA,EAAKR,MACZ1C,UAAU,qBAEVH,EAAAA,cAAA,KAAGG,UAAU,gBACVsE,IAAOpB,aAAG,EAAHA,EAAKqB,mBAAmBC,OAC9B,iBAIJ3E,EAAAA,cAAA,KAAGG,UAAU,iBAAiBkD,aAAG,EAAHA,EAAKuB,OACnC5E,EAAAA,cAAA,KAAGG,UAAU,wBACVkD,aAAG,EAAHA,EAAKwB,kBAAkBzB,MAAM,EAAG,KAAM,SAI7CpD,EAAAA,cAACuD,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAItD,UAAU,iBAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAKyC,aAAG,EAAHA,EAAKR,MACZ1C,UAAU,kCAEVH,EAAAA,cAAA,OACE2D,GAAG,cACHxD,UAAU,uBAEVH,EAAAA,cAAC6D,EAAAA,EAAW,CACVC,IAAG,0CACHC,IAAKV,aAAG,EAAHA,EAAKW,UACV7D,UAAU,cAAa8D,YAAAC,EAAA,QAGzBlE,EAAAA,cAAA,OAAKG,UAAU,qBACbH,EAAAA,cAAA,OACEmE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,QAELvE,EAAAA,cAAA,QACEwE,EAAE,+CACFD,KAAK,0BAkBtCzC,aAAS,EAATA,EAAWrB,QAAS,GACnBT,EAAAA,cAACmD,EAAAA,SAAQ,KACPnD,EAAAA,cAAA,OACEG,UAAU,kBACV2E,MAAO,CACLC,WAAY,gBAGd/E,EAAAA,cAAA,MACE8E,MAAO,CACLE,MAAO,YAEV,iBAIHhF,EAAAA,cAAA,OACEG,UAAU,eACV2E,MAAO,CACLC,WAAY,gBAGd/E,EAAAA,cAACC,EAAAA,EAAS,CAACE,UAAU,2BACnBH,EAAAA,cAACI,EAAAA,EAAG,CAACD,UAAU,gBACZ2B,aAAS,EAATA,EAAWsB,MAAM,EAAGrC,GAAuBV,KAAI,CAACgD,EAAKC,KACvCA,EACA,GAAM,IACjB9B,GAAgB,GAEc6B,SAAAA,EAAK4B,WAErC,OACEjF,EAAAA,cAACuD,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,GAAItD,UAAU,UAC3BqB,EAAQ,GAAM,EACbxB,EAAAA,cAAC0D,EAAAA,EAAI,CAAClD,IAAK6C,EAAIM,GAAIxD,UAAU,gBAC3BH,EAAAA,cAACI,EAAAA,EAAG,CAACD,UAAU,WACbH,EAAAA,cAACuD,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAItD,UAAU,UAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAKyC,aAAG,EAAHA,EAAKR,MACZ1C,UAAU,iCAEVH,EAAAA,cAAA,OACE2D,GAAG,cACHxD,UAAU,uBAEVH,EAAAA,cAAC6D,EAAAA,EAAW,CACVC,IACE,0CAEFC,IAAKV,aAAG,EAAHA,EAAKW,UACV7D,UAAU,cAAa8D,YAAAC,EAAA,QAEzBlE,EAAAA,cAAA,OAAKG,UAAU,oBACbH,EAAAA,cAAA,OACEmE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,QAELvE,EAAAA,cAAA,QACEwE,EAAE,mCACFD,KAAK,eAOjBvE,EAAAA,cAACuD,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAItD,UAAU,UAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAKyC,aAAG,EAAHA,EAAKR,MACZ1C,UAAU,qBAEVH,EAAAA,cAAA,KAAGG,UAAU,gBACVsE,IAAOpB,aAAG,EAAHA,EAAKqB,mBAAmBC,OAC9B,iBAGJ3E,EAAAA,cAAA,KAAGG,UAAU,iBAAiBkD,aAAG,EAAHA,EAAKuB,OACnC5E,EAAAA,cAAA,KAAGG,UAAU,wBACVkD,aAAG,EAAHA,EAAKwB,kBAAkBzB,MAAM,EAAG,KAAM,WAOjDpD,EAAAA,cAAC0D,EAAAA,EAAI,CAAClD,IAAK6C,EAAIM,GAAIxD,UAAU,gBAC3BH,EAAAA,cAACI,EAAAA,EAAG,CAACD,UAAU,WACbH,EAAAA,cAACuD,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAItD,UAAU,oBAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAKyC,aAAG,EAAHA,EAAKR,MACZ1C,UAAU,qBAEVH,EAAAA,cAAA,KAAGG,UAAU,gBACVsE,IAAOpB,aAAG,EAAHA,EAAKqB,mBAAmBC,OAC9B,iBAIJ3E,EAAAA,cAAA,KAAGG,UAAU,iBAAiBkD,aAAG,EAAHA,EAAKuB,OACnC5E,EAAAA,cAAA,KAAGG,UAAU,wBACVkD,aAAG,EAAHA,EAAKwB,kBAAkBzB,MAAM,EAAG,KAAM,SAI7CpD,EAAAA,cAACuD,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAItD,UAAU,iBAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAKyC,aAAG,EAAHA,EAAKR,MACZ1C,UAAU,kCAEVH,EAAAA,cAAA,OACE2D,GAAG,cACHxD,UAAU,uBAQVH,EAAAA,cAAC6D,EAAAA,EAAW,CACVC,IAAG,0CACHC,IAAKV,aAAG,EAAHA,EAAKW,UACV7D,UAAU,cAAa8D,YAAAC,EAAA,QAGzBlE,EAAAA,cAAA,OAAKG,UAAU,qBACbH,EAAAA,cAAA,OACEmE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,QAELvE,EAAAA,cAAA,QACEwE,EAAE,+CACFD,KAAK,iBAUnB,IAITxD,KAA0Be,aAAS,EAATA,EAAWrB,SACpCT,EAAAA,cAACuD,EAAAA,EAAG,CAAC2B,GAAI,IACPlF,EAAAA,cAACmF,EAAAA,EAAM,CACLC,SACElE,GAAaH,IAAyBe,aAAS,EAATA,EAAWrB,QAEnDN,UAAU,gBACVkF,QAASA,IAAMjE,EAAcL,EAAwB,IACtD,aACYG,GAAalB,EAAAA,cAACsF,EAAAA,EAAO,YAStC,E,8BChXhB,MAqBaC,EAAQC,IAAW,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7B,MAAM,KAAExE,GAASkE,EACXO,EAAUzE,SAAmB,QAAfmE,EAAJnE,EAAM0E,qBAAa,IAAAP,GAAO,QAAPC,EAAnBD,EAAqBQ,aAAK,IAAAP,OAAtB,EAAJA,EAA4BQ,MAAMC,IAAW,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAC1D,OAAOL,SAAW,QAANC,EAALD,EAAOM,YAAI,IAAAL,GAAiB,QAAjBC,EAAXD,EAAaM,uBAAe,IAAAL,GAAQ,QAARC,EAA5BD,EAA8BM,cAAM,IAAAL,GAAU,QAAVC,EAApCD,EAAsCM,gBAAQ,IAAAL,GAAK,QAALC,EAA9CD,EAAgDzC,WAAG,IAAA0C,OAA9C,EAALA,EAAqDK,SAC1D,eACD,IAEH,OACE7G,EAAAA,cAAC8G,EAAAA,EAAG,CACFlC,MAAM,qDACNmC,UAAU,qDACVC,YAAY,mVACZb,MAAOJ,SAAa,QAANJ,EAAPI,EAASU,YAAI,IAAAd,GAAiB,QAAjBC,EAAbD,EAAee,uBAAe,IAAAd,GAAQ,QAARC,EAA9BD,EAAgCe,cAAM,IAAAd,GAAU,QAAVC,EAAtCD,EAAwCe,gBAAQ,IAAAd,OAAzC,EAAPA,EAAkDhC,KACpD,EAIX,MAtCqB0B,IAAW,IAADyB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7B,MAAMC,GAAMC,EAAAA,EAAAA,IAAcnC,SAAW,QAANyB,EAALzB,EAAOlE,YAAI,IAAA2F,GAAM,QAANC,EAAXD,EAAaW,YAAI,IAAAV,GAAc,QAAdC,EAAjBD,EAAmBW,oBAAY,IAAAV,OAA1B,EAALA,EAAiCW,WACrDvG,GAAKwG,EAAAA,EAAAA,IAAaL,GAMxB,OACE1H,EAAAA,cAACgI,EAAAA,EAAM,CAACzG,GAAIA,GACVvB,EAAAA,cAACiI,EAAAA,EAAU,CAAClI,MAPQ,CACtB,CAAEW,KAAM,OAAQG,KAAM,KACtB,CAAEH,KAAM,QAASG,KAAM,OAMrBb,EAAAA,cAACkI,EAAS,CACR1F,MAAOgD,SAAW,QAAN4B,EAAL5B,EAAOlE,YAAI,IAAA8F,OAAN,EAALA,EAAae,YACpBC,WAAY5C,SAAW,QAAN6B,EAAL7B,EAAOlE,YAAI,IAAA+F,GAAe,QAAfC,EAAXD,EAAarB,qBAAa,IAAAsB,OAArB,EAALA,EAA4BrB,MACxC1E,GAAIA,EACJ8G,QAAS7C,SAAW,QAAN+B,EAAL/B,EAAOlE,YAAI,IAAAiG,GAAM,QAANC,EAAXD,EAAaK,YAAI,IAAAJ,GAAc,QAAdC,EAAjBD,EAAmBK,oBAAY,IAAAJ,OAA1B,EAALA,EAAiCY,UAErC,C,gICtBb,MAAMC,EAAuB,cAE7B,EACEC,WACApI,YACAqI,UACAC,GAAIC,EAAY,SACblD,GACFmD,KACD,MAAMC,GAAS,QAAmBL,EAAU,YAC5C,OAAoB,SAAKG,EAAW,CAClCC,IAAKA,EACLxI,UAAW,IAAWqI,EAAU,GAAGI,KAAUJ,IAAYI,EAAQzI,MAC9DqF,GACH,IAEJ8C,EAAQO,YAAc,UACtB,Q,UCfA,MAAMC,EAA0B,cAAiB,EAC/CP,WACApI,YAEAsI,GAAIC,EAAY,SACblD,GACFmD,KACD,MAAMC,GAAS,QAAmBL,EAAU,eACtCQ,GAAe,IAAAC,UAAQ,KAAM,CACjCC,mBAAoBL,KAClB,CAACA,IACL,OAAoB,SAAKM,EAAA,EAAkBC,SAAU,CACnDC,MAAOL,EACPM,UAAuB,SAAKX,EAAW,CACrCC,IAAKA,KACFnD,EACHrF,UAAW,IAAWA,EAAWyI,MAEnC,IAEJE,EAAWD,YAAc,aACzB,QCnBA,MAAMS,GAAgB,EAAAC,EAAA,GAAiB,MACjCC,GAAgB,EAAAD,EAAA,GAAiB,MACjCE,GAAW,EAAAC,EAAA,GAAmB,aAC9BC,GAAY,EAAAD,EAAA,GAAmB,aAAc,CACjDhB,UAAWY,IAEPM,GAAe,EAAAF,EAAA,GAAmB,gBAAiB,CACvDhB,UAAWc,IAEPK,GAAW,EAAAH,EAAA,GAAmB,YAAa,CAC/ChB,UAAW,MAEPoB,GAAW,EAAAJ,EAAA,GAAmB,YAAa,CAC/ChB,UAAW,MAEPqB,GAAa,EAAAL,EAAA,GAAmB,eAChCM,GAAiB,EAAAN,EAAA,GAAmB,oBACpChG,EAAoB,cAAiB,EACzC6E,WACApI,YACA8J,KACAvJ,OACAwJ,SACAC,QAAO,EACPd,WAEAZ,GAAIC,EAAY,SACblD,GACFmD,KACD,MAAMC,GAAS,QAAmBL,EAAU,QAC5C,OAAoB,SAAKG,EAAW,CAClCC,IAAKA,KACFnD,EACHrF,UAAW,IAAWA,EAAWyI,EAAQqB,GAAM,MAAMA,IAAMvJ,GAAQ,QAAQA,IAAQwJ,GAAU,UAAUA,KACvGb,SAAUc,GAAoB,SAAKV,EAAU,CAC3CJ,SAAUA,IACPA,GACL,IAEJ3F,EAAKmF,YAAc,OACnB,MAAeuB,OAAOC,OAAO3G,EAAM,CACjC4G,IAAK,EACLC,MAAOZ,EACPa,SAAUZ,EACVa,KAAMhB,EACN9I,KAAMkJ,EACNa,KAAMZ,EACNa,OAAQ,EACRC,OAAQb,EACRc,WAAYb,G","sources":["webpack://justtry-app/./src/components/common/breadcrumb.js","webpack://justtry-app/./src/components/common/loadmore.js","webpack://justtry-app/./src/screens/blog-list/index.js","webpack://justtry-app/./src/pages/blog-list/index.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/CardImg.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\nconst BreadCrumb = ({ items }) => {\r\n  return (\r\n    <Container fluid className=\"gx-0\">\r\n      <Row>\r\n        <nav aria-label=\"breadcrumb\" className=\"custom-breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            {items.map((item, index) => (\r\n              <li\r\n                key={index}\r\n                aria-current={index === items.length - 1 ? \"page\" : null}\r\n                className={`breadcrumb-item${\r\n                  index === items.length - 1 ? \" active\" : \"\"\r\n                }`}\r\n              >\r\n                {index === items.length - 1 ? (\r\n                  item.text\r\n                ) : (\r\n                  <Link to={item.link}>{item.text}</Link>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </nav>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BreadCrumb;\r\n","import { useState } from \"react\";\r\n\r\nconst LoadMore = (nbItem) => {\r\n  const [numberItemsPagination, setNumberItemsPagination] = useState(nbItem);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const loadMoreItems = (arrayLength) => {\r\n    setIsLoading(true);\r\n    const numberItems =\r\n      numberItemsPagination + nbItem < arrayLength\r\n        ? numberItemsPagination + nbItem\r\n        : arrayLength;\r\n    setNumberItemsPagination(numberItems);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return {\r\n    numberItemsPagination,\r\n    loadMoreItems,\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default LoadMore;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport { utils } from \"@core/helper\";\r\nimport moment from \"moment\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\nimport Loading from \"@components/common/loading\";\r\nimport LoadMore from \"@components/common/loadmore\";\r\n\r\nconst BlogsData = (data) => {\r\n  const { db } = data;\r\n  let count = 0;\r\n  const { numberItemsPagination, loadMoreItems, isLoading } = LoadMore(6);\r\n  const [trendingBlogs, setTrendingBlogs] = useState([]);\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const [blogsList, setBlogsList] = useState([]);\r\n\r\n  const loadBlogsList = async (db) => {\r\n    try {\r\n      // const collectionRef = collection(db, \"blog\")\r\n      //   const querySnapshot = await getDocs(collectionRef);\r\n      //   const data = querySnapshot.docs.map((doc) => ({\r\n      //     id: doc.id, // Each document id\r\n      //     ...doc.data(), // Spread the document data\r\n      //   }));\r\n      const data = await utils.getDocData(db, \"blog\");\r\n      if (data?.length > 0) {\r\n        setBlogsList(data);\r\n      } else {\r\n        setBlogsList([]);\r\n      }\r\n    } catch (err) {\r\n      setBlogsList([]);\r\n      console.log(\"err:;\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isMounted && db) {\r\n      loadBlogsList(db);\r\n    }\r\n  }, [isMounted, db]);\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isMounted) {\r\n      if (blogsList?.length > 0) {\r\n        const sortTrendingBlogs = async (db, blogs) => {\r\n          let addViewCountArr = [];\r\n          let blogsCountsArr = await utils.getDocData(db, \"viewCount\");\r\n          for (let blogObj of blogs) {\r\n            for (let blogsCountDoc of blogsCountsArr) {\r\n              if (blogObj?.slug === blogsCountDoc?.key) {\r\n                blogObj.viewCount = blogsCountDoc?.count;\r\n                addViewCountArr.push(blogObj);\r\n              }\r\n            }\r\n            setTrendingBlogs(addViewCountArr);\r\n          }\r\n        };\r\n        sortTrendingBlogs(db, blogsList);\r\n      }\r\n    }\r\n  }, [isMounted, db, blogsList]);\r\n\r\n  trendingBlogs.sort((a, b) => b.viewCount - a.viewCount);\r\n\r\n  return (\r\n    <Container fluid className=\"p-0\">\r\n      {trendingBlogs?.length > 0 && (\r\n        <Fragment>\r\n          <div className=\"blog_details_bg\">\r\n            <h1>Trending Blogs</h1>\r\n          </div>\r\n          <div className=\"blog_list_bg\">\r\n            <Container className=\"blog_container_position\">\r\n              <Row className=\"blog_row_gap\">\r\n                {trendingBlogs?.slice(0, 6).map((ele, ind) => {\r\n                  let blogId = ind;\r\n                  if (blogId % 2 === 0) {\r\n                    count = count + 1;\r\n                  }\r\n                  return (\r\n                    <Col lg={6} xs={12} className=\"p-lg-0\">\r\n                      {count % 2 !== 0 ? (\r\n                        <Card key={ele.id} className=\"jt_blog_card\">\r\n                          <Row className=\"mx-lg-0\">\r\n                            <Col sm={6} xs={12} className=\"p-sm-0\">\r\n                              <Link\r\n                                to={`${ele?.slug}`}\r\n                                className=\"text-decoration-none  d-block \"\r\n                              >\r\n                                <div\r\n                                  id=\"arrow_right\"\r\n                                  className=\"jt_blog_img_wrapper\"\r\n                                >\r\n                                  <StaticImage\r\n                                    src={`../../styles/assets/images/no-image.jpg`}\r\n                                    alt={ele?.image_alt}\r\n                                    className=\"jt_blog_img\"\r\n                                  />\r\n                                  <div className=\"blog_arrow_first\">\r\n                                    <svg\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                      width=\"15\"\r\n                                      height=\"18\"\r\n                                      viewBox=\"0 0 15 18\"\r\n                                      fill=\"none\"\r\n                                    >\r\n                                      <path\r\n                                        d=\"M0 9L15 0.339745L15 17.6603L0 9Z\"\r\n                                        fill=\"white\"\r\n                                      />\r\n                                    </svg>\r\n                                  </div>\r\n                                </div>\r\n                              </Link>\r\n                            </Col>\r\n                            <Col\r\n                              sm={6}\r\n                              xs={12}\r\n                              className=\"p-sm-0 d-flex justify-content-center \"\r\n                            >\r\n                              <Link\r\n                                to={`${ele?.slug}`}\r\n                                className=\"jt_blog_card_body\"\r\n                              >\r\n                                <p className=\"jt_blog_date\">\r\n                                  {moment(ele?.blog_created_date).format(\r\n                                    \"DD MMMM YYYY\"\r\n                                  )}\r\n                                </p>\r\n\r\n                                <p className=\"jt_blog_title\">{ele?.title}</p>\r\n                                <p className=\"jt_blog_description\">\r\n                                  {ele?.short_description.slice(0, 65) + \"...\"}\r\n                                </p>\r\n                              </Link>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      ) : (\r\n                        <Card key={ele.id} className=\"jt_blog_card\">\r\n                          <Row className=\"mx-lg-0\">\r\n                            <Col sm={6} xs={12} className=\"p-sm-0 order_two\">\r\n                              <Link\r\n                                to={`${ele?.slug}`}\r\n                                className=\"jt_blog_card_body\"\r\n                              >\r\n                                <p className=\"jt_blog_date\">\r\n                                  {moment(ele?.blog_created_date).format(\r\n                                    \"DD MMMM YYYY\"\r\n                                  )}\r\n                                </p>\r\n\r\n                                <p className=\"jt_blog_title\">{ele?.title}</p>\r\n                                <p className=\"jt_blog_description\">\r\n                                  {ele?.short_description.slice(0, 65) + \"...\"}\r\n                                </p>\r\n                              </Link>\r\n                            </Col>\r\n                            <Col sm={6} xs={12} className=\"p-0 order_one\">\r\n                              <Link\r\n                                to={`${ele?.slug}`}\r\n                                className=\"text-decoration-none  d-block \"\r\n                              >\r\n                                <div\r\n                                  id=\"arrow_right\"\r\n                                  className=\"jt_blog_img_wrapper\"\r\n                                >\r\n                                  <StaticImage\r\n                                    src={`../../styles/assets/images/no-image.jpg`}\r\n                                    alt={ele?.image_alt}\r\n                                    className=\"jt_blog_img\"\r\n                                  />\r\n\r\n                                  <div className=\"blog_arrow_second\">\r\n                                    <svg\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                      width=\"15\"\r\n                                      height=\"18\"\r\n                                      viewBox=\"0 0 15 18\"\r\n                                      fill=\"none\"\r\n                                    >\r\n                                      <path\r\n                                        d=\"M15 9.22363L0 17.8839L0 0.563378L15 9.22363Z\"\r\n                                        fill=\"white\"\r\n                                      />\r\n                                    </svg>\r\n                                  </div>\r\n                                </div>\r\n                              </Link>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      )}\r\n                    </Col>\r\n                  );\r\n                })}\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n      {blogsList?.length > 0 && (\r\n        <Fragment>\r\n          <div\r\n            className=\"blog_details_bg\"\r\n            style={{\r\n              background: \"transparent\",\r\n            }}\r\n          >\r\n            <h2\r\n              style={{\r\n                color: \"#7534fc\",\r\n              }}\r\n            >\r\n              Latest Blogs\r\n            </h2>\r\n          </div>\r\n          <div\r\n            className=\"blog_list_bg\"\r\n            style={{\r\n              background: \"transparent\",\r\n            }}\r\n          >\r\n            <Container className=\"blog_container_position\">\r\n              <Row className=\"blog_row_gap\">\r\n                {blogsList?.slice(0, numberItemsPagination).map((ele, ind) => {\r\n                  let blogId = ind;\r\n                  if (blogId % 2 === 0) {\r\n                    count = count + 1;\r\n                  }\r\n                  let imagePath = `../../images/${ele?.image_path}.png`;\r\n\r\n                  return (\r\n                    <Col lg={6} xs={12} className=\"p-lg-0\">\r\n                      {count % 2 !== 0 ? (\r\n                        <Card key={ele.id} className=\"jt_blog_card\">\r\n                          <Row className=\"mx-lg-0\">\r\n                            <Col sm={6} xs={12} className=\"p-sm-0\">\r\n                              <Link\r\n                                to={`${ele?.slug}`}\r\n                                className=\"text-decoration-none d-block \"\r\n                              >\r\n                                <div\r\n                                  id=\"arrow_right\"\r\n                                  className=\"jt_blog_img_wrapper\"\r\n                                >\r\n                                  <StaticImage\r\n                                    src={\r\n                                      \"../../styles/assets/images/no-image.jpg\"\r\n                                    }\r\n                                    alt={ele?.image_alt}\r\n                                    className=\"jt_blog_img\"\r\n                                  />\r\n                                  <div className=\"blog_arrow_first\">\r\n                                    <svg\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                      width=\"15\"\r\n                                      height=\"18\"\r\n                                      viewBox=\"0 0 15 18\"\r\n                                      fill=\"none\"\r\n                                    >\r\n                                      <path\r\n                                        d=\"M0 9L15 0.339745L15 17.6603L0 9Z\"\r\n                                        fill=\"white\"\r\n                                      />\r\n                                    </svg>\r\n                                  </div>\r\n                                </div>\r\n                              </Link>\r\n                            </Col>\r\n                            <Col sm={6} xs={12} className=\"p-sm-0\">\r\n                              <Link\r\n                                to={`${ele?.slug}`}\r\n                                className=\"jt_blog_card_body\"\r\n                              >\r\n                                <p className=\"jt_blog_date\">\r\n                                  {moment(ele?.blog_created_date).format(\r\n                                    \"DD MMMM YYYY\"\r\n                                  )}\r\n                                </p>\r\n                                <p className=\"jt_blog_title\">{ele?.title}</p>\r\n                                <p className=\"jt_blog_description\">\r\n                                  {ele?.short_description.slice(0, 65) + \"...\"}\r\n                                </p>\r\n                              </Link>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      ) : (\r\n                        <Card key={ele.id} className=\"jt_blog_card\">\r\n                          <Row className=\"mx-lg-0\">\r\n                            <Col sm={6} xs={12} className=\"p-sm-0 order_two\">\r\n                              <Link\r\n                                to={`${ele?.slug}`}\r\n                                className=\"jt_blog_card_body\"\r\n                              >\r\n                                <p className=\"jt_blog_date\">\r\n                                  {moment(ele?.blog_created_date).format(\r\n                                    \"DD MMMM YYYY\"\r\n                                  )}\r\n                                </p>\r\n\r\n                                <p className=\"jt_blog_title\">{ele?.title}</p>\r\n                                <p className=\"jt_blog_description\">\r\n                                  {ele?.short_description.slice(0, 65) + \"...\"}\r\n                                </p>\r\n                              </Link>\r\n                            </Col>\r\n                            <Col sm={6} xs={12} className=\"p-0 order_one\">\r\n                              <Link\r\n                                to={`${ele?.slug}`}\r\n                                className=\"text-decoration-none  d-block \"\r\n                              >\r\n                                <div\r\n                                  id=\"arrow_right\"\r\n                                  className=\"jt_blog_img_wrapper\"\r\n                                >\r\n                                  {/* <Image\r\n                                      src={siteUrl + blog?.node?.blogImg}\r\n                                      alt={ele?.image_alt}\r\n                                      className=\"jt_blog_img\"\r\n                                    /> */}\r\n\r\n                                  <StaticImage\r\n                                    src={`../../styles/assets/images/no-image.jpg`}\r\n                                    alt={ele?.image_alt}\r\n                                    className=\"jt_blog_img\"\r\n                                  />\r\n\r\n                                  <div className=\"blog_arrow_second\">\r\n                                    <svg\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                      width=\"15\"\r\n                                      height=\"18\"\r\n                                      viewBox=\"0 0 15 18\"\r\n                                      fill=\"none\"\r\n                                    >\r\n                                      <path\r\n                                        d=\"M15 9.22363L0 17.8839L0 0.563378L15 9.22363Z\"\r\n                                        fill=\"white\"\r\n                                      />\r\n                                    </svg>\r\n                                  </div>\r\n                                </div>\r\n                              </Link>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      )}\r\n                    </Col>\r\n                  );\r\n                })}\r\n\r\n                {numberItemsPagination !== blogsList?.length && (\r\n                  <Col md={12}>\r\n                    <Button\r\n                      disabled={\r\n                        isLoading || numberItemsPagination >= blogsList?.length\r\n                      }\r\n                      className=\"blog_load_btn\"\r\n                      onClick={() => loadMoreItems(numberItemsPagination + 2)}\r\n                    >\r\n                      Load more {isLoading && <Loading />}\r\n                    </Button>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BlogsData;\r\n","import Layout from \"../../components/layout\";\r\nimport Seo from \"../../components/seo\";\r\nimport React from \"react\";\r\nimport BlogsData from \"../../screens/blog-list\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore/lite\";\r\nimport { graphql } from \"gatsby\";\r\nimport BreadCrumb from \"../../components/common/breadcrumb\";\r\n\r\nconst BlogsScreen = (props) => {\r\n  const app = initializeApp(props?.data?.site?.siteMetadata?.firestore);\r\n  const db = getFirestore(app);\r\n  const breadcrumbLinks = [\r\n    { text: \"Home\", link: \"/\" },\r\n    { text: \"Blogs\", link: \"\" },\r\n  ];\r\n\r\n  return (\r\n    <Layout db={db}>\r\n      <BreadCrumb items={breadcrumbLinks} />\r\n      <BlogsData\r\n        blogs={props?.data?.allDataJson}\r\n        blogImages={props?.data?.allImageSharp?.edges}\r\n        db={db}\r\n        siteUrl={props?.data?.site?.siteMetadata?.siteUrl}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const Head = (props) => {\r\n  const { data } = props;\r\n  const logoObj = data?.allImageSharp?.edges?.find((image) => {\r\n    return image?.node?.gatsbyImageData?.images?.fallback?.src?.includes(\r\n      \"new_logo.png\"\r\n    );\r\n  });\r\n  return (\r\n    <Seo\r\n      title=\"Justtry Technologies Blog: Updates, news, Articles\"\r\n      metaTitle=\"Justtry Technologies Blog: Updates, news, Articles\"\r\n      description=\"Dive into the world of innovation with Justtry Technologies' blog. Uncover the latest tech trends, gain insights from industry experts, and empower yourself with cutting-edge knowledge. Explore a fusion of expertise and creativity as we unravel the future of technology together. Justtry Technologies - where curiosity meets innovation.\"\r\n      image={logoObj?.node?.gatsbyImageData?.images?.fallback?.src}\r\n    ></Seo>\r\n  );\r\n};\r\n\r\nexport default BlogsScreen;\r\n\r\nexport const query = graphql`\r\n  query MyQuery {\r\n    allImageSharp {\r\n      edges {\r\n        node {\r\n          gatsbyImageData\r\n          id\r\n        }\r\n      }\r\n    }\r\n    allDataJson {\r\n      edges {\r\n        node {\r\n          id\r\n          keyId\r\n          slug\r\n          author_name\r\n          blog_created_date\r\n          title\r\n          short_description\r\n          description\r\n          meta_title\r\n          meta_description\r\n          image\r\n          category\r\n          tags\r\n        }\r\n      }\r\n      pageInfo {\r\n        perPage\r\n        hasNextPage\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        firestore {\r\n          apiKey\r\n          appId\r\n          authDomain\r\n          messagingSenderId\r\n          projectId\r\n          storageBucket\r\n        }\r\n        siteUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["_ref","items","React","Container","fluid","className","Row","map","item","index","key","length","text","Link","to","link","nbItem","numberItemsPagination","setNumberItemsPagination","useState","isLoading","setIsLoading","loadMoreItems","arrayLength","data","db","count","LoadMore","trendingBlogs","setTrendingBlogs","isMounted","setIsMounted","blogsList","setBlogsList","useEffect","async","utils","err","console","log","loadBlogsList","sortTrendingBlogs","blogs","addViewCountArr","blogsCountsArr","blogObj","blogsCountDoc","slug","viewCount","push","sort","a","b","Fragment","slice","ele","ind","Col","lg","xs","Card","id","sm","StaticImage","src","alt","image_alt","__imageData","require","xmlns","width","height","viewBox","fill","d","moment","blog_created_date","format","title","short_description","style","background","color","image_path","md","Button","disabled","onClick","Loading","Head","props","_data$allImageSharp","_data$allImageSharp$e","_logoObj$node","_logoObj$node$gatsbyI","_logoObj$node$gatsbyI2","_logoObj$node$gatsbyI3","logoObj","allImageSharp","edges","find","image","_image$node","_image$node$gatsbyIma","_image$node$gatsbyIma2","_image$node$gatsbyIma3","_image$node$gatsbyIma4","node","gatsbyImageData","images","fallback","includes","Seo","metaTitle","description","_props$data","_props$data$site","_props$data$site$site","_props$data2","_props$data3","_props$data3$allImage","_props$data4","_props$data4$site","_props$data4$site$sit","app","initializeApp","site","siteMetadata","firestore","getFirestore","Layout","BreadCrumb","BlogsData","allDataJson","blogImages","siteUrl","CardImg","bsPrefix","variant","as","Component","ref","prefix","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","border","body","Object","assign","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}