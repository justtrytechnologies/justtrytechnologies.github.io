{"version":3,"file":"component---src-pages-blogs-js-21933f81b3e7e1ee250a.js","mappings":"uIAWA,SAASA,EAAGC,GAAoC,IAADC,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAUL,EAC3C,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBG,MAExC,OACEO,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQD,EAAkBN,EAAK,MAAMM,EAAiBN,GACtDO,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAAST,IACnCO,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,SAA0B,QAAjBX,EAAAI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBa,SAAM,KAC/DJ,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAAST,IACpCO,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASL,IACzCH,EAGP,CAEAN,EAAIiB,aAAe,CACjBb,YAAY,IAQd,K,+GChBA,MAnCmBc,IAAU,IAADC,EAC1B,MAAQD,KAAME,GAAcF,EAE5B,OADAG,QAAQC,IAAI,cAAeF,GAEzBR,EAAAA,cAAA,WAASW,UAAU,kBAAkBC,GAAG,WACtCZ,EAAAA,cAAA,OAAKW,UAAU,kBACbX,EAAAA,cAAA,MAAIW,UAAU,gDAA+C,UAE/DX,EAAAA,cAAA,OAAKW,UAAU,6CACZH,SAAgB,QAAPD,EAATC,EAAWK,aAAK,IAAAN,OAAP,EAATA,EAAkBO,KAAI,CAACC,EAAKC,KAC3B,MAAM,KAAEC,GAASF,EACjB,OACEf,EAAAA,cAACkB,EAAAA,KAAI,CAACC,GAAE,GAAKF,EAAKhB,MAChBD,EAAAA,cAAA,OAAKoB,IAAKJ,EAAKL,UAAU,oCACvBX,EAAAA,cAAA,OAAKW,UAAU,kCACbX,EAAAA,cAAA,OAAKqB,IAAKJ,EAAKK,MAAOC,IAAI,UAAUZ,UAAU,2BAEhDX,EAAAA,cAAA,OAAKW,UAAU,aACbX,EAAAA,cAAA,OAAKW,UAAU,mBACbX,EAAAA,cAAA,UAAKiB,EAAKhB,MACVD,EAAAA,cAAA,UAAKiB,EAAKO,UACVxB,EAAAA,cAAA,OAAKW,UAAU,YACbX,EAAAA,cAAA,SAAIiB,EAAKQ,SAKZ,KAIL,ECGd,MA/BqBC,IAAW,IAADC,EAC7BlB,QAAQC,IAAI,UAAWgB,GACvB,MAAM,EAACE,EAAO,EAACC,IAAaC,EAAAA,EAAAA,UAAS,CACnCC,KAAM,EACNC,MAAO,IAETvB,QAAQC,IAAI,WAAYkB,GAUxB,OACE5B,EAAAA,cAACiC,EAAAA,EAAM,KACLjC,EAAAA,cAACZ,EAAAA,EAAG,CAACK,MAAM,SACXO,EAAAA,cAACkC,EAAS,CAAC5B,KAAMoB,SAAW,QAANC,EAALD,EAAOpB,YAAI,IAAAqB,OAAN,EAALA,EAAaQ,cAC9BnC,EAAAA,cAAA,UACEoC,MAAO,CAAEC,QAAS,OAAQC,OAAQ,QAClC3B,UAAU,gBACV4B,QAfmBC,KACvBX,EAAU,IACLD,EACHI,OAAOJ,aAAM,EAANA,EAAQI,OAAQ,IAEzBvB,QAAQC,IAAI,YAAY,GAWrB,aAGM,C","sources":["webpack://justtry-app/./src/components/seo.js","webpack://justtry-app/./src/screens/blogs/index.js","webpack://justtry-app/./src/pages/blogs.js"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n  const defaultTitle = site.siteMetadata?.title;\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n};\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Seo;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst BlogsData = (data) => {\r\n  const { data: propsData } = data;\r\n  console.log(\"propsData::\", propsData);\r\n  return (\r\n    <section className=\"section-develop\" id=\"ourteam\">\r\n      <div className=\"container grid\">\r\n        <h3 className=\"bottomAnimation heading-tertiary servicehead\">Blogs</h3>\r\n      </div>\r\n      <div className=\"container grid grid--3-cols margin-top-md\">\r\n        {propsData?.edges?.map((ele, ind) => {\r\n          const { node } = ele;\r\n          return (\r\n            <Link to={`${node.name}`}>\r\n              <div key={ind} className=\"developer card border-0 show p-0\">\r\n                <div className=\"card-header p-0 w-100 border-0\">\r\n                  <img src={node.image} alt=\"Members\" className=\"rounded blog-card-img\" />\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"developer-inner\">\r\n                    <h4>{node.name}</h4>\r\n                    <h6>{node.language}</h6>\r\n                    <div className=\"cta-text\">\r\n                      <p>{node.bio}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BlogsData;\r\n","import Layout from \"../components/layout\";\r\nimport Seo from \"../components/seo\";\r\nimport React, { useState } from \"react\";\r\nimport BlogsData from \"../screens/blogs\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nconst BlogsScreen = (props) => {\r\n  console.log(\"props::\", props);\r\n  const [filter, setFilter] = useState({\r\n    skip: 0,\r\n    limit: 3,\r\n  });\r\n  console.log(\"filter::\", filter);\r\n\r\n  const handlePagination = () => {\r\n    setFilter({\r\n      ...filter,\r\n      limit: filter?.limit + 3,\r\n    });\r\n    console.log(\"graphql::\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Seo title=\"Home\" />\r\n      <BlogsData data={props?.data?.allDataJson} />\r\n      <button\r\n        style={{ display: \"flex\", margin: \"auto\" }}\r\n        className=\"btn btn--form\"\r\n        onClick={handlePagination}\r\n      >\r\n        Load More\r\n      </button>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogsScreen;\r\n\r\n// export const pageQuery = graphql`\r\n//   query ($skip: Int!, $limit: Int!) {\r\n//     allDataJson(\r\n//       sort: { fields: [frontmatter___date], order: DESC }\r\n//       skip: $skip\r\n//       limit: $limit\r\n//     ) {\r\n//       edges {\r\n//         node {\r\n//           id\r\n//           bio\r\n//           image\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n\r\nexport const query = graphql`\r\n  query MyQuery {\r\n    allDataJson(limit: 10, skip: 0) {\r\n      edges {\r\n        node {\r\n          id\r\n          bio\r\n          image\r\n          name\r\n          language\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["Seo","_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","defaultProps","data","_propsData$edges","propsData","console","log","className","id","edges","map","ele","ind","node","Link","to","key","src","image","alt","language","bio","props","_props$data","filter","setFilter","useState","skip","limit","Layout","BlogsData","allDataJson","style","display","margin","onClick","handlePagination"],"sourceRoot":""}