{"version":3,"file":"1c4bf396-10478bfa8e9c82c7a4f2.js","mappings":"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","sources":["webpack://justtry-app/./node_modules/@firebase/firestore/dist/lite/index.cjs.js"],"sourcesContent":["import { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, getDefaultEmulatorHostnameAndPort, createMockUserToken, getModularInstance, deepEqual } from '@firebase/util';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass User {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ User.UNAUTHENTICATED = new User(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nUser.GOOGLE_CREDENTIALS = new User(\"google-credentials-uid\"), User.FIRST_PARTY = new User(\"first-party-uid\"), \nUser.MOCK_USER = new User(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet d = \"10.3.1\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst f = new Logger(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function setLogLevel(t) {\n    f.setLogLevel(t);\n}\n\nfunction __PRIVATE_logDebug(t, ...e) {\n    if (f.logLevel <= LogLevel.DEBUG) {\n        const r = e.map(__PRIVATE_argToString);\n        f.debug(`Firestore (${d}): ${t}`, ...r);\n    }\n}\n\nfunction __PRIVATE_logError(t, ...e) {\n    if (f.logLevel <= LogLevel.ERROR) {\n        const r = e.map(__PRIVATE_argToString);\n        f.error(`Firestore (${d}): ${t}`, ...r);\n    }\n}\n\n/**\n * @internal\n */ function __PRIVATE_logWarn(t, ...e) {\n    if (f.logLevel <= LogLevel.WARN) {\n        const r = e.map(__PRIVATE_argToString);\n        f.warn(`Firestore (${d}): ${t}`, ...r);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function __PRIVATE_argToString(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        /** Formats an object as a JSON string, suitable for logging. */\n        return function __PRIVATE_formatJSON(t) {\n            return JSON.stringify(t);\n        }(t);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function fail(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${d}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw __PRIVATE_logError(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function __PRIVATE_hardAssert(t, e) {\n    t || fail();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function __PRIVATE_debugCast(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const E = \"ok\", m = \"cancelled\", A = \"unknown\", T = \"invalid-argument\", P = \"deadline-exceeded\", R = \"not-found\", I = \"already-exists\", V = \"permission-denied\", p = \"unauthenticated\", y = \"resource-exhausted\", w = \"failed-precondition\", g = \"aborted\", F = \"out-of-range\", v = \"unimplemented\", D = \"internal\", b = \"unavailable\", C = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class FirestoreError extends FirebaseError {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class __PRIVATE_Deferred {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class __PRIVATE_OAuthToken {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class __PRIVATE_EmptyAuthCredentialsProvider {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(User.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class __PRIVATE_EmulatorAuthCredentialsProvider {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class __PRIVATE_LiteAuthCredentialsProvider {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (__PRIVATE_hardAssert(\"string\" == typeof t.accessToken), \n        new __PRIVATE_OAuthToken(t.accessToken, new User(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class __PRIVATE_FirstPartyToken {\n    constructor(t, e, r) {\n        this.t = t, this.i = e, this.o = r, this.type = \"FirstParty\", this.user = User.FIRST_PARTY, \n        this.u = new Map;\n    }\n    /**\n     * Gets an authorization token, using a provided factory function, or return\n     * null.\n     */    l() {\n        return this.o ? this.o() : null;\n    }\n    get headers() {\n        this.u.set(\"X-Goog-AuthUser\", this.t);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.u.set(\"Authorization\", t), this.i && this.u.set(\"X-Goog-Iam-Authorization-Token\", this.i), \n        this.u;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class __PRIVATE_FirstPartyAuthCredentialsProvider {\n    constructor(t, e, r) {\n        this.t = t, this.i = e, this.o = r;\n    }\n    getToken() {\n        return Promise.resolve(new __PRIVATE_FirstPartyToken(this.t, this.i, this.o));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(User.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass AppCheckToken {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class __PRIVATE_LiteAppCheckTokenProvider {\n    constructor(t) {\n        this.h = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (__PRIVATE_hardAssert(\"string\" == typeof t.token), \n        new AppCheckToken(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass DatabaseInfo {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param longPollingOptions Options that configure long-polling.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, r, n, i, s, o, a, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = r, this.host = n, this.ssl = i, \n        this.forceLongPolling = s, this.autoDetectLongPolling = o, this.longPollingOptions = a, \n        this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass DatabaseId {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new DatabaseId(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof DatabaseId && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass BasePath {\n    constructor(t, e, r) {\n        void 0 === e ? e = 0 : e > t.length && fail(), void 0 === r ? r = t.length - e : r > t.length - e && fail(), \n        this.segments = t, this.offset = e, this.len = r;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === BasePath.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof BasePath ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, r = this.limit(); e < r; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const r = Math.min(t.length, e.length);\n        for (let n = 0; n < r; n++) {\n            const r = t.get(n), i = e.get(n);\n            if (r < i) return -1;\n            if (r > i) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class ResourcePath extends BasePath {\n    construct(t, e, r) {\n        return new ResourcePath(t, e, r);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const r of t) {\n            if (r.indexOf(\"//\") >= 0) throw new FirestoreError(T, `Invalid segment (${r}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...r.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new ResourcePath(e);\n    }\n    static emptyPath() {\n        return new ResourcePath([]);\n    }\n}\n\nconst S = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class FieldPath$1 extends BasePath {\n    construct(t, e, r) {\n        return new FieldPath$1(t, e, r);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return S.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        FieldPath$1.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new FieldPath$1([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let r = \"\", n = 0;\n        const __PRIVATE_addCurrentSegment = () => {\n            if (0 === r.length) throw new FirestoreError(T, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(r), r = \"\";\n        };\n        let i = !1;\n        for (;n < t.length; ) {\n            const e = t[n];\n            if (\"\\\\\" === e) {\n                if (n + 1 === t.length) throw new FirestoreError(T, \"Path has trailing escape character: \" + t);\n                const e = t[n + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new FirestoreError(T, \"Path has invalid escape sequence: \" + t);\n                r += e, n += 2;\n            } else \"`\" === e ? (i = !i, n++) : \".\" !== e || i ? (r += e, n++) : (__PRIVATE_addCurrentSegment(), \n            n++);\n        }\n        if (__PRIVATE_addCurrentSegment(), i) throw new FirestoreError(T, \"Unterminated ` in path: \" + t);\n        return new FieldPath$1(e);\n    }\n    static emptyPath() {\n        return new FieldPath$1([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class DocumentKey {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new DocumentKey(ResourcePath.fromString(t));\n    }\n    static fromName(t) {\n        return new DocumentKey(ResourcePath.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new DocumentKey(ResourcePath.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === ResourcePath.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return ResourcePath.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new DocumentKey(new ResourcePath(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function __PRIVATE_validateNonEmptyArgument(t, e, r) {\n    if (!r) throw new FirestoreError(T, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction __PRIVATE_validateDocumentPath(t) {\n    if (!DocumentKey.isDocumentKey(t)) throw new FirestoreError(T, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function __PRIVATE_validateCollectionPath(t) {\n    if (DocumentKey.isDocumentKey(t)) throw new FirestoreError(T, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction __PRIVATE_valueDescription(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function __PRIVATE_tryGetCustomObjectType(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : fail();\n}\n\nfunction __PRIVATE_cast(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new FirestoreError(T, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const r = __PRIVATE_valueDescription(t);\n            throw new FirestoreError(T, `Expected type '${e.name}', but it was: ${r}`);\n        }\n    }\n    return t;\n}\n\nfunction __PRIVATE_validatePositiveNumber(t, e) {\n    if (e <= 0) throw new FirestoreError(T, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Compares two `ExperimentalLongPollingOptions` objects for equality.\n */\n/**\n * Creates and returns a new `ExperimentalLongPollingOptions` with the same\n * option values as the given instance.\n */\nfunction __PRIVATE_cloneLongPollingOptions(t) {\n    const e = {};\n    return void 0 !== t.timeoutSeconds && (e.timeoutSeconds = t.timeoutSeconds), e;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The value returned from the most recent invocation of\n * `generateUniqueDebugId()`, or null if it has never been invoked.\n */ let N = null;\n\n/**\n * Generates and returns an initial value for `lastUniqueDebugId`.\n *\n * The returned value is randomly selected from a range of integers that are\n * represented as 8 hexadecimal digits. This means that (within reason) any\n * numbers generated by incrementing the returned number by 1 will also be\n * represented by 8 hexadecimal digits. This leads to all \"IDs\" having the same\n * length when converted to a hexadecimal string, making reading logs containing\n * these IDs easier to follow. And since the return value is randomly selected\n * it will help to differentiate between logs from different executions.\n */\n/**\n * Generates and returns a unique ID as a hexadecimal string.\n *\n * The returned ID is intended to be used in debug logging messages to help\n * correlate log messages that may be spatially separated in the logs, but\n * logically related. For example, a network connection could include the same\n * \"debug ID\" string in all of its log messages to help trace a specific\n * connection over time.\n *\n * @return the 10-character generated ID (e.g. \"0xa1b2c3d4\").\n */\nfunction __PRIVATE_generateUniqueDebugId() {\n    return null === N ? N = function __PRIVATE_generateInitialUniqueDebugId() {\n        return 268435456 + Math.round(2147483648 * Math.random());\n    }() : N++, \"0x\" + N.toString(16);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function __PRIVATE_isNullOrUndefined(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function __PRIVATE_isNegativeZero(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst O = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar q, B;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction __PRIVATE_mapCodeFromHttpStatus(t) {\n    if (void 0 === t) return __PRIVATE_logError(\"RPC_ERROR\", \"HTTP error has no status\"), \n    A;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return E;\n\n      case 400:\n        // Bad Request\n        return w;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return p;\n\n      case 403:\n        // Forbidden\n        return V;\n\n      case 404:\n        // Not Found\n        return R;\n\n      case 409:\n        // Conflict\n        return g;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return F;\n\n      case 429:\n        // Too Many Requests\n        return y;\n\n      case 499:\n        // Client Closed Request\n        return m;\n\n      case 500:\n        // Internal Server Error\n        return A;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return v;\n\n      case 503:\n        // Service Unavailable\n        return b;\n\n      case 504:\n        // Gateway Timeout\n        return P;\n\n      default:\n        return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? w : t >= 500 && t < 600 ? D : A;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (B = q || (q = {}))[B.OK = 0] = \"OK\", B[B.CANCELLED = 1] = \"CANCELLED\", B[B.UNKNOWN = 2] = \"UNKNOWN\", \nB[B.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", B[B.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", \nB[B.NOT_FOUND = 5] = \"NOT_FOUND\", B[B.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", B[B.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nB[B.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", B[B.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nB[B.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", B[B.ABORTED = 10] = \"ABORTED\", \nB[B.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", B[B.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nB[B.INTERNAL = 13] = \"INTERNAL\", B[B.UNAVAILABLE = 14] = \"UNAVAILABLE\", B[B.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass __PRIVATE_FetchConnection extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass __PRIVATE_RestConnection {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\", r = encodeURIComponent(this.databaseId.projectId), n = encodeURIComponent(this.databaseId.database);\n        this.m = e + \"://\" + t.host, this.A = `projects/${r}/databases/${n}`, this.T = \"(default)\" === this.databaseId.database ? `project_id=${r}` : `project_id=${r}&database_id=${n}`;\n    }\n    get P() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    R(t, e, r, n, i) {\n        const s = __PRIVATE_generateUniqueDebugId(), o = this.I(t, e);\n        __PRIVATE_logDebug(\"RestConnection\", `Sending RPC '${t}' ${s}:`, o, r);\n        const a = {\n            \"google-cloud-resource-prefix\": this.A,\n            \"x-goog-request-params\": this.T\n        };\n        return this.V(a, n, i), this.p(t, o, a, r).then((e => (__PRIVATE_logDebug(\"RestConnection\", `Received RPC '${t}' ${s}: `, e), \n        e)), (e => {\n            throw __PRIVATE_logWarn(\"RestConnection\", `RPC '${t}' ${s} failed with error: `, e, \"url: \", o, \"request:\", r), \n            e;\n        }));\n    }\n    g(t, e, r, n, i, s) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.R(t, e, r, n, i);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    V(t, e, r) {\n        t[\"X-Goog-Api-Client\"] = \n        // SDK_VERSION is updated to different value at runtime depending on the entry point,\n        // so we need to get its value when we need it in a function.\n        function __PRIVATE_getGoogApiClientValue() {\n            return \"gl-js/ fire/\" + d;\n        }(), \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, r) => t[r] = e)), r && r.headers.forEach(((e, r) => t[r] = e));\n    }\n    I(t, e) {\n        const r = O[t];\n        return `${this.m}/v1/${e}:${r}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.F = e;\n    }\n    v(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async p(t, e, r, n) {\n        var i;\n        const s = JSON.stringify(n);\n        let o;\n        try {\n            o = await this.F(e, {\n                method: \"POST\",\n                headers: r,\n                body: s\n            });\n        } catch (t) {\n            const e = t;\n            throw new FirestoreError(__PRIVATE_mapCodeFromHttpStatus(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (i = null == t ? void 0 : t.error) || void 0 === i ? void 0 : i.message;\n            throw new FirestoreError(__PRIVATE_mapCodeFromHttpStatus(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Concrete implementation of the Aggregate type.\n */\nclass __PRIVATE_AggregateImpl {\n    constructor(t, e, r) {\n        this.alias = t, this.D = e, this.fieldPath = r;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */ function __PRIVATE_randomBytes(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), r = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(r); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) r[e] = Math.floor(256 * Math.random());\n    return r;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class __PRIVATE_AutoId {\n    static C() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let r = \"\";\n        for (;r.length < 20; ) {\n            const n = __PRIVATE_randomBytes(40);\n            for (let i = 0; i < n.length; ++i) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            r.length < 20 && n[i] < e && (r += t.charAt(n[i] % t.length));\n        }\n        return r;\n    }\n}\n\nfunction __PRIVATE_primitiveComparator(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function __PRIVATE_arrayEquals(t, e, r) {\n    return t.length === e.length && t.every(((t, n) => r(t, e[n])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function __PRIVATE_objectSize(t) {\n    let e = 0;\n    for (const r in t) Object.prototype.hasOwnProperty.call(t, r) && e++;\n    return e;\n}\n\nfunction forEach(t, e) {\n    for (const r in t) Object.prototype.hasOwnProperty.call(t, r) && e(r, t[r]);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An error encountered while decoding base64 string.\n */\nclass __PRIVATE_Base64DecodeError extends Error {\n    constructor() {\n        super(...arguments), this.name = \"Base64DecodeError\";\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass ByteString {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = function __PRIVATE_decodeBase64(t) {\n            try {\n                return atob(t);\n            } catch (t) {\n                // Check that `DOMException` is defined before using it to avoid\n                // \"ReferenceError: Property 'DOMException' doesn't exist\" in react-native.\n                // (https://github.com/firebase/firebase-js-sdk/issues/7115)\n                throw \"undefined\" != typeof DOMException && t instanceof DOMException ? new __PRIVATE_Base64DecodeError(\"Invalid base64 string: \" + t) : t;\n            }\n        }\n        /** Converts a binary string to a Base64 encoded string. */ (t);\n        return new ByteString(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function __PRIVATE_binaryStringFromUint8Array(t) {\n            let e = \"\";\n            for (let r = 0; r < t.length; ++r) e += String.fromCharCode(t[r]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new ByteString(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return function __PRIVATE_encodeBase64(t) {\n            return btoa(t);\n        }(this.binaryString);\n    }\n    toUint8Array() {\n        return function __PRIVATE_uint8ArrayFromBinaryString(t) {\n            const e = new Uint8Array(t.length);\n            for (let r = 0; r < t.length; r++) e[r] = t.charCodeAt(r);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return __PRIVATE_primitiveComparator(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nByteString.EMPTY_BYTE_STRING = new ByteString(\"\");\n\nconst $ = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function __PRIVATE_normalizeTimestamp(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (__PRIVATE_hardAssert(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const r = $.exec(t);\n        if (__PRIVATE_hardAssert(!!r), r[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = r[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const n = new Date(t);\n        return {\n            seconds: Math.floor(n.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: __PRIVATE_normalizeNumber(t.seconds),\n        nanos: __PRIVATE_normalizeNumber(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function __PRIVATE_normalizeNumber(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function __PRIVATE_normalizeByteString(t) {\n    return \"string\" == typeof t ? ByteString.fromBase64String(t) : ByteString.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Timestamp {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new FirestoreError(T, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new FirestoreError(T, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new FirestoreError(T, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new FirestoreError(T, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return Timestamp.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return Timestamp.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), r = Math.floor(1e6 * (t - 1e3 * e));\n        return new Timestamp(e, r);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? __PRIVATE_primitiveComparator(this.nanoseconds, t.nanoseconds) : __PRIVATE_primitiveComparator(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function __PRIVATE_isServerTimestamp(t) {\n    var e, r;\n    return \"server_timestamp\" === (null === (r = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === r ? void 0 : r.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function __PRIVATE_getPreviousValue(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return __PRIVATE_isServerTimestamp(e) ? __PRIVATE_getPreviousValue(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function __PRIVATE_getLocalWriteTime(t) {\n    const e = __PRIVATE_normalizeTimestamp(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new Timestamp(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Q = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction __PRIVATE_typeOrder(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? __PRIVATE_isServerTimestamp(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function __PRIVATE_isMaxValue(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : fail();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function __PRIVATE_valueEquals(t, e) {\n    if (t === e) return !0;\n    const r = __PRIVATE_typeOrder(t);\n    if (r !== __PRIVATE_typeOrder(e)) return !1;\n    switch (r) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return __PRIVATE_getLocalWriteTime(t).isEqual(__PRIVATE_getLocalWriteTime(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function __PRIVATE_timestampEquals(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const r = __PRIVATE_normalizeTimestamp(t.timestampValue), n = __PRIVATE_normalizeTimestamp(e.timestampValue);\n            return r.seconds === n.seconds && r.nanos === n.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function __PRIVATE_blobEquals(t, e) {\n            return __PRIVATE_normalizeByteString(t.bytesValue).isEqual(__PRIVATE_normalizeByteString(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function __PRIVATE_geoPointEquals(t, e) {\n            return __PRIVATE_normalizeNumber(t.geoPointValue.latitude) === __PRIVATE_normalizeNumber(e.geoPointValue.latitude) && __PRIVATE_normalizeNumber(t.geoPointValue.longitude) === __PRIVATE_normalizeNumber(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function __PRIVATE_numberEquals(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return __PRIVATE_normalizeNumber(t.integerValue) === __PRIVATE_normalizeNumber(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const r = __PRIVATE_normalizeNumber(t.doubleValue), n = __PRIVATE_normalizeNumber(e.doubleValue);\n                return r === n ? __PRIVATE_isNegativeZero(r) === __PRIVATE_isNegativeZero(n) : isNaN(r) && isNaN(n);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return __PRIVATE_arrayEquals(t.arrayValue.values || [], e.arrayValue.values || [], __PRIVATE_valueEquals);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function __PRIVATE_objectEquals(t, e) {\n            const r = t.mapValue.fields || {}, n = e.mapValue.fields || {};\n            if (__PRIVATE_objectSize(r) !== __PRIVATE_objectSize(n)) return !1;\n            for (const t in r) if (r.hasOwnProperty(t) && (void 0 === n[t] || !__PRIVATE_valueEquals(r[t], n[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return fail();\n    }\n}\n\nfunction __PRIVATE_arrayValueContains(t, e) {\n    return void 0 !== (t.values || []).find((t => __PRIVATE_valueEquals(t, e)));\n}\n\nfunction __PRIVATE_valueCompare(t, e) {\n    if (t === e) return 0;\n    const r = __PRIVATE_typeOrder(t), n = __PRIVATE_typeOrder(e);\n    if (r !== n) return __PRIVATE_primitiveComparator(r, n);\n    switch (r) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return __PRIVATE_primitiveComparator(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function __PRIVATE_compareNumbers(t, e) {\n            const r = __PRIVATE_normalizeNumber(t.integerValue || t.doubleValue), n = __PRIVATE_normalizeNumber(e.integerValue || e.doubleValue);\n            return r < n ? -1 : r > n ? 1 : r === n ? 0 : \n            // one or both are NaN.\n            isNaN(r) ? isNaN(n) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return __PRIVATE_compareTimestamps(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return __PRIVATE_compareTimestamps(__PRIVATE_getLocalWriteTime(t), __PRIVATE_getLocalWriteTime(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return __PRIVATE_primitiveComparator(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function __PRIVATE_compareBlobs(t, e) {\n            const r = __PRIVATE_normalizeByteString(t), n = __PRIVATE_normalizeByteString(e);\n            return r.compareTo(n);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function __PRIVATE_compareReferences(t, e) {\n            const r = t.split(\"/\"), n = e.split(\"/\");\n            for (let t = 0; t < r.length && t < n.length; t++) {\n                const e = __PRIVATE_primitiveComparator(r[t], n[t]);\n                if (0 !== e) return e;\n            }\n            return __PRIVATE_primitiveComparator(r.length, n.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function __PRIVATE_compareGeoPoints(t, e) {\n            const r = __PRIVATE_primitiveComparator(__PRIVATE_normalizeNumber(t.latitude), __PRIVATE_normalizeNumber(e.latitude));\n            if (0 !== r) return r;\n            return __PRIVATE_primitiveComparator(__PRIVATE_normalizeNumber(t.longitude), __PRIVATE_normalizeNumber(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function __PRIVATE_compareArrays(t, e) {\n            const r = t.values || [], n = e.values || [];\n            for (let t = 0; t < r.length && t < n.length; ++t) {\n                const e = __PRIVATE_valueCompare(r[t], n[t]);\n                if (e) return e;\n            }\n            return __PRIVATE_primitiveComparator(r.length, n.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function __PRIVATE_compareMaps(t, e) {\n            if (t === Q && e === Q) return 0;\n            if (t === Q) return 1;\n            if (e === Q) return -1;\n            const r = t.fields || {}, n = Object.keys(r), i = e.fields || {}, s = Object.keys(i);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            n.sort(), s.sort();\n            for (let t = 0; t < n.length && t < s.length; ++t) {\n                const e = __PRIVATE_primitiveComparator(n[t], s[t]);\n                if (0 !== e) return e;\n                const o = __PRIVATE_valueCompare(r[n[t]], i[s[t]]);\n                if (0 !== o) return o;\n            }\n            return __PRIVATE_primitiveComparator(n.length, s.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw fail();\n    }\n}\n\nfunction __PRIVATE_compareTimestamps(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return __PRIVATE_primitiveComparator(t, e);\n    const r = __PRIVATE_normalizeTimestamp(t), n = __PRIVATE_normalizeTimestamp(e), i = __PRIVATE_primitiveComparator(r.seconds, n.seconds);\n    return 0 !== i ? i : __PRIVATE_primitiveComparator(r.nanos, n.nanos);\n}\n\nfunction __PRIVATE_refValue(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function isArray(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function __PRIVATE_isNullValue(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function __PRIVATE_isNanValue(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function __PRIVATE_isMapValue(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function __PRIVATE_deepClone(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return forEach(t.mapValue.fields, ((t, r) => e.mapValue.fields[t] = __PRIVATE_deepClone(r))), \n        e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let r = 0; r < (t.arrayValue.values || []).length; ++r) e.arrayValue.values[r] = __PRIVATE_deepClone(t.arrayValue.values[r]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Bound {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction __PRIVATE_boundEquals(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let r = 0; r < t.position.length; r++) {\n        if (!__PRIVATE_valueEquals(t.position[r], e.position[r])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Filter {}\n\nclass FieldFilter extends Filter {\n    constructor(t, e, r) {\n        super(), this.field = t, this.op = e, this.value = r;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, r) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, r) : new __PRIVATE_KeyFieldFilter(t, e, r) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new __PRIVATE_ArrayContainsFilter(t, r) : \"in\" /* Operator.IN */ === e ? new __PRIVATE_InFilter(t, r) : \"not-in\" /* Operator.NOT_IN */ === e ? new __PRIVATE_NotInFilter(t, r) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new __PRIVATE_ArrayContainsAnyFilter(t, r) : new FieldFilter(t, e, r);\n    }\n    static createKeyFieldInFilter(t, e, r) {\n        return \"in\" /* Operator.IN */ === e ? new __PRIVATE_KeyFieldInFilter(t, r) : new __PRIVATE_KeyFieldNotInFilter(t, r);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(__PRIVATE_valueCompare(e, this.value)) : null !== e && __PRIVATE_typeOrder(this.value) === __PRIVATE_typeOrder(e) && this.matchesComparison(__PRIVATE_valueCompare(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return fail();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass CompositeFilter extends Filter {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.S = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new CompositeFilter(t, e);\n    }\n    matches(t) {\n        return function __PRIVATE_compositeFilterIsConjunction(t) {\n            return \"and\" /* CompositeOperator.AND */ === t.op;\n        }(this) ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.S || (this.S = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.S;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.N((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    N(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction __PRIVATE_filterEquals(t, e) {\n    return t instanceof FieldFilter ? function __PRIVATE_fieldFilterEquals(t, e) {\n        return e instanceof FieldFilter && t.op === e.op && t.field.isEqual(e.field) && __PRIVATE_valueEquals(t.value, e.value);\n    }(t, e) : t instanceof CompositeFilter ? function __PRIVATE_compositeFilterEquals(t, e) {\n        if (e instanceof CompositeFilter && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, r, n) => t && __PRIVATE_filterEquals(r, e.filters[n])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void fail();\n}\n\nclass __PRIVATE_KeyFieldFilter extends FieldFilter {\n    constructor(t, e, r) {\n        super(t, e, r), this.key = DocumentKey.fromName(r.referenceValue);\n    }\n    matches(t) {\n        const e = DocumentKey.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class __PRIVATE_KeyFieldInFilter extends FieldFilter {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = __PRIVATE_extractDocumentKeysFromArrayValue(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class __PRIVATE_KeyFieldNotInFilter extends FieldFilter {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = __PRIVATE_extractDocumentKeysFromArrayValue(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction __PRIVATE_extractDocumentKeysFromArrayValue(t, e) {\n    var r;\n    return ((null === (r = e.arrayValue) || void 0 === r ? void 0 : r.values) || []).map((t => DocumentKey.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class __PRIVATE_ArrayContainsFilter extends FieldFilter {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return isArray(e) && __PRIVATE_arrayValueContains(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class __PRIVATE_InFilter extends FieldFilter {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && __PRIVATE_arrayValueContains(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class __PRIVATE_NotInFilter extends FieldFilter {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (__PRIVATE_arrayValueContains(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !__PRIVATE_arrayValueContains(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class __PRIVATE_ArrayContainsAnyFilter extends FieldFilter {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!isArray(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => __PRIVATE_arrayValueContains(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class OrderBy {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction __PRIVATE_orderByEquals(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class SnapshotVersion {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new SnapshotVersion(t);\n    }\n    static min() {\n        return new SnapshotVersion(new Timestamp(0, 0));\n    }\n    static max() {\n        return new SnapshotVersion(new Timestamp(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass SortedMap {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || LLRBNode.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new SortedMap(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, LLRBNode.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new SortedMap(this.comparator, this.root.remove(t, this.comparator).copy(null, null, LLRBNode.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const r = this.comparator(t, e.key);\n            if (0 === r) return e.value;\n            r < 0 ? e = e.left : r > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, r = this.root;\n        for (;!r.isEmpty(); ) {\n            const n = this.comparator(t, r.key);\n            if (0 === n) return e + r.left.size;\n            n < 0 ? r = r.left : (\n            // Count all nodes left of the node plus the node itself\n            e += r.left.size + 1, r = r.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, r) => (t(e, r), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, r) => (t.push(`${e}:${r}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new SortedMapIterator(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new SortedMapIterator(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new SortedMapIterator(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new SortedMapIterator(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass SortedMapIterator {\n    constructor(t, e, r, n) {\n        this.isReverse = n, this.nodeStack = [];\n        let i = 1;\n        for (;!t.isEmpty(); ) if (i = e ? r(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && n && (i *= -1), i < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === i) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass LLRBNode {\n    constructor(t, e, r, n, i) {\n        this.key = t, this.value = e, this.color = null != r ? r : LLRBNode.RED, this.left = null != n ? n : LLRBNode.EMPTY, \n        this.right = null != i ? i : LLRBNode.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, r, n, i) {\n        return new LLRBNode(null != t ? t : this.key, null != e ? e : this.value, null != r ? r : this.color, null != n ? n : this.left, null != i ? i : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, r) {\n        let n = this;\n        const i = r(t, n.key);\n        return n = i < 0 ? n.copy(null, null, null, n.left.insert(t, e, r), null) : 0 === i ? n.copy(null, e, null, null, null) : n.copy(null, null, null, null, n.right.insert(t, e, r)), \n        n.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return LLRBNode.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let r, n = this;\n        if (e(t, n.key) < 0) n.left.isEmpty() || n.left.isRed() || n.left.left.isRed() || (n = n.moveRedLeft()), \n        n = n.copy(null, null, null, n.left.remove(t, e), null); else {\n            if (n.left.isRed() && (n = n.rotateRight()), n.right.isEmpty() || n.right.isRed() || n.right.left.isRed() || (n = n.moveRedRight()), \n            0 === e(t, n.key)) {\n                if (n.right.isEmpty()) return LLRBNode.EMPTY;\n                r = n.right.min(), n = n.copy(r.key, r.value, null, null, n.right.removeMin());\n            }\n            n = n.copy(null, null, null, null, n.right.remove(t, e));\n        }\n        return n.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw fail();\n        if (this.right.isRed()) throw fail();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw fail();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nLLRBNode.EMPTY = null, LLRBNode.RED = !0, LLRBNode.BLACK = !1;\n\n// end LLRBEmptyNode\nLLRBNode.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass LLRBEmptyNode {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw fail();\n    }\n    get value() {\n        throw fail();\n    }\n    get color() {\n        throw fail();\n    }\n    get left() {\n        throw fail();\n    }\n    get right() {\n        throw fail();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, r, n, i) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, r) {\n        return new LLRBNode(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass SortedSet {\n    constructor(t) {\n        this.comparator = t, this.data = new SortedMap(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, r) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const r = this.data.getIteratorFrom(t[0]);\n        for (;r.hasNext(); ) {\n            const n = r.getNext();\n            if (this.comparator(n.key, t[1]) >= 0) return;\n            e(n.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let r;\n        for (r = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); r.hasNext(); ) {\n            if (!t(r.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new SortedSetIterator(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new SortedSetIterator(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof SortedSet)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), r = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, n = r.getNext().key;\n            if (0 !== this.comparator(t, n)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new SortedSet(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass SortedSetIterator {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class FieldMask {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(FieldPath$1.comparator);\n    }\n    static empty() {\n        return new FieldMask([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new SortedSet(FieldPath$1.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const r of t) e = e.add(r);\n        return new FieldMask(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return __PRIVATE_arrayEquals(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class ObjectValue {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new ObjectValue({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let r = 0; r < t.length - 1; ++r) if (e = (e.mapValue.fields || {})[t.get(r)], \n            !__PRIVATE_isMapValue(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = __PRIVATE_deepClone(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = FieldPath$1.emptyPath(), r = {}, n = [];\n        t.forEach(((t, i) => {\n            if (!e.isImmediateParentOf(i)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, r, n), r = {}, n = [], e = i.popLast();\n            }\n            t ? r[i.lastSegment()] = __PRIVATE_deepClone(t) : n.push(i.lastSegment());\n        }));\n        const i = this.getFieldsMap(e);\n        this.applyChanges(i, r, n);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        __PRIVATE_isMapValue(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return __PRIVATE_valueEquals(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let r = 0; r < t.length; ++r) {\n            let n = e.mapValue.fields[t.get(r)];\n            __PRIVATE_isMapValue(n) && n.mapValue.fields || (n = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(r)] = n), e = n;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, r) {\n        forEach(e, ((e, r) => t[e] = r));\n        for (const e of r) delete t[e];\n    }\n    clone() {\n        return new ObjectValue(__PRIVATE_deepClone(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class MutableDocument {\n    constructor(t, e, r, n, i, s, o) {\n        this.key = t, this.documentType = e, this.version = r, this.readTime = n, this.createTime = i, \n        this.data = s, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new MutableDocument(t, 0 /* DocumentType.INVALID */ , \n        /* version */ SnapshotVersion.min(), \n        /* readTime */ SnapshotVersion.min(), \n        /* createTime */ SnapshotVersion.min(), ObjectValue.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, r, n) {\n        return new MutableDocument(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ SnapshotVersion.min(), \n        /* createTime */ r, n, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new MutableDocument(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ SnapshotVersion.min(), \n        /* createTime */ SnapshotVersion.min(), ObjectValue.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new MutableDocument(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ SnapshotVersion.min(), \n        /* createTime */ SnapshotVersion.min(), ObjectValue.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(SnapshotVersion.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = ObjectValue.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , \n        this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = ObjectValue.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = SnapshotVersion.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof MutableDocument && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new MutableDocument(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass __PRIVATE_TargetImpl {\n    constructor(t, e = null, r = [], n = [], i = null, s = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = r, this.filters = n, this.limit = i, \n        this.startAt = s, this.endAt = o, this.O = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function __PRIVATE_newTarget(t, e = null, r = [], n = [], i = null, s = null, o = null) {\n    return new __PRIVATE_TargetImpl(t, e, r, n, i, s, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass __PRIVATE_QueryImpl {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, r = [], n = [], i = null, s = \"F\" /* LimitType.First */ , o = null, a = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = r, this.filters = n, \n        this.limit = i, this.limitType = s, this.startAt = o, this.endAt = a, this.q = null, \n        // The corresponding `Target` of this `Query` instance, for use with\n        // non-aggregate queries.\n        this.B = null, \n        // The corresponding `Target` of this `Query` instance, for use with\n        // aggregate queries. Unlike targets for non-aggregate queries,\n        // aggregate query targets do not contain normalized order-bys, they only\n        // contain explicit order-bys.\n        this.$ = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function __PRIVATE_getFirstOrderByField(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction __PRIVATE_getInequalityFilterField(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction __PRIVATE_isCollectionGroupQuery(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the normalized order-by constraint that is used to execute the Query,\n * which can be different from the order-by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`). The normalized order-by\n * includes implicit order-bys in addition to the explicit user provided\n * order-bys.\n */ function __PRIVATE_queryNormalizedOrderBy(t) {\n    const e = __PRIVATE_debugCast(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = __PRIVATE_getInequalityFilterField(e), r = __PRIVATE_getFirstOrderByField(e);\n        if (null !== t && null === r) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new OrderBy(t)), e.q.push(new OrderBy(FieldPath$1.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const r of e.explicitOrderBy) e.q.push(r), r.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order-by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.q.push(new OrderBy(FieldPath$1.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to its corresponding `Target` representation.\n */ function __PRIVATE_queryToTarget(t) {\n    const e = __PRIVATE_debugCast(t);\n    return e.B || (e.B = __PRIVATE__queryToTarget(e, __PRIVATE_queryNormalizedOrderBy(t))), \n    e.B;\n}\n\n/**\n * Converts this `Query` instance to its corresponding `Target` representation,\n * for use within an aggregate query. Unlike targets for non-aggregate queries,\n * aggregate query targets do not contain normalized order-bys, they only\n * contain explicit order-bys.\n */ function __PRIVATE__queryToTarget(t, e) {\n    if (\"F\" /* LimitType.First */ === t.limitType) return __PRIVATE_newTarget(t.path, t.collectionGroup, e, t.filters, t.limit, t.startAt, t.endAt);\n    {\n        // Flip the orderBy directions since we want the last results\n        e = e.map((t => {\n            const e = \"desc\" /* Direction.DESCENDING */ === t.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            return new OrderBy(t.field, e);\n        }));\n        // We need to swap the cursors to match the now-flipped query ordering.\n        const r = t.endAt ? new Bound(t.endAt.position, t.endAt.inclusive) : null, n = t.startAt ? new Bound(t.startAt.position, t.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        return __PRIVATE_newTarget(t.path, t.collectionGroup, e, t.filters, t.limit, r, n);\n    }\n}\n\nfunction __PRIVATE_queryWithAddedFilter(t, e) {\n    e.getFirstInequalityField(), __PRIVATE_getInequalityFilterField(t);\n    const r = t.filters.concat([ e ]);\n    return new __PRIVATE_QueryImpl(t.path, t.collectionGroup, t.explicitOrderBy.slice(), r, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction __PRIVATE_queryEquals(t, e) {\n    return function __PRIVATE_targetEquals(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let r = 0; r < t.orderBy.length; r++) if (!__PRIVATE_orderByEquals(t.orderBy[r], e.orderBy[r])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let r = 0; r < t.filters.length; r++) if (!__PRIVATE_filterEquals(t.filters[r], e.filters[r])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!__PRIVATE_boundEquals(t.startAt, e.startAt) && __PRIVATE_boundEquals(t.endAt, e.endAt);\n    }(__PRIVATE_queryToTarget(t), __PRIVATE_queryToTarget(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction toNumber(t, e) {\n    return function isSafeInteger(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !__PRIVATE_isNegativeZero(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function __PRIVATE_toInteger(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function __PRIVATE_toDouble(t, e) {\n        if (t.useProto3Json) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: __PRIVATE_isNegativeZero(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class TransformOperation {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class __PRIVATE_ServerTimestampTransform extends TransformOperation {}\n\n/** Transforms an array value via a union operation. */ class __PRIVATE_ArrayUnionTransformOperation extends TransformOperation {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class __PRIVATE_ArrayRemoveTransformOperation extends TransformOperation {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class __PRIVATE_NumericIncrementTransformOperation extends TransformOperation {\n    constructor(t, e) {\n        super(), this.serializer = t, this.L = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class FieldTransform {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Precondition {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Precondition;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Precondition(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Precondition(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Mutation {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class __PRIVATE_SetMutation extends Mutation {\n    constructor(t, e, r, n = []) {\n        super(), this.key = t, this.value = e, this.precondition = r, this.fieldTransforms = n, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class __PRIVATE_PatchMutation extends Mutation {\n    constructor(t, e, r, n, i = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = r, this.precondition = n, \n        this.fieldTransforms = i, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class __PRIVATE_DeleteMutation extends Mutation {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class __PRIVATE_VerifyMutation extends Mutation {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const L = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), M = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), x = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass JsonProtoSerializer {\n    constructor(t, e) {\n        this.databaseId = t, this.useProto3Json = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction toTimestamp(t, e) {\n    if (t.useProto3Json) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction __PRIVATE_toBytes(t, e) {\n    return t.useProto3Json ? e.toBase64() : e.toUint8Array();\n}\n\nfunction __PRIVATE_toVersion(t, e) {\n    return toTimestamp(t, e.toTimestamp());\n}\n\nfunction __PRIVATE_fromVersion(t) {\n    return __PRIVATE_hardAssert(!!t), SnapshotVersion.fromTimestamp(function fromTimestamp(t) {\n        const e = __PRIVATE_normalizeTimestamp(t);\n        return new Timestamp(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction __PRIVATE_toResourceName(t, e) {\n    return function __PRIVATE_fullyQualifiedPrefixPath(t) {\n        return new ResourcePath([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction __PRIVATE_toName(t, e) {\n    return __PRIVATE_toResourceName(t.databaseId, e.path);\n}\n\nfunction fromName(t, e) {\n    const r = function __PRIVATE_fromResourceName(t) {\n        const e = ResourcePath.fromString(t);\n        return __PRIVATE_hardAssert(__PRIVATE_isValidResourceName(e)), e;\n    }(e);\n    if (r.get(1) !== t.databaseId.projectId) throw new FirestoreError(T, \"Tried to deserialize key from different project: \" + r.get(1) + \" vs \" + t.databaseId.projectId);\n    if (r.get(3) !== t.databaseId.database) throw new FirestoreError(T, \"Tried to deserialize key from different database: \" + r.get(3) + \" vs \" + t.databaseId.database);\n    return new DocumentKey(function __PRIVATE_extractLocalPathFromResourceName(t) {\n        return __PRIVATE_hardAssert(t.length > 4 && \"documents\" === t.get(4)), t.popFirst(5);\n    }\n    /** Creates a Document proto from key and fields (but no create/update time) */ (r));\n}\n\nfunction __PRIVATE_toQueryPath(t, e) {\n    return __PRIVATE_toResourceName(t.databaseId, e);\n}\n\nfunction __PRIVATE_getEncodedDatabaseId(t) {\n    return new ResourcePath([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction __PRIVATE_toMutationDocument(t, e, r) {\n    return {\n        name: __PRIVATE_toName(t, e),\n        fields: r.value.mapValue.fields\n    };\n}\n\nfunction __PRIVATE_fromBatchGetDocumentsResponse(t, e) {\n    return \"found\" in e ? function __PRIVATE_fromFound(t, e) {\n        __PRIVATE_hardAssert(!!e.found), e.found.name, e.found.updateTime;\n        const r = fromName(t, e.found.name), n = __PRIVATE_fromVersion(e.found.updateTime), i = e.found.createTime ? __PRIVATE_fromVersion(e.found.createTime) : SnapshotVersion.min(), s = new ObjectValue({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return MutableDocument.newFoundDocument(r, n, i, s);\n    }(t, e) : \"missing\" in e ? function __PRIVATE_fromMissing(t, e) {\n        __PRIVATE_hardAssert(!!e.missing), __PRIVATE_hardAssert(!!e.readTime);\n        const r = fromName(t, e.missing), n = __PRIVATE_fromVersion(e.readTime);\n        return MutableDocument.newNoDocument(r, n);\n    }(t, e) : fail();\n}\n\nfunction toMutation(t, e) {\n    let r;\n    if (e instanceof __PRIVATE_SetMutation) r = {\n        update: __PRIVATE_toMutationDocument(t, e.key, e.value)\n    }; else if (e instanceof __PRIVATE_DeleteMutation) r = {\n        delete: __PRIVATE_toName(t, e.key)\n    }; else if (e instanceof __PRIVATE_PatchMutation) r = {\n        update: __PRIVATE_toMutationDocument(t, e.key, e.data),\n        updateMask: __PRIVATE_toDocumentMask(e.fieldMask)\n    }; else {\n        if (!(e instanceof __PRIVATE_VerifyMutation)) return fail();\n        r = {\n            verify: __PRIVATE_toName(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (r.updateTransforms = e.fieldTransforms.map((t => function __PRIVATE_toFieldTransform(t, e) {\n        const r = e.transform;\n        if (r instanceof __PRIVATE_ServerTimestampTransform) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (r instanceof __PRIVATE_ArrayUnionTransformOperation) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: r.elements\n            }\n        };\n        if (r instanceof __PRIVATE_ArrayRemoveTransformOperation) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: r.elements\n            }\n        };\n        if (r instanceof __PRIVATE_NumericIncrementTransformOperation) return {\n            fieldPath: e.field.canonicalString(),\n            increment: r.L\n        };\n        throw fail();\n    }(0, t)))), e.precondition.isNone || (r.currentDocument = function __PRIVATE_toPrecondition(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: __PRIVATE_toVersion(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : fail();\n    }(t, e.precondition)), r;\n}\n\nfunction __PRIVATE_toQueryTarget(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const r = {\n        structuredQuery: {}\n    }, n = e.path;\n    null !== e.collectionGroup ? (r.parent = __PRIVATE_toQueryPath(t, n), r.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (r.parent = __PRIVATE_toQueryPath(t, n.popLast()), r.structuredQuery.from = [ {\n        collectionId: n.lastSegment()\n    } ]);\n    const i = function __PRIVATE_toFilters(t) {\n        if (0 === t.length) return;\n        return __PRIVATE_toFilter(CompositeFilter.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    i && (r.structuredQuery.where = i);\n    const s = function __PRIVATE_toOrder(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function __PRIVATE_toPropertyOrder(t) {\n            return {\n                field: __PRIVATE_toFieldPathReference(t.field),\n                direction: __PRIVATE_toDirection(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    s && (r.structuredQuery.orderBy = s);\n    const o = function __PRIVATE_toInt32Proto(t, e) {\n        return t.useProto3Json || __PRIVATE_isNullOrUndefined(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    return null !== o && (r.structuredQuery.limit = o), e.startAt && (r.structuredQuery.startAt = function __PRIVATE_toStartAtCursor(t) {\n        return {\n            before: t.inclusive,\n            values: t.position\n        };\n    }(e.startAt)), e.endAt && (r.structuredQuery.endAt = function __PRIVATE_toEndAtCursor(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), r;\n}\n\nfunction __PRIVATE_toDirection(t) {\n    return L[t];\n}\n\n// visible for testing\nfunction __PRIVATE_toOperatorName(t) {\n    return M[t];\n}\n\nfunction __PRIVATE_toCompositeOperatorName(t) {\n    return x[t];\n}\n\nfunction __PRIVATE_toFieldPathReference(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction __PRIVATE_toFilter(t) {\n    return t instanceof FieldFilter ? function __PRIVATE_toUnaryOrFieldFilter(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (__PRIVATE_isNanValue(t.value)) return {\n                unaryFilter: {\n                    field: __PRIVATE_toFieldPathReference(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (__PRIVATE_isNullValue(t.value)) return {\n                unaryFilter: {\n                    field: __PRIVATE_toFieldPathReference(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (__PRIVATE_isNanValue(t.value)) return {\n                unaryFilter: {\n                    field: __PRIVATE_toFieldPathReference(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (__PRIVATE_isNullValue(t.value)) return {\n                unaryFilter: {\n                    field: __PRIVATE_toFieldPathReference(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: __PRIVATE_toFieldPathReference(t.field),\n                op: __PRIVATE_toOperatorName(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof CompositeFilter ? function __PRIVATE_toCompositeFilter(t) {\n        const e = t.getFilters().map((t => __PRIVATE_toFilter(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: __PRIVATE_toCompositeOperatorName(t.op),\n                filters: e\n            }\n        };\n    }(t) : fail();\n}\n\nfunction __PRIVATE_toDocumentMask(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction __PRIVATE_isValidResourceName(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function __PRIVATE_newSerializer(t) {\n    return new JsonProtoSerializer(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass __PRIVATE_ExponentialBackoff {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    r = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , n = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , i = 6e4) {\n        this.M = t, this.timerId = e, this.k = r, this.U = n, this.j = i, this.W = 0, this.K = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.G = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.W = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    H() {\n        this.W = this.j;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    J(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.W + this.Y()), r = Math.max(0, Date.now() - this.G), n = Math.max(0, e - r);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                n > 0 && __PRIVATE_logDebug(\"ExponentialBackoff\", `Backing off for ${n} ms (base delay: ${this.W} ms, delay with jitter: ${e} ms, last attempt: ${r} ms ago)`), \n        this.K = this.M.enqueueAfterDelay(this.timerId, n, (() => (this.G = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.W *= this.U, this.W < this.k && (this.W = this.k), this.W > this.j && (this.W = this.j);\n    }\n    Z() {\n        null !== this.K && (this.K.skipDelay(), this.K = null);\n    }\n    cancel() {\n        null !== this.K && (this.K.cancel(), this.K = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    Y() {\n        return (Math.random() - .5) * this.W;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass __PRIVATE_DatastoreImpl extends class Datastore {} {\n    constructor(t, e, r, n) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = r, \n        this.serializer = n, this.X = !1;\n    }\n    tt() {\n        if (this.X) throw new FirestoreError(w, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    R(t, e, r) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([n, i]) => this.connection.R(t, e, r, n, i))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === p && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new FirestoreError(A, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    g(t, e, r, n) {\n        return this.tt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([i, s]) => this.connection.g(t, e, r, i, s, n))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === p && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new FirestoreError(A, t.toString());\n        }));\n    }\n    terminate() {\n        this.X = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function __PRIVATE_invokeCommitRpc(t, e) {\n    const r = __PRIVATE_debugCast(t), n = __PRIVATE_getEncodedDatabaseId(r.serializer) + \"/documents\", i = {\n        writes: e.map((t => toMutation(r.serializer, t)))\n    };\n    await r.R(\"Commit\", n, i);\n}\n\nasync function __PRIVATE_invokeBatchGetDocumentsRpc(t, e) {\n    const r = __PRIVATE_debugCast(t), n = __PRIVATE_getEncodedDatabaseId(r.serializer) + \"/documents\", i = {\n        documents: e.map((t => __PRIVATE_toName(r.serializer, t)))\n    }, s = await r.g(\"BatchGetDocuments\", n, i, e.length), o = new Map;\n    s.forEach((t => {\n        const e = __PRIVATE_fromBatchGetDocumentsResponse(r.serializer, t);\n        o.set(e.key.toString(), e);\n    }));\n    const a = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        __PRIVATE_hardAssert(!!e), a.push(e);\n    })), a;\n}\n\nasync function __PRIVATE_invokeRunQueryRpc(t, e) {\n    const r = __PRIVATE_debugCast(t), n = __PRIVATE_toQueryTarget(r.serializer, __PRIVATE_queryToTarget(e));\n    return (await r.g(\"RunQuery\", n.parent, {\n        structuredQuery: n.structuredQuery\n    })).filter((t => !!t.document)).map((t => function __PRIVATE_fromDocument(t, e, r) {\n        const n = fromName(t, e.name), i = __PRIVATE_fromVersion(e.updateTime), s = e.createTime ? __PRIVATE_fromVersion(e.createTime) : SnapshotVersion.min(), o = new ObjectValue({\n            mapValue: {\n                fields: e.fields\n            }\n        }), a = MutableDocument.newFoundDocument(n, i, s, o);\n        return r && a.setHasCommittedMutations(), r ? a.setHasCommittedMutations() : a;\n    }(r.serializer, t.document, void 0)));\n}\n\nasync function __PRIVATE_invokeRunAggregationQueryRpc(t, e, r) {\n    var n;\n    const i = __PRIVATE_debugCast(t), {request: s, et: o} = function __PRIVATE_toRunAggregationQueryRequest(t, e, r) {\n        const n = __PRIVATE_toQueryTarget(t, e), i = {}, s = [];\n        let o = 0;\n        return r.forEach((t => {\n            // Map all client-side aliases to a unique short-form\n            // alias. This avoids issues with client-side aliases that\n            // exceed the 1500-byte string size limit.\n            const e = \"aggregate_\" + o++;\n            i[e] = t.alias, \"count\" === t.D ? s.push({\n                alias: e,\n                count: {}\n            }) : \"avg\" === t.D ? s.push({\n                alias: e,\n                avg: {\n                    field: __PRIVATE_toFieldPathReference(t.fieldPath)\n                }\n            }) : \"sum\" === t.D && s.push({\n                alias: e,\n                sum: {\n                    field: __PRIVATE_toFieldPathReference(t.fieldPath)\n                }\n            });\n        })), {\n            request: {\n                structuredAggregationQuery: {\n                    aggregations: s,\n                    structuredQuery: n.structuredQuery\n                },\n                parent: n.parent\n            },\n            et: i\n        };\n    }(i.serializer, function __PRIVATE_queryToAggregateTarget(t) {\n        const e = __PRIVATE_debugCast(t);\n        return e.$ || (\n        // Do not include implicit order-bys for aggregate queries.\n        e.$ = __PRIVATE__queryToTarget(e, t.explicitOrderBy)), e.$;\n    }(e), r), a = s.parent;\n    i.connection.P || delete s.parent;\n    const u = (await i.g(\"RunAggregationQuery\", a, s, /*expectedResponseCount=*/ 1)).filter((t => !!t.result));\n    // Omit RunAggregationQueryResponse that only contain readTimes.\n        __PRIVATE_hardAssert(1 === u.length);\n    // Remap the short-form aliases that were sent to the server\n    // to the client-side aliases. Users will access the results\n    // using the client-side alias.\n    const _ = null === (n = u[0].result) || void 0 === n ? void 0 : n.aggregateFields;\n    return Object.keys(_).reduce(((t, e) => (t[o[e]] = _[e], t)), {});\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const k = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction __PRIVATE_getDatastore(t) {\n    if (t._terminated) throw new FirestoreError(w, \"The client has already been terminated.\");\n    if (!k.has(t)) {\n        __PRIVATE_logDebug(\"ComponentProvider\", \"Initializing Datastore\");\n        const e = function __PRIVATE_newConnection(t) {\n            return new __PRIVATE_FetchConnection(t, fetch.bind(null));\n        }(function __PRIVATE_makeDatabaseInfo(t, e, r, n) {\n            return new DatabaseInfo(t, e, r, n.host, n.ssl, n.experimentalForceLongPolling, n.experimentalAutoDetectLongPolling, __PRIVATE_cloneLongPollingOptions(n.experimentalLongPollingOptions), n.useFetchStreams);\n        }\n        /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t._databaseId, t.app.options.appId || \"\", t._persistenceKey, t._freezeSettings())), r = __PRIVATE_newSerializer(t._databaseId), n = function __PRIVATE_newDatastore(t, e, r, n) {\n            return new __PRIVATE_DatastoreImpl(t, e, r, n);\n        }(t._authCredentials, t._appCheckCredentials, e, r);\n        k.set(t, n);\n    }\n    return k.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass FirestoreSettingsImpl {\n    constructor(t) {\n        var e, r;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new FirestoreError(T, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        this.localCache = t.localCache, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new FirestoreError(T, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        !function __PRIVATE_validateIsNotUsedTogether(t, e, r, n) {\n            if (!0 === e && !0 === n) throw new FirestoreError(T, `${t} and ${r} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling), \n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalForceLongPolling ? this.experimentalAutoDetectLongPolling = !1 : void 0 === t.experimentalAutoDetectLongPolling ? this.experimentalAutoDetectLongPolling = true : \n        // For backwards compatibility, coerce the value to boolean even though\n        // the TypeScript compiler has narrowed the type to boolean already.\n        // noinspection PointlessBooleanExpressionJS\n        this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.experimentalLongPollingOptions = __PRIVATE_cloneLongPollingOptions(null !== (r = t.experimentalLongPollingOptions) && void 0 !== r ? r : {}), \n        function __PRIVATE_validateLongPollingOptions(t) {\n            if (void 0 !== t.timeoutSeconds) {\n                if (isNaN(t.timeoutSeconds)) throw new FirestoreError(T, `invalid long polling timeout: ${t.timeoutSeconds} (must not be NaN)`);\n                if (t.timeoutSeconds < 5) throw new FirestoreError(T, `invalid long polling timeout: ${t.timeoutSeconds} (minimum allowed value is 5)`);\n                if (t.timeoutSeconds > 30) throw new FirestoreError(T, `invalid long polling timeout: ${t.timeoutSeconds} (maximum allowed value is 30)`);\n            }\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        /**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ (this.experimentalLongPollingOptions), this.useFetchStreams = !!t.useFetchStreams;\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && function __PRIVATE_longPollingOptionsEqual(t, e) {\n            return t.timeoutSeconds === e.timeoutSeconds;\n        }(this.experimentalLongPollingOptions, t.experimentalLongPollingOptions) && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\nclass Firestore {\n    /** @hideconstructor */\n    constructor(t, e, r, n) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = r, \n        this._app = n, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new FirestoreSettingsImpl({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new FirestoreError(w, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new FirestoreError(w, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new FirestoreSettingsImpl(t), void 0 !== t.credentials && (this._authCredentials = function __PRIVATE_makeAuthCredentialsProvider(t) {\n            if (!t) return new __PRIVATE_EmptyAuthCredentialsProvider;\n            switch (t.type) {\n              case \"firstParty\":\n                return new __PRIVATE_FirstPartyAuthCredentialsProvider(t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new FirestoreError(T, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function __PRIVATE_removeComponents(t) {\n            const e = k.get(t);\n            e && (__PRIVATE_logDebug(\"ComponentProvider\", \"Removing Datastore\"), k.delete(t), \n            e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction initializeFirestore(t, e, r) {\n    r || (r = \"(default)\");\n    const n = _getProvider(t, \"firestore/lite\");\n    if (n.isInitialized(r)) throw new FirestoreError(w, \"Firestore can only be initialized once per app.\");\n    return n.initialize({\n        options: e,\n        instanceIdentifier: r\n    });\n}\n\nfunction getFirestore(e, r) {\n    const n = \"object\" == typeof e ? e : getApp(), i = \"string\" == typeof e ? e : r || \"(default)\", s = _getProvider(n, \"firestore/lite\").getImmediate({\n        identifier: i\n    });\n    if (!s._initialized) {\n        const t = getDefaultEmulatorHostnameAndPort(\"firestore\");\n        t && connectFirestoreEmulator(s, ...t);\n    }\n    return s;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function connectFirestoreEmulator(t, e, r, n = {}) {\n    var i;\n    const s = (t = __PRIVATE_cast(t, Firestore))._getSettings(), o = `${e}:${r}`;\n    if (\"firestore.googleapis.com\" !== s.host && s.host !== o && __PRIVATE_logWarn(\"Host has been set in both settings() and connectFirestoreEmulator(), emulator host will be used.\"), \n    t._setSettings(Object.assign(Object.assign({}, s), {\n        host: o,\n        ssl: !1\n    })), n.mockUserToken) {\n        let e, r;\n        if (\"string\" == typeof n.mockUserToken) e = n.mockUserToken, r = User.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = createMockUserToken(n.mockUserToken, null === (i = t._app) || void 0 === i ? void 0 : i.options.projectId);\n            const s = n.mockUserToken.sub || n.mockUserToken.user_id;\n            if (!s) throw new FirestoreError(T, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            r = new User(s);\n        }\n        t._authCredentials = new __PRIVATE_EmulatorAuthCredentialsProvider(new __PRIVATE_OAuthToken(e, r));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function terminate(t) {\n    return t = __PRIVATE_cast(t, Firestore), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass AggregateField {\n    /**\n     * Create a new AggregateField<T>\n     * @param _aggregateType Specifies the type of aggregation operation to perform.\n     * @param _internalFieldPath Optionally specifies the field that is aggregated.\n     * @internal\n     */\n    constructor(\n    // TODO (sum/avg) make aggregateType public when the feature is supported\n    t = \"count\", e) {\n        this._aggregateType = t, this._internalFieldPath = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class AggregateQuerySnapshot {\n    /** @hideconstructor */\n    constructor(t, e, r) {\n        this._userDataWriter = e, this._data = r, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._userDataWriter.convertObjectMap(this._data);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Query {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, r) {\n        this.converter = e, this._query = r, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Query(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class DocumentReference {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, r) {\n        this.converter = e, this._key = r, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new CollectionReference(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new DocumentReference(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link (query:1)}).\n */ class CollectionReference extends Query {\n    /** @hideconstructor */\n    constructor(t, e, r) {\n        super(t, e, function __PRIVATE_newQueryForPath(t) {\n            return new __PRIVATE_QueryImpl(t);\n        }(r)), this._path = r, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new DocumentReference(this.firestore, \n        /* converter= */ null, new DocumentKey(t));\n    }\n    withConverter(t) {\n        return new CollectionReference(this.firestore, t, this._path);\n    }\n}\n\nfunction collection(t, e, ...r) {\n    if (t = getModularInstance(t), __PRIVATE_validateNonEmptyArgument(\"collection\", \"path\", e), t instanceof Firestore) {\n        const n = ResourcePath.fromString(e, ...r);\n        return __PRIVATE_validateCollectionPath(n), new CollectionReference(t, /* converter= */ null, n);\n    }\n    {\n        if (!(t instanceof DocumentReference || t instanceof CollectionReference)) throw new FirestoreError(T, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const n = t._path.child(ResourcePath.fromString(e, ...r));\n        return __PRIVATE_validateCollectionPath(n), new CollectionReference(t.firestore, \n        /* converter= */ null, n);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function collectionGroup(t, e) {\n    if (t = __PRIVATE_cast(t, Firestore), __PRIVATE_validateNonEmptyArgument(\"collectionGroup\", \"collection id\", e), \n    e.indexOf(\"/\") >= 0) throw new FirestoreError(T, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Query(t, \n    /* converter= */ null, function __PRIVATE_newQueryForCollectionGroup(t) {\n        return new __PRIVATE_QueryImpl(ResourcePath.emptyPath(), t);\n    }(e));\n}\n\nfunction doc(t, e, ...r) {\n    if (t = getModularInstance(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = __PRIVATE_AutoId.C()), __PRIVATE_validateNonEmptyArgument(\"doc\", \"path\", e), \n    t instanceof Firestore) {\n        const n = ResourcePath.fromString(e, ...r);\n        return __PRIVATE_validateDocumentPath(n), new DocumentReference(t, \n        /* converter= */ null, new DocumentKey(n));\n    }\n    {\n        if (!(t instanceof DocumentReference || t instanceof CollectionReference)) throw new FirestoreError(T, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const n = t._path.child(ResourcePath.fromString(e, ...r));\n        return __PRIVATE_validateDocumentPath(n), new DocumentReference(t.firestore, t instanceof CollectionReference ? t.converter : null, new DocumentKey(n));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function refEqual(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), (t instanceof DocumentReference || t instanceof CollectionReference) && (e instanceof DocumentReference || e instanceof CollectionReference) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function queryEqual(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), t instanceof Query && e instanceof Query && (t.firestore === e.firestore && __PRIVATE_queryEquals(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Bytes {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Bytes(ByteString.fromBase64String(t));\n        } catch (t) {\n            throw new FirestoreError(T, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Bytes(ByteString.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class FieldPath {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new FirestoreError(T, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new FieldPath$1(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function documentId() {\n    return new FieldPath(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class FieldValue {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class GeoPoint {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new FirestoreError(T, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new FirestoreError(T, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return __PRIVATE_primitiveComparator(this._lat, t._lat) || __PRIVATE_primitiveComparator(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const U = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class ParsedSetData {\n    constructor(t, e, r) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = r;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new __PRIVATE_PatchMutation(t, this.data, this.fieldMask, e, this.fieldTransforms) : new __PRIVATE_SetMutation(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class ParsedUpdateData {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, r) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = r;\n    }\n    toMutation(t, e) {\n        return new __PRIVATE_PatchMutation(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction __PRIVATE_isWrite(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw fail();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class __PRIVATE_ParseContextImpl {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, r, n, i, s) {\n        this.settings = t, this.databaseId = e, this.serializer = r, this.ignoreUndefinedProperties = n, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === i && this.rt(), this.fieldTransforms = i || [], this.fieldMask = s || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get nt() {\n        return this.settings.nt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    it(t) {\n        return new __PRIVATE_ParseContextImpl(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.serializer, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    st(t) {\n        var e;\n        const r = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), n = this.it({\n            path: r,\n            ot: !1\n        });\n        return n.ut(t), n;\n    }\n    _t(t) {\n        var e;\n        const r = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), n = this.it({\n            path: r,\n            ot: !1\n        });\n        return n.rt(), n;\n    }\n    lt(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.it({\n            path: void 0,\n            ot: !0\n        });\n    }\n    ct(t) {\n        return __PRIVATE_createError(t, this.settings.methodName, this.settings.ht || !1, this.path, this.settings.dt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    rt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ut(this.path.get(t));\n    }\n    ut(t) {\n        if (0 === t.length) throw this.ct(\"Document fields must not be empty\");\n        if (__PRIVATE_isWrite(this.nt) && U.test(t)) throw this.ct('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class __PRIVATE_UserDataReader {\n    constructor(t, e, r) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.serializer = r || __PRIVATE_newSerializer(t);\n    }\n    /** Creates a new top-level parse context. */    ft(t, e, r, n = !1) {\n        return new __PRIVATE_ParseContextImpl({\n            nt: t,\n            methodName: e,\n            dt: r,\n            path: FieldPath$1.emptyPath(),\n            ot: !1,\n            ht: n\n        }, this.databaseId, this.serializer, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction __PRIVATE_newUserDataReader(t) {\n    const e = t._freezeSettings(), r = __PRIVATE_newSerializer(t._databaseId);\n    return new __PRIVATE_UserDataReader(t._databaseId, !!e.ignoreUndefinedProperties, r);\n}\n\n/** Parse document data from a set() call. */ function __PRIVATE_parseSetData(t, e, r, n, i, s = {}) {\n    const o = t.ft(s.merge || s.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, r, i);\n    __PRIVATE_validatePlainObject(\"Data must be an object, but it was:\", o, n);\n    const a = __PRIVATE_parseObject(n, o);\n    let u, _;\n    if (s.merge) u = new FieldMask(o.fieldMask), _ = o.fieldTransforms; else if (s.mergeFields) {\n        const t = [];\n        for (const n of s.mergeFields) {\n            const i = __PRIVATE_fieldPathFromArgument$1(e, n, r);\n            if (!o.contains(i)) throw new FirestoreError(T, `Field '${i}' is specified in your field mask but missing from your input data.`);\n            __PRIVATE_fieldMaskContains(t, i) || t.push(i);\n        }\n        u = new FieldMask(t), _ = o.fieldTransforms.filter((t => u.covers(t.field)));\n    } else u = null, _ = o.fieldTransforms;\n    return new ParsedSetData(new ObjectValue(a), u, _);\n}\n\nclass __PRIVATE_DeleteFieldValueImpl extends FieldValue {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.nt) throw 1 /* UserDataSource.Update */ === t.nt ? t.ct(`${this._methodName}() can only appear at the top level of your update data`) : t.ct(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof __PRIVATE_DeleteFieldValueImpl;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function __PRIVATE_createSentinelChildContext(t, e, r) {\n    return new __PRIVATE_ParseContextImpl({\n        nt: 3 /* UserDataSource.Argument */ ,\n        dt: e.settings.dt,\n        methodName: t._methodName,\n        ot: r\n    }, e.databaseId, e.serializer, e.ignoreUndefinedProperties);\n}\n\nclass __PRIVATE_ServerTimestampFieldValueImpl extends FieldValue {\n    _toFieldTransform(t) {\n        return new FieldTransform(t.path, new __PRIVATE_ServerTimestampTransform);\n    }\n    isEqual(t) {\n        return t instanceof __PRIVATE_ServerTimestampFieldValueImpl;\n    }\n}\n\nclass __PRIVATE_ArrayUnionFieldValueImpl extends FieldValue {\n    constructor(t, e) {\n        super(t), this.Et = e;\n    }\n    _toFieldTransform(t) {\n        const e = __PRIVATE_createSentinelChildContext(this, t, \n        /*array=*/ !0), r = this.Et.map((t => __PRIVATE_parseData(t, e))), n = new __PRIVATE_ArrayUnionTransformOperation(r);\n        return new FieldTransform(t.path, n);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass __PRIVATE_ArrayRemoveFieldValueImpl extends FieldValue {\n    constructor(t, e) {\n        super(t), this.Et = e;\n    }\n    _toFieldTransform(t) {\n        const e = __PRIVATE_createSentinelChildContext(this, t, \n        /*array=*/ !0), r = this.Et.map((t => __PRIVATE_parseData(t, e))), n = new __PRIVATE_ArrayRemoveTransformOperation(r);\n        return new FieldTransform(t.path, n);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass __PRIVATE_NumericIncrementFieldValueImpl extends FieldValue {\n    constructor(t, e) {\n        super(t), this.At = e;\n    }\n    _toFieldTransform(t) {\n        const e = new __PRIVATE_NumericIncrementTransformOperation(t.serializer, toNumber(t.serializer, this.At));\n        return new FieldTransform(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function __PRIVATE_parseUpdateData(t, e, r, n) {\n    const i = t.ft(1 /* UserDataSource.Update */ , e, r);\n    __PRIVATE_validatePlainObject(\"Data must be an object, but it was:\", i, n);\n    const s = [], o = ObjectValue.empty();\n    forEach(n, ((t, n) => {\n        const a = __PRIVATE_fieldPathFromDotSeparatedString(e, t, r);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = getModularInstance(n);\n        const u = i._t(a);\n        if (n instanceof __PRIVATE_DeleteFieldValueImpl) \n        // Add it to the field mask, but don't add anything to updateData.\n        s.push(a); else {\n            const t = __PRIVATE_parseData(n, u);\n            null != t && (s.push(a), o.set(a, t));\n        }\n    }));\n    const a = new FieldMask(s);\n    return new ParsedUpdateData(o, a, i.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function __PRIVATE_parseUpdateVarargs(t, e, r, n, i, s) {\n    const o = t.ft(1 /* UserDataSource.Update */ , e, r), a = [ __PRIVATE_fieldPathFromArgument$1(e, n, r) ], u = [ i ];\n    if (s.length % 2 != 0) throw new FirestoreError(T, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < s.length; t += 2) a.push(__PRIVATE_fieldPathFromArgument$1(e, s[t])), \n    u.push(s[t + 1]);\n    const _ = [], l = ObjectValue.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = a.length - 1; t >= 0; --t) if (!__PRIVATE_fieldMaskContains(_, a[t])) {\n        const e = a[t];\n        let r = u[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = getModularInstance(r);\n        const n = o._t(e);\n        if (r instanceof __PRIVATE_DeleteFieldValueImpl) \n        // Add it to the field mask, but don't add anything to updateData.\n        _.push(e); else {\n            const t = __PRIVATE_parseData(r, n);\n            null != t && (_.push(e), l.set(e, t));\n        }\n    }\n    const h = new FieldMask(_);\n    return new ParsedUpdateData(l, h, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function __PRIVATE_parseQueryValue(t, e, r, n = !1) {\n    return __PRIVATE_parseData(r, t.ft(n ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function __PRIVATE_parseData(t, e) {\n    if (__PRIVATE_looksLikeJsonObject(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = getModularInstance(t))) return __PRIVATE_validatePlainObject(\"Unsupported field value:\", e, t), \n    __PRIVATE_parseObject(t, e);\n    if (t instanceof FieldValue) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function __PRIVATE_parseSentinelFieldValue(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!__PRIVATE_isWrite(e.nt)) throw e.ct(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ct(`${t._methodName}() is not currently supported inside arrays`);\n        const r = t._toFieldTransform(e);\n        r && e.fieldTransforms.push(r);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.ot && 4 /* UserDataSource.ArrayArgument */ !== e.nt) throw e.ct(\"Nested arrays are not supported\");\n        return function __PRIVATE_parseArray(t, e) {\n            const r = [];\n            let n = 0;\n            for (const i of t) {\n                let t = __PRIVATE_parseData(i, e.lt(n));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), r.push(t), n++;\n            }\n            return {\n                arrayValue: {\n                    values: r\n                }\n            };\n        }(t, e);\n    }\n    return function __PRIVATE_parseScalarValue(t, e) {\n        if (null === (t = getModularInstance(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return toNumber(e.serializer, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const r = Timestamp.fromDate(t);\n            return {\n                timestampValue: toTimestamp(e.serializer, r)\n            };\n        }\n        if (t instanceof Timestamp) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const r = new Timestamp(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: toTimestamp(e.serializer, r)\n            };\n        }\n        if (t instanceof GeoPoint) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Bytes) return {\n            bytesValue: __PRIVATE_toBytes(e.serializer, t._byteString)\n        };\n        if (t instanceof DocumentReference) {\n            const r = e.databaseId, n = t.firestore._databaseId;\n            if (!n.isEqual(r)) throw e.ct(`Document reference is for database ${n.projectId}/${n.database} but should be for database ${r.projectId}/${r.database}`);\n            return {\n                referenceValue: __PRIVATE_toResourceName(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ct(`Unsupported field value: ${__PRIVATE_valueDescription(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction __PRIVATE_parseObject(t, e) {\n    const r = {};\n    return !function isEmpty(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? forEach(t, ((t, n) => {\n        const i = __PRIVATE_parseData(n, e.st(t));\n        null != i && (r[t] = i);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: r\n        }\n    };\n}\n\nfunction __PRIVATE_looksLikeJsonObject(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Timestamp || t instanceof GeoPoint || t instanceof Bytes || t instanceof DocumentReference || t instanceof FieldValue);\n}\n\nfunction __PRIVATE_validatePlainObject(t, e, r) {\n    if (!__PRIVATE_looksLikeJsonObject(r) || !function __PRIVATE_isPlainObject(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(r)) {\n        const n = __PRIVATE_valueDescription(r);\n        throw \"an object\" === n ? e.ct(t + \" a custom object\") : e.ct(t + \" \" + n);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function __PRIVATE_fieldPathFromArgument$1(t, e, r) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = getModularInstance(e)) instanceof FieldPath) return e._internalPath;\n    if (\"string\" == typeof e) return __PRIVATE_fieldPathFromDotSeparatedString(t, e);\n    throw __PRIVATE_createError(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, r);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const j = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function __PRIVATE_fieldPathFromDotSeparatedString(t, e, r) {\n    if (e.search(j) >= 0) throw __PRIVATE_createError(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, r);\n    try {\n        return new FieldPath(...e.split(\".\"))._internalPath;\n    } catch (n) {\n        throw __PRIVATE_createError(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, r);\n    }\n}\n\nfunction __PRIVATE_createError(t, e, r, n, i) {\n    const s = n && !n.isEmpty(), o = void 0 !== i;\n    let a = `Function ${e}() called with invalid data`;\n    r && (a += \" (via `toFirestore()`)\"), a += \". \";\n    let u = \"\";\n    return (s || o) && (u += \" (found\", s && (u += ` in field ${n}`), o && (u += ` in document ${i}`), \n    u += \")\"), new FirestoreError(T, a + t + u);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function __PRIVATE_fieldMaskContains(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class DocumentSnapshot {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, r, n, i) {\n        this._firestore = t, this._userDataWriter = e, this._key = r, this._document = n, \n        this._converter = i;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new DocumentReference(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new QueryDocumentSnapshot(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(__PRIVATE_fieldPathFromArgument(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class QueryDocumentSnapshot extends DocumentSnapshot {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class QuerySnapshot {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function snapshotEqual(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), t instanceof DocumentSnapshot && e instanceof DocumentSnapshot ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof QuerySnapshot && e instanceof QuerySnapshot && (queryEqual(t.query, e.query) && __PRIVATE_arrayEquals(t.docs, e.docs, snapshotEqual));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function __PRIVATE_fieldPathFromArgument(t, e) {\n    return \"string\" == typeof e ? __PRIVATE_fieldPathFromDotSeparatedString(t, e) : e instanceof FieldPath ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass AppliableConstraint {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * (endBefore:1)}, {@link (endAt:1)}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link (query:1)} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class QueryConstraint extends AppliableConstraint {}\n\nfunction query(t, e, ...r) {\n    let n = [];\n    e instanceof AppliableConstraint && n.push(e), n = n.concat(r), function __PRIVATE_validateQueryConstraintArray(t) {\n        const e = t.filter((t => t instanceof QueryCompositeFilterConstraint)).length, r = t.filter((t => t instanceof QueryFieldFilterConstraint)).length;\n        if (e > 1 || e > 0 && r > 0) throw new FirestoreError(T, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (n);\n    for (const e of n) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link (query:1)} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class QueryFieldFilterConstraint extends QueryConstraint {\n    /**\n     * @internal\n     */\n    constructor(t, e, r) {\n        super(), this._field = t, this._op = e, this._value = r, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, r) {\n        return new QueryFieldFilterConstraint(t, e, r);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return __PRIVATE_validateNewFieldFilter(t._query, e), new Query(t.firestore, t.converter, __PRIVATE_queryWithAddedFilter(t._query, e));\n    }\n    _parse(t) {\n        const e = __PRIVATE_newUserDataReader(t.firestore), r = function __PRIVATE_newQueryFilter(t, e, r, n, i, s, o) {\n            let a;\n            if (i.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === s || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === s) throw new FirestoreError(T, `Invalid Query. You can't perform '${s}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === s || \"not-in\" /* Operator.NOT_IN */ === s) {\n                    __PRIVATE_validateDisjunctiveFilterElements(o, s);\n                    const e = [];\n                    for (const r of o) e.push(__PRIVATE_parseDocumentIdValue(n, t, r));\n                    a = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else a = __PRIVATE_parseDocumentIdValue(n, t, o);\n            } else \"in\" /* Operator.IN */ !== s && \"not-in\" /* Operator.NOT_IN */ !== s && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== s || __PRIVATE_validateDisjunctiveFilterElements(o, s), \n            a = __PRIVATE_parseQueryValue(r, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === s || \"not-in\" /* Operator.NOT_IN */ === s);\n            return FieldFilter.create(i, s, a);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return r;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function where(t, e, r) {\n    const n = e, i = __PRIVATE_fieldPathFromArgument(\"where\", t);\n    return QueryFieldFilterConstraint._create(i, n, r);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n */ class QueryCompositeFilterConstraint extends AppliableConstraint {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new QueryCompositeFilterConstraint(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : CompositeFilter.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function __PRIVATE_validateNewFilter(t, e) {\n            let r = t;\n            const n = e.getFlattenedFilters();\n            for (const t of n) __PRIVATE_validateNewFieldFilter(r, t), r = __PRIVATE_queryWithAddedFilter(r, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Query(t.firestore, t.converter, __PRIVATE_queryWithAddedFilter(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */ function or(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => __PRIVATE_validateQueryFilterConstraint(\"or\", t))), QueryCompositeFilterConstraint._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */ function and(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => __PRIVATE_validateQueryFilterConstraint(\"and\", t))), QueryCompositeFilterConstraint._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class QueryOrderByConstraint extends QueryConstraint {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new QueryOrderByConstraint(t, e);\n    }\n    _apply(t) {\n        const e = function __PRIVATE_newQueryOrderBy(t, e, r) {\n            if (null !== t.startAt) throw new FirestoreError(T, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new FirestoreError(T, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const n = new OrderBy(e, r);\n            return function __PRIVATE_validateNewOrderBy(t, e) {\n                if (null === __PRIVATE_getFirstOrderByField(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const r = __PRIVATE_getInequalityFilterField(t);\n                    null !== r && __PRIVATE_validateOrderByAndInequalityMatch(t, r, e.field);\n                }\n            }(t, n), n;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Query(t.firestore, t.converter, function __PRIVATE_queryWithAddedOrderBy(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const r = t.explicitOrderBy.concat([ e ]);\n            return new __PRIVATE_QueryImpl(t.path, t.collectionGroup, r, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function orderBy(t, e = \"asc\") {\n    const r = e, n = __PRIVATE_fieldPathFromArgument(\"orderBy\", t);\n    return QueryOrderByConstraint._create(n, r);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class QueryLimitConstraint extends QueryConstraint {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, r) {\n        super(), this.type = t, this._limit = e, this._limitType = r;\n    }\n    static _create(t, e, r) {\n        return new QueryLimitConstraint(t, e, r);\n    }\n    _apply(t) {\n        return new Query(t.firestore, t.converter, function __PRIVATE_queryWithLimit(t, e, r) {\n            return new __PRIVATE_QueryImpl(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, r, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function limit(t) {\n    return __PRIVATE_validatePositiveNumber(\"limit\", t), QueryLimitConstraint._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function limitToLast(t) {\n    return __PRIVATE_validatePositiveNumber(\"limitToLast\", t), QueryLimitConstraint._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link (query:1)} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class QueryStartAtConstraint extends QueryConstraint {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, r) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = r;\n    }\n    static _create(t, e, r) {\n        return new QueryStartAtConstraint(t, e, r);\n    }\n    _apply(t) {\n        const e = __PRIVATE_newQueryBoundFromDocOrFields(t, this.type, this._docOrFields, this._inclusive);\n        return new Query(t.firestore, t.converter, function __PRIVATE_queryWithStartAt(t, e) {\n            return new __PRIVATE_QueryImpl(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction startAt(...t) {\n    return QueryStartAtConstraint._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction startAfter(...t) {\n    return QueryStartAtConstraint._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class QueryEndAtConstraint extends QueryConstraint {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, r) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = r;\n    }\n    static _create(t, e, r) {\n        return new QueryEndAtConstraint(t, e, r);\n    }\n    _apply(t) {\n        const e = __PRIVATE_newQueryBoundFromDocOrFields(t, this.type, this._docOrFields, this._inclusive);\n        return new Query(t.firestore, t.converter, function __PRIVATE_queryWithEndAt(t, e) {\n            return new __PRIVATE_QueryImpl(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction endBefore(...t) {\n    return QueryEndAtConstraint._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction endAt(...t) {\n    return QueryEndAtConstraint._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function __PRIVATE_newQueryBoundFromDocOrFields(t, e, r, n) {\n    if (r[0] = getModularInstance(r[0]), r[0] instanceof DocumentSnapshot) return function __PRIVATE_newQueryBoundFromDocument(t, e, r, n, i) {\n        if (!n) throw new FirestoreError(R, `Can't use a DocumentSnapshot that doesn't exist for ${r}().`);\n        const s = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const r of __PRIVATE_queryNormalizedOrderBy(t)) if (r.field.isKeyField()) s.push(__PRIVATE_refValue(e, n.key)); else {\n            const t = n.data.field(r.field);\n            if (__PRIVATE_isServerTimestamp(t)) throw new FirestoreError(T, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + r.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = r.field.canonicalString();\n                throw new FirestoreError(T, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            s.push(t);\n        }\n        return new Bound(s, i);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, r[0]._document, n);\n    {\n        const i = __PRIVATE_newUserDataReader(t.firestore);\n        return function __PRIVATE_newQueryBoundFromFields(t, e, r, n, i, s) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (i.length > o.length) throw new FirestoreError(T, `Too many arguments provided to ${n}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const a = [];\n            for (let s = 0; s < i.length; s++) {\n                const u = i[s];\n                if (o[s].field.isKeyField()) {\n                    if (\"string\" != typeof u) throw new FirestoreError(T, `Invalid query. Expected a string for document ID in ${n}(), but got a ${typeof u}`);\n                    if (!__PRIVATE_isCollectionGroupQuery(t) && -1 !== u.indexOf(\"/\")) throw new FirestoreError(T, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${n}() must be a plain document ID, but '${u}' contains a slash.`);\n                    const r = t.path.child(ResourcePath.fromString(u));\n                    if (!DocumentKey.isDocumentKey(r)) throw new FirestoreError(T, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${n}() must result in a valid document path, but '${r}' is not because it contains an odd number of segments.`);\n                    const i = new DocumentKey(r);\n                    a.push(__PRIVATE_refValue(e, i));\n                } else {\n                    const t = __PRIVATE_parseQueryValue(r, n, u);\n                    a.push(t);\n                }\n            }\n            return new Bound(a, s);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, i, e, r, n);\n    }\n}\n\nfunction __PRIVATE_parseDocumentIdValue(t, e, r) {\n    if (\"string\" == typeof (r = getModularInstance(r))) {\n        if (\"\" === r) throw new FirestoreError(T, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!__PRIVATE_isCollectionGroupQuery(e) && -1 !== r.indexOf(\"/\")) throw new FirestoreError(T, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${r}' contains a '/' character.`);\n        const n = e.path.child(ResourcePath.fromString(r));\n        if (!DocumentKey.isDocumentKey(n)) throw new FirestoreError(T, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${n}' is not because it has an odd number of segments (${n.length}).`);\n        return __PRIVATE_refValue(t, new DocumentKey(n));\n    }\n    if (r instanceof DocumentReference) return __PRIVATE_refValue(t, r._key);\n    throw new FirestoreError(T, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${__PRIVATE_valueDescription(r)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function __PRIVATE_validateDisjunctiveFilterElements(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new FirestoreError(T, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */ function __PRIVATE_validateNewFieldFilter(t, e) {\n    if (e.isInequality()) {\n        const r = __PRIVATE_getInequalityFilterField(t), n = e.field;\n        if (null !== r && !r.isEqual(n)) throw new FirestoreError(T, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${r.toString()}' and '${n.toString()}'`);\n        const i = __PRIVATE_getFirstOrderByField(t);\n        null !== i && __PRIVATE_validateOrderByAndInequalityMatch(t, n, i);\n    }\n    const r = function __PRIVATE_findOpInsideFilters(t, e) {\n        for (const r of t) for (const t of r.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function __PRIVATE_conflictingOps(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n          case \"in\" /* Operator.IN */ :\n            return [ \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== r) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw r === e.op ? new FirestoreError(T, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new FirestoreError(T, `Invalid query. You cannot use '${e.op.toString()}' filters with '${r.toString()}' filters.`);\n}\n\nfunction __PRIVATE_validateOrderByAndInequalityMatch(t, e, r) {\n    if (!r.isEqual(e)) throw new FirestoreError(T, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${r.toString()}' instead.`);\n}\n\nfunction __PRIVATE_validateQueryFilterConstraint(t, e) {\n    if (!(e instanceof QueryFieldFilterConstraint || e instanceof QueryCompositeFilterConstraint)) throw new FirestoreError(T, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction __PRIVATE_applyFirestoreDataConverter(t, e, r) {\n    let n;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return n = t ? r && (r.merge || r.mergeFields) ? t.toFirestore(e, r) : t.toFirestore(e) : e, \n    n;\n}\n\nclass __PRIVATE_LiteUserDataWriter extends class AbstractUserDataWriter {\n    convertValue(t, e = \"none\") {\n        switch (__PRIVATE_typeOrder(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return __PRIVATE_normalizeNumber(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(__PRIVATE_normalizeByteString(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw fail();\n        }\n    }\n    convertObject(t, e) {\n        return this.convertObjectMap(t.fields, e);\n    }\n    /**\n     * @internal\n     */    convertObjectMap(t, e = \"none\") {\n        const r = {};\n        return forEach(t, ((t, n) => {\n            r[t] = this.convertValue(n, e);\n        })), r;\n    }\n    convertGeoPoint(t) {\n        return new GeoPoint(__PRIVATE_normalizeNumber(t.latitude), __PRIVATE_normalizeNumber(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const r = __PRIVATE_getPreviousValue(t);\n            return null == r ? null : this.convertValue(r, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(__PRIVATE_getLocalWriteTime(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = __PRIVATE_normalizeTimestamp(t);\n        return new Timestamp(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const r = ResourcePath.fromString(t);\n        __PRIVATE_hardAssert(__PRIVATE_isValidResourceName(r));\n        const n = new DatabaseId(r.get(1), r.get(3)), i = new DocumentKey(r.popFirst(5));\n        return n.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        __PRIVATE_logError(`Document ${i} contains a document reference within a different database (${n.projectId}/${n.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        i;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Bytes(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new DocumentReference(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function getDoc(t) {\n    const e = __PRIVATE_getDatastore((t = __PRIVATE_cast(t, DocumentReference)).firestore), r = new __PRIVATE_LiteUserDataWriter(t.firestore);\n    return __PRIVATE_invokeBatchGetDocumentsRpc(e, [ t._key ]).then((e => {\n        __PRIVATE_hardAssert(1 === e.length);\n        const n = e[0];\n        return new DocumentSnapshot(t.firestore, r, t._key, n.isFoundDocument() ? n : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function getDocs(t) {\n    (function __PRIVATE_validateHasExplicitOrderByForLimitToLast(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new FirestoreError(v, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    })((t = __PRIVATE_cast(t, Query))._query);\n    const e = __PRIVATE_getDatastore(t.firestore), r = new __PRIVATE_LiteUserDataWriter(t.firestore);\n    return __PRIVATE_invokeRunQueryRpc(e, t._query).then((e => {\n        const n = e.map((e => new QueryDocumentSnapshot(t.firestore, r, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        n.reverse(), new QuerySnapshot(t, n);\n    }));\n}\n\nfunction setDoc(t, e, r) {\n    const n = __PRIVATE_applyFirestoreDataConverter((t = __PRIVATE_cast(t, DocumentReference)).converter, e, r), i = __PRIVATE_parseSetData(__PRIVATE_newUserDataReader(t.firestore), \"setDoc\", t._key, n, null !== t.converter, r);\n    return __PRIVATE_invokeCommitRpc(__PRIVATE_getDatastore(t.firestore), [ i.toMutation(t._key, Precondition.none()) ]);\n}\n\nfunction updateDoc(t, e, r, ...n) {\n    const i = __PRIVATE_newUserDataReader((t = __PRIVATE_cast(t, DocumentReference)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let s;\n    s = \"string\" == typeof (e = getModularInstance(e)) || e instanceof FieldPath ? __PRIVATE_parseUpdateVarargs(i, \"updateDoc\", t._key, e, r, n) : __PRIVATE_parseUpdateData(i, \"updateDoc\", t._key, e);\n    return __PRIVATE_invokeCommitRpc(__PRIVATE_getDatastore(t.firestore), [ s.toMutation(t._key, Precondition.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function deleteDoc(t) {\n    return __PRIVATE_invokeCommitRpc(__PRIVATE_getDatastore((t = __PRIVATE_cast(t, DocumentReference)).firestore), [ new __PRIVATE_DeleteMutation(t._key, Precondition.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function addDoc(t, e) {\n    const r = doc(t = __PRIVATE_cast(t, CollectionReference)), n = __PRIVATE_applyFirestoreDataConverter(t.converter, e), i = __PRIVATE_parseSetData(__PRIVATE_newUserDataReader(t.firestore), \"addDoc\", r._key, n, null !== r.converter, {});\n    return __PRIVATE_invokeCommitRpc(__PRIVATE_getDatastore(t.firestore), [ i.toMutation(r._key, Precondition.exists(!1)) ]).then((() => r));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function getCount(t) {\n    return getAggregate(t, {\n        count: count()\n    });\n}\n\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query, without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, is downloaded. This\n * function can even perform aggregations of the documents if the result set\n * would be prohibitively large to download entirely (e.g. thousands of documents).\n *\n * @param query The query whose result set to aggregate over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregate(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n * @internal TODO (sum/avg) remove when public\n */ function getAggregate(t, e) {\n    const r = __PRIVATE_cast(t.firestore, Firestore), n = __PRIVATE_getDatastore(r), i = function __PRIVATE_mapToArray(t, e) {\n        const r = [];\n        for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && r.push(e(t[n], n, t));\n        return r;\n    }(e, ((t, e) => new __PRIVATE_AggregateImpl(e, t._aggregateType, t._internalFieldPath)));\n    // Run the aggregation and convert the results\n    return __PRIVATE_invokeRunAggregationQueryRpc(n, t._query, i).then((e => function __PRIVATE_convertToAggregateQuerySnapshot(t, e, r) {\n        const n = new __PRIVATE_LiteUserDataWriter(t);\n        return new AggregateQuerySnapshot(e, n, r);\n    }\n    /**\n * Create an AggregateField object that can be used to compute the sum of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to sum across the result set.\n * @internal TODO (sum/avg) remove when public\n */ (r, t, e)));\n}\n\nfunction sum(t) {\n    return new AggregateField(\"sum\", __PRIVATE_fieldPathFromArgument$1(\"sum\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n * @internal TODO (sum/avg) remove when public\n */ function average(t) {\n    return new AggregateField(\"avg\", __PRIVATE_fieldPathFromArgument$1(\"average\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n * @internal TODO (sum/avg) remove when public\n */ function count() {\n    return new AggregateField(\"count\");\n}\n\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n * @internal TODO (sum/avg) remove when public\n */ function aggregateFieldEqual(t, e) {\n    var r, n;\n    return t instanceof AggregateField && e instanceof AggregateField && t._aggregateType === e._aggregateType && (null === (r = t._internalFieldPath) || void 0 === r ? void 0 : r.canonicalString()) === (null === (n = e._internalFieldPath) || void 0 === n ? void 0 : n.canonicalString());\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function aggregateQuerySnapshotEqual(t, e) {\n    return queryEqual(t.query, e.query) && deepEqual(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function deleteField() {\n    return new __PRIVATE_DeleteFieldValueImpl(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function serverTimestamp() {\n    return new __PRIVATE_ServerTimestampFieldValueImpl(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function arrayUnion(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new __PRIVATE_ArrayUnionFieldValueImpl(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function arrayRemove(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new __PRIVATE_ArrayRemoveFieldValueImpl(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function increment(t) {\n    return new __PRIVATE_NumericIncrementFieldValueImpl(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class WriteBatch {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = __PRIVATE_newUserDataReader(t);\n    }\n    set(t, e, r) {\n        this._verifyNotCommitted();\n        const n = __PRIVATE_validateReference(t, this._firestore), i = __PRIVATE_applyFirestoreDataConverter(n.converter, e, r), s = __PRIVATE_parseSetData(this._dataReader, \"WriteBatch.set\", n._key, i, null !== n.converter, r);\n        return this._mutations.push(s.toMutation(n._key, Precondition.none())), this;\n    }\n    update(t, e, r, ...n) {\n        this._verifyNotCommitted();\n        const i = __PRIVATE_validateReference(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let s;\n        return s = \"string\" == typeof (e = getModularInstance(e)) || e instanceof FieldPath ? __PRIVATE_parseUpdateVarargs(this._dataReader, \"WriteBatch.update\", i._key, e, r, n) : __PRIVATE_parseUpdateData(this._dataReader, \"WriteBatch.update\", i._key, e), \n        this._mutations.push(s.toMutation(i._key, Precondition.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = __PRIVATE_validateReference(t, this._firestore);\n        return this._mutations = this._mutations.concat(new __PRIVATE_DeleteMutation(e._key, Precondition.none())), \n        this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new FirestoreError(w, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction __PRIVATE_validateReference(t, e) {\n    if ((t = getModularInstance(t)).firestore !== e) throw new FirestoreError(T, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function writeBatch(t) {\n    const e = __PRIVATE_getDatastore(t = __PRIVATE_cast(t, Firestore));\n    return new WriteBatch(t, (t => __PRIVATE_invokeCommitRpc(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class Transaction$1 {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new FirestoreError(T, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await __PRIVATE_invokeBatchGetDocumentsRpc(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new __PRIVATE_DeleteMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const r = DocumentKey.fromPath(e);\n            this.mutations.push(new __PRIVATE_VerifyMutation(r, this.precondition(r)));\n        })), await __PRIVATE_invokeCommitRpc(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw fail();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = SnapshotVersion.min();\n        }\n        const r = this.readVersions.get(t.key.toString());\n        if (r) {\n            if (!e.isEqual(r)) \n            // This transaction will fail no matter what.\n            throw new FirestoreError(g, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(SnapshotVersion.min()) ? Precondition.exists(!1) : Precondition.updateTime(e) : Precondition.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(SnapshotVersion.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new FirestoreError(T, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Precondition.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Precondition.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const z = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass __PRIVATE_TransactionRunner {\n    constructor(t, e, r, n, i) {\n        this.asyncQueue = t, this.datastore = e, this.options = r, this.updateFunction = n, \n        this.deferred = i, this.Tt = r.maxAttempts, this.Pt = new __PRIVATE_ExponentialBackoff(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Tt -= 1, this.Rt();\n    }\n    Rt() {\n        this.Pt.J((async () => {\n            const t = new Transaction$1(this.datastore), e = this.It(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.Vt(t);\n                }))));\n            })).catch((t => {\n                this.Vt(t);\n            }));\n        }));\n    }\n    It(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !__PRIVATE_isNullOrUndefined(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Vt(t) {\n        this.Tt > 0 && this.yt(t) ? (this.Tt -= 1, this.asyncQueue.enqueueAndForget((() => (this.Rt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    yt(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function __PRIVATE_isPermanentError(t) {\n                switch (t) {\n                  default:\n                    return fail();\n\n                  case m:\n                  case A:\n                  case P:\n                  case y:\n                  case D:\n                  case b:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case p:\n                    return !1;\n\n                  case T:\n                  case R:\n                  case I:\n                  case V:\n                  case w:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case g:\n                  case F:\n                  case v:\n                  case C:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function getDocument() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class DelayedOperation {\n    constructor(t, e, r, n, i) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = r, this.op = n, this.removalCallback = i, \n        this.deferred = new __PRIVATE_Deferred, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    get promise() {\n        return this.deferred.promise;\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, r, n, i) {\n        const s = Date.now() + r, o = new DelayedOperation(t, e, s, n, i);\n        return o.start(r), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new FirestoreError(m, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class __PRIVATE_AsyncQueueImpl {\n    constructor() {\n        // The last promise in the queue.\n        this.wt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.gt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.Ft = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.vt = [], \n        // visible for testing\n        this.Dt = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.bt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Ct = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.St = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.Pt = new __PRIVATE_ExponentialBackoff(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Nt = () => {\n            const t = getDocument();\n            t && __PRIVATE_logDebug(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), \n            this.Pt.Z();\n        };\n        const t = getDocument();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Nt);\n    }\n    get isShuttingDown() {\n        return this.Ft;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ot(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.qt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.Ft) {\n            this.Ft = !0, this.Ct = t || !1;\n            const e = getDocument();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Nt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ot(), this.Ft) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new __PRIVATE_Deferred;\n        return this.qt((() => this.Ft && this.Ct ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.gt.push(t), this.Bt())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Bt() {\n        if (0 !== this.gt.length) {\n            try {\n                await this.gt[0](), this.gt.shift(), this.Pt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function __PRIVATE_isIndexedDbTransactionError(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                __PRIVATE_logDebug(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.gt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.Pt.J((() => this.Bt()));\n        }\n    }\n    qt(t) {\n        const e = this.wt.then((() => (this.bt = !0, t().catch((t => {\n            this.Dt = t, this.bt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function __PRIVATE_getMessageOrStack(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw __PRIVATE_logError(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.bt = !1, t))))));\n        return this.wt = e, e;\n    }\n    enqueueAfterDelay(t, e, r) {\n        this.Ot(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.St.indexOf(t) > -1 && (e = 0);\n        const n = DelayedOperation.createAndSchedule(this, t, e, r, (t => this.$t(t)));\n        return this.vt.push(n), n;\n    }\n    Ot() {\n        this.Dt && fail();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Qt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.wt, await t;\n        } while (t !== this.wt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Lt(t) {\n        for (const e of this.vt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Mt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Qt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.vt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.vt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Qt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    xt(t) {\n        this.St.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    $t(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.vt.indexOf(t);\n        this.vt.splice(e, 1);\n    }\n}\n\nclass Transaction {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = __PRIVATE_newUserDataReader(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = __PRIVATE_validateReference(t, this._firestore), r = new __PRIVATE_LiteUserDataWriter(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return fail();\n            const n = t[0];\n            if (n.isFoundDocument()) return new DocumentSnapshot(this._firestore, r, n.key, n, e.converter);\n            if (n.isNoDocument()) return new DocumentSnapshot(this._firestore, r, e._key, null, e.converter);\n            throw fail();\n        }));\n    }\n    set(t, e, r) {\n        const n = __PRIVATE_validateReference(t, this._firestore), i = __PRIVATE_applyFirestoreDataConverter(n.converter, e, r), s = __PRIVATE_parseSetData(this._dataReader, \"Transaction.set\", n._key, i, null !== n.converter, r);\n        return this._transaction.set(n._key, s), this;\n    }\n    update(t, e, r, ...n) {\n        const i = __PRIVATE_validateReference(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let s;\n        return s = \"string\" == typeof (e = getModularInstance(e)) || e instanceof FieldPath ? __PRIVATE_parseUpdateVarargs(this._dataReader, \"Transaction.update\", i._key, e, r, n) : __PRIVATE_parseUpdateData(this._dataReader, \"Transaction.update\", i._key, e), \n        this._transaction.update(i._key, s), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = __PRIVATE_validateReference(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function runTransaction(t, e, r) {\n    const n = __PRIVATE_getDatastore(t = __PRIVATE_cast(t, Firestore)), i = Object.assign(Object.assign({}, z), r);\n    !function __PRIVATE_validateTransactionOptions(t) {\n        if (t.maxAttempts < 1) throw new FirestoreError(T, \"Max attempts must be at least 1\");\n    }(i);\n    const s = new __PRIVATE_Deferred;\n    return new __PRIVATE_TransactionRunner(function __PRIVATE_newAsyncQueue() {\n        return new __PRIVATE_AsyncQueueImpl;\n    }(), n, i, (r => e(new Transaction(t, r))), s).run(), s.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function __PRIVATE_registerFirestore() {\n    !function __PRIVATE_setSDKVersion(t) {\n        d = t;\n    }(`${SDK_VERSION}_lite`), _registerComponent(new Component(\"firestore/lite\", ((t, {instanceIdentifier: e, options: r}) => {\n        const n = t.getProvider(\"app\").getImmediate(), i = new Firestore(new __PRIVATE_LiteAuthCredentialsProvider(t.getProvider(\"auth-internal\")), new __PRIVATE_LiteAppCheckTokenProvider(t.getProvider(\"app-check-internal\")), function __PRIVATE_databaseIdFromApp(t, e) {\n            if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new FirestoreError(T, '\"projectId\" not provided in firebase.initializeApp.');\n            return new DatabaseId(t.options.projectId, e);\n        }\n        /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (n, e), n);\n        return r && i._setSettings(r), i;\n    }), \"PUBLIC\").setMultipleInstances(!0)), \n    // RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\n    registerVersion(\"firestore-lite\", \"4.1.3\", \"\"), registerVersion(\"firestore-lite\", \"4.1.3\", \"cjs2017\");\n}();\n\nexport { AggregateField, AggregateQuerySnapshot, Bytes, CollectionReference, DocumentReference, DocumentSnapshot, FieldPath, FieldValue, Firestore, FirestoreError, GeoPoint, Query, QueryCompositeFilterConstraint, QueryConstraint, QueryDocumentSnapshot, QueryEndAtConstraint, QueryFieldFilterConstraint, QueryLimitConstraint, QueryOrderByConstraint, QuerySnapshot, QueryStartAtConstraint, Timestamp, Transaction, WriteBatch, addDoc, aggregateFieldEqual, aggregateQuerySnapshotEqual, and, arrayRemove, arrayUnion, average, collection, collectionGroup, connectFirestoreEmulator, count, deleteDoc, deleteField, doc, documentId, endAt, endBefore, getAggregate, getCount, getDoc, getDocs, getFirestore, increment, initializeFirestore, limit, limitToLast, or, orderBy, query, queryEqual, refEqual, runTransaction, serverTimestamp, setDoc, setLogLevel, snapshotEqual, startAfter, startAt, sum, terminate, updateDoc, where, writeBatch };\n//# sourceMappingURL=index.cjs.js.map\n"],"names":["User","constructor","t","this","uid","isAuthenticated","toKey","isEqual","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","d","f","setLogLevel","__PRIVATE_logDebug","e","logLevel","DEBUG","r","map","__PRIVATE_argToString","debug","__PRIVATE_logError","ERROR","error","__PRIVATE_logWarn","WARN","warn","JSON","stringify","fail","Error","__PRIVATE_hardAssert","__PRIVATE_debugCast","m","A","T","P","R","V","p","y","w","g","F","v","D","b","FirestoreError","super","code","message","toString","name","__PRIVATE_Deferred","promise","Promise","resolve","reject","__PRIVATE_OAuthToken","user","type","headers","Map","set","__PRIVATE_EmptyAuthCredentialsProvider","getToken","invalidateToken","start","enqueueRetryable","shutdown","__PRIVATE_EmulatorAuthCredentialsProvider","token","changeListener","__PRIVATE_LiteAuthCredentialsProvider","auth","onInit","then","accessToken","getUid","__PRIVATE_FirstPartyToken","i","o","u","l","__PRIVATE_FirstPartyAuthCredentialsProvider","AppCheckToken","value","length","__PRIVATE_LiteAppCheckTokenProvider","h","appCheck","DatabaseInfo","n","s","a","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","longPollingOptions","useFetchStreams","DatabaseId","projectId","database","empty","isDefaultDatabase","BasePath","segments","offset","len","comparator","child","slice","limit","forEach","push","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","ResourcePath","canonicalString","join","fromString","indexOf","split","filter","emptyPath","S","FieldPath$1","isValidIdentifier","test","replace","isKeyField","keyField","fromServerFormat","__PRIVATE_addCurrentSegment","DocumentKey","path","fromPath","fromName","collectionGroup","hasCollectionId","getCollectionGroup","getCollectionPath","isDocumentKey","fromSegments","__PRIVATE_validateNonEmptyArgument","__PRIVATE_validateDocumentPath","__PRIVATE_validateCollectionPath","__PRIVATE_valueDescription","substring","Array","__PRIVATE_cast","_delegate","__PRIVATE_validatePositiveNumber","__PRIVATE_cloneLongPollingOptions","timeoutSeconds","N","__PRIVATE_isNullOrUndefined","__PRIVATE_isNegativeZero","O","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","q","B","__PRIVATE_mapCodeFromHttpStatus","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","__PRIVATE_FetchConnection","databaseInfo","encodeURIComponent","round","random","I","method","body","status","statusText","ok","json","isArray","__PRIVATE_AggregateImpl","alias","fieldPath","__PRIVATE_randomBytes","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","__PRIVATE_AutoId","C","charAt","__PRIVATE_primitiveComparator","__PRIVATE_arrayEquals","every","__PRIVATE_objectSize","Object","prototype","hasOwnProperty","call","__PRIVATE_Base64DecodeError","arguments","ByteString","binaryString","fromBase64String","atob","DOMException","fromUint8Array","String","fromCharCode","Symbol","iterator","next","charCodeAt","done","toBase64","btoa","toUint8Array","approximateByteSize","compareTo","EMPTY_BYTE_STRING","$","RegExp","__PRIVATE_normalizeTimestamp","exec","substr","Number","Date","seconds","getTime","nanos","__PRIVATE_normalizeNumber","__PRIVATE_normalizeByteString","Timestamp","nanoseconds","now","fromMillis","fromDate","toDate","toMillis","_compareTo","toJSON","valueOf","padStart","__PRIVATE_isServerTimestamp","mapValue","fields","__type__","stringValue","__PRIVATE_getPreviousValue","__previous_value__","__PRIVATE_getLocalWriteTime","__local_write_time__","timestampValue","Q","__PRIVATE_typeOrder","__PRIVATE_valueEquals","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","__PRIVATE_arrayValueContains","find","__PRIVATE_valueCompare","__PRIVATE_compareTimestamps","keys","sort","__PRIVATE_refValue","__PRIVATE_isNullValue","__PRIVATE_isNanValue","__PRIVATE_isMapValue","__PRIVATE_deepClone","assign","Bound","position","inclusive","__PRIVATE_boundEquals","Filter","FieldFilter","field","op","create","createKeyFieldInFilter","__PRIVATE_KeyFieldFilter","__PRIVATE_ArrayContainsFilter","__PRIVATE_InFilter","__PRIVATE_NotInFilter","__PRIVATE_ArrayContainsAnyFilter","__PRIVATE_KeyFieldInFilter","__PRIVATE_KeyFieldNotInFilter","matches","data","matchesComparison","isInequality","getFlattenedFilters","getFilters","getFirstInequalityField","CompositeFilter","filters","reduce","concat","__PRIVATE_filterEquals","key","__PRIVATE_extractDocumentKeysFromArrayValue","some","nullValue","OrderBy","dir","__PRIVATE_orderByEquals","SnapshotVersion","timestamp","fromTimestamp","max","toMicroseconds","toTimestamp","SortedMap","root","LLRBNode","EMPTY","insert","copy","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","SortedMapIterator","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","isReverse","nodeStack","getNext","pop","hasNext","peek","color","RED","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","checkMaxDepth","check","pow","SortedSet","has","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","SortedSetIterator","add","unionWith","iter","FieldMask","covers","ObjectValue","getFieldsMap","setAll","applyChanges","clone","MutableDocument","documentType","version","readTime","createTime","documentState","newInvalidDocument","newFoundDocument","newNoDocument","newUnknownDocument","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","__PRIVATE_TargetImpl","orderBy","startAt","endAt","__PRIVATE_newTarget","__PRIVATE_QueryImpl","explicitOrderBy","limitType","__PRIVATE_getFirstOrderByField","__PRIVATE_getInequalityFilterField","__PRIVATE_isCollectionGroupQuery","__PRIVATE_queryNormalizedOrderBy","__PRIVATE_queryToTarget","__PRIVATE__queryToTarget","__PRIVATE_queryWithAddedFilter","toNumber","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","useProto3Json","TransformOperation","_","__PRIVATE_ServerTimestampTransform","__PRIVATE_ArrayUnionTransformOperation","elements","__PRIVATE_ArrayRemoveTransformOperation","__PRIVATE_NumericIncrementTransformOperation","serializer","L","FieldTransform","transform","Precondition","updateTime","exists","none","isNone","Mutation","__PRIVATE_SetMutation","precondition","fieldTransforms","getFieldMask","__PRIVATE_PatchMutation","fieldMask","__PRIVATE_DeleteMutation","__PRIVATE_VerifyMutation","asc","desc","M","in","x","and","or","JsonProtoSerializer","toISOString","__PRIVATE_toBytes","__PRIVATE_toVersion","__PRIVATE_fromVersion","__PRIVATE_toResourceName","__PRIVATE_toName","__PRIVATE_isValidResourceName","__PRIVATE_toQueryPath","__PRIVATE_getEncodedDatabaseId","__PRIVATE_toMutationDocument","__PRIVATE_toQueryTarget","structuredQuery","parent","from","collectionId","allDescendants","__PRIVATE_toFilter","where","__PRIVATE_toFieldPathReference","direction","__PRIVATE_toDirection","before","__PRIVATE_toOperatorName","__PRIVATE_toCompositeOperatorName","unaryFilter","fieldFilter","compositeFilter","__PRIVATE_toDocumentMask","fieldPaths","__PRIVATE_newSerializer","__PRIVATE_ExponentialBackoff","timerId","k","U","j","W","K","G","reset","H","J","cancel","Y","enqueueAfterDelay","Z","skipDelay","__PRIVATE_DatastoreImpl","authCredentials","appCheckCredentials","connection","X","tt","all","catch","terminate","async","__PRIVATE_invokeCommitRpc","writes","update","delete","updateMask","verify","updateTransforms","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","toMutation","__PRIVATE_invokeBatchGetDocumentsRpc","documents","found","missing","__PRIVATE_fromBatchGetDocumentsResponse","__PRIVATE_getDatastore","_terminated","fetch","bind","experimentalForceLongPolling","experimentalAutoDetectLongPolling","experimentalLongPollingOptions","_databaseId","app","options","_persistenceKey","_freezeSettings","_authCredentials","_appCheckCredentials","FirestoreSettingsImpl","credentials","ignoreUndefinedProperties","localCache","cacheSizeBytes","Firestore","_app","_settings","_settingsFrozen","_initialized","_terminateTask","_setSettings","sessionIndex","iamToken","authTokenFactory","client","_getSettings","_delete","_terminate","settings","initializeFirestore","isInitialized","initialize","instanceIdentifier","getFirestore","getImmediate","identifier","connectFirestoreEmulator","mockUserToken","sub","user_id","AggregateField","_aggregateType","_internalFieldPath","AggregateQuerySnapshot","_userDataWriter","_data","query","convertObjectMap","Query","converter","_query","firestore","withConverter","DocumentReference","_key","_path","id","CollectionReference","collection","doc","refEqual","queryEqual","__PRIVATE_queryEquals","Bytes","_byteString","FieldPath","_internalPath","documentId","FieldValue","_methodName","GeoPoint","isFinite","_lat","_long","ParsedSetData","ParsedUpdateData","__PRIVATE_isWrite","__PRIVATE_ParseContextImpl","rt","nt","it","st","ot","ut","_t","lt","ct","__PRIVATE_createError","methodName","ht","dt","contains","__PRIVATE_UserDataReader","ft","__PRIVATE_newUserDataReader","__PRIVATE_parseSetData","merge","mergeFields","__PRIVATE_validatePlainObject","__PRIVATE_parseObject","__PRIVATE_fieldPathFromArgument$1","__PRIVATE_fieldMaskContains","__PRIVATE_DeleteFieldValueImpl","_toFieldTransform","__PRIVATE_createSentinelChildContext","__PRIVATE_ServerTimestampFieldValueImpl","__PRIVATE_ArrayUnionFieldValueImpl","Et","__PRIVATE_parseData","__PRIVATE_ArrayRemoveFieldValueImpl","__PRIVATE_NumericIncrementFieldValueImpl","At","__PRIVATE_parseUpdateData","__PRIVATE_fieldPathFromDotSeparatedString","__PRIVATE_parseUpdateVarargs","__PRIVATE_parseQueryValue","__PRIVATE_looksLikeJsonObject","getPrototypeOf","search","DocumentSnapshot","_firestore","_document","_converter","ref","QueryDocumentSnapshot","fromFirestore","convertValue","__PRIVATE_fieldPathFromArgument","QuerySnapshot","_docs","docs","snapshotEqual","AppliableConstraint","QueryConstraint","QueryCompositeFilterConstraint","QueryFieldFilterConstraint","_apply","_field","_op","_value","_create","_parse","__PRIVATE_validateNewFieldFilter","__PRIVATE_validateDisjunctiveFilterElements","__PRIVATE_parseDocumentIdValue","_queryConstraints","_getOperator","_getQueryConstraints","__PRIVATE_validateQueryFilterConstraint","QueryOrderByConstraint","_direction","__PRIVATE_validateOrderByAndInequalityMatch","QueryLimitConstraint","_limit","_limitType","limitToLast","QueryStartAtConstraint","_docOrFields","_inclusive","__PRIVATE_newQueryBoundFromDocOrFields","startAfter","QueryEndAtConstraint","endBefore","__PRIVATE_applyFirestoreDataConverter","toFirestore","__PRIVATE_LiteUserDataWriter","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","getDoc","getDocs","document","__PRIVATE_invokeRunQueryRpc","reverse","setDoc","updateDoc","deleteDoc","addDoc","getCount","getAggregate","count","request","et","avg","sum","structuredAggregationQuery","aggregations","result","aggregateFields","__PRIVATE_invokeRunAggregationQueryRpc","average","aggregateFieldEqual","aggregateQuerySnapshotEqual","deleteField","serverTimestamp","arrayUnion","arrayRemove","WriteBatch","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","__PRIVATE_validateReference","commit","writeBatch","Transaction$1","datastore","readVersions","mutations","committed","lastWriteError","writtenDocs","Set","lookup","ensureCommitNotCalled","recordVersion","write","preconditionForUpdate","z","maxAttempts","__PRIVATE_TransactionRunner","asyncQueue","updateFunction","deferred","Tt","Pt","run","Rt","It","enqueueAndForget","Vt","yt","getDocument","DelayedOperation","targetTimeMs","removalCallback","createAndSchedule","timerHandle","setTimeout","handleDelayElapsed","clearTimeout","__PRIVATE_AsyncQueueImpl","wt","gt","Ft","vt","Dt","bt","Ct","St","Nt","visibilityState","addEventListener","isShuttingDown","enqueue","enqueueAndForgetEvenWhileRestricted","Ot","qt","enterRestrictedMode","removeEventListener","Bt","shift","stack","includes","$t","verifyOperationInProgress","Qt","Lt","Mt","xt","splice","Transaction","_transaction","runTransaction","getProvider","apply","setMultipleInstances"],"sourceRoot":""}