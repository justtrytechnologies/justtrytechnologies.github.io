{"version":3,"file":"component---src-pages-blog-js-46297c1f3e7dff684f5d.js","mappings":"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","sources":["webpack://justtry-app/./src/components/common/breadcrumb.js","webpack://justtry-app/./src/screens/blogs/index.js","webpack://justtry-app/./src/pages/blog.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/CardImg.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\nconst BreadCrumb = ({ items }) => {\r\n  return (\r\n    <Container fluid className=\"gx-0\">\r\n      <Row>\r\n        <nav aria-label=\"breadcrumb\" className=\"custom-breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            {items.map((item, index) => (\r\n              <li\r\n                key={index}\r\n                className={`breadcrumb-item${\r\n                  index === items.length - 1 ? \" active\" : \"\"\r\n                }`}\r\n                aria-current={index === items.length - 1 ? \"page\" : null}\r\n              >\r\n                {index === items.length - 1 ? (\r\n                  item.text\r\n                ) : (\r\n                  <Link to={item.link}>{item.text}</Link>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </nav>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BreadCrumb;\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { Card, Col, Image, Row } from \"react-bootstrap\";\r\n\r\nconst BlogsData = (data) => {\r\n  const { data: propsData, blogImages } = data;\r\n  let count = 0;\r\n  const [blogsData, setBlogsData] = useState([]);\r\n\r\n  const loadBlogs = () => {\r\n    propsData.edges.sort((a, b) => b.node.keyId - a.node.keyId);\r\n    if (propsData?.edges?.length > 0) {\r\n      const blogsArr = [];\r\n      for (let blog of propsData?.edges) {\r\n        for (let blogImgObj of blogImages) {\r\n          const jsonBlogImgEndPath = blog?.node?.image?.split(\"/\");\r\n          const graphBlogImgEndPath =\r\n            blogImgObj?.node?.gatsbyImageData?.images?.fallback?.src?.split(\r\n              \"/\"\r\n            );\r\n          if (jsonBlogImgEndPath?.[2] === graphBlogImgEndPath?.[4]) {\r\n            blog.node.blogImg =\r\n              blogImgObj?.node?.gatsbyImageData?.images?.fallback?.src;\r\n            blogsArr.push({ blog });\r\n            setBlogsData(blogsArr);\r\n          }\r\n        }\r\n        // getBlogImg(blog);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadBlogs();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"section-develop\" id=\"ourteam\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {blogsData?.map((ele, ind) => {\r\n            const { blog } = ele;\r\n            // let count = 0;\r\n            let blogId = ind;\r\n            if (blogId % 2 === 0) {\r\n              count = count + 1;\r\n            }\r\n            // console.log(\"count:;\", count);\r\n            // console.log(\"count modul:;\", count % 2);\r\n            return (\r\n              <div className=\"col-md-6 col-sm-6 \">\r\n                <Card key={ele.id} className=\"jt_blog_card\">\r\n                  {count % 2 !== 0 ? (\r\n                    <Fragment>\r\n                      <Link\r\n                        to={`${blog?.node.slug}`}\r\n                        className=\"text-decoration-none\"\r\n                      >\r\n                        {/* <div className=\"jt_blog_img_wrapper\">\r\n                          <img\r\n                            className=\"jt_blog_img\"\r\n                            src={`https://justtrytech.com/${blog?.node?.blogImg}`}\r\n                            alt=\"Unraveling Defi explained in image\"\r\n                          />\r\n                        </div> */}\r\n                        <Card.Img\r\n                          className=\"jt_blog_img\"\r\n                          src={`https://justtrytech.com/${blog?.node?.blogImg}`}\r\n                          alt={blog?.node?.title}\r\n                        />\r\n                      </Link>\r\n\r\n                      <Link\r\n                        to={`${blog?.node.slug}`}\r\n                        className=\"text-decoration-none text-muted \"\r\n                      >\r\n                        <Card.Body className=\"jt_blog_card_body\">\r\n                          <div className=\"jt_date_wrapper\">\r\n                            <p className=\"jt_blog_date\">\r\n                              {blog?.node?.blog_created_date}\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div className=\"jt_blog_title\">\r\n                            {blog?.node?.title}\r\n                          </div>\r\n\r\n                          <p className=\"jt_blog_description\">\r\n                            {blog?.node?.short_description}\r\n                          </p>\r\n                        </Card.Body>\r\n                      </Link>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <Link\r\n                        to={`${blog?.node.slug}`}\r\n                        className=\"text-decoration-none text-muted \"\r\n                      >\r\n                        <Card.Body className=\"jt_blog_card_body\">\r\n                          <div className=\"jt_date_wrapper\">\r\n                            <p className=\"jt_blog_date\">\r\n                              {blog?.node?.blog_created_date}\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div className=\"jt_blog_title\">\r\n                            {blog?.node?.title}\r\n                          </div>\r\n\r\n                          <p className=\"jt_blog_description\">\r\n                            {blog?.node?.short_description}\r\n                          </p>\r\n                        </Card.Body>\r\n                      </Link>\r\n                      <Link\r\n                        to={`${blog?.node.slug}`}\r\n                        className=\"text-decoration-none\"\r\n                      >\r\n                        {/* <div className=\"jt_blog_img_wrapper\">\r\n                          <img\r\n                            className=\"jt_blog_img\"\r\n                            src={`https://justtrytech.com/${blog?.node?.blogImg}`}\r\n                            alt=\"Unraveling Defi explained in image\"\r\n                          />\r\n                        </div> */}\r\n                        <Card.Img\r\n                          className=\"jt_blog_img\"\r\n                          src={`https://justtrytech.com/${blog?.node?.blogImg}`}\r\n                          alt={blog?.node?.title}\r\n                        />\r\n                      </Link>\r\n                    </Fragment>\r\n                  )}\r\n                </Card>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BlogsData;\r\n","import Layout from \"../components/layout\";\r\nimport Seo from \"../components/seo\";\r\nimport React from \"react\";\r\nimport BlogsData from \"../screens/blogs\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore/lite\";\r\nimport { graphql } from \"gatsby\";\r\nimport BreadCrumb from \"../components/common/breadcrumb\";\r\n\r\nconst BlogsScreen = (props) => {\r\n  const app = initializeApp(props?.data?.site?.siteMetadata?.firestore);\r\n  const db = getFirestore(app);\r\n  const breadcrumbLinks = [\r\n    { text: \"Home\", link: \"/\" },\r\n    { text: \"Blogs\", link: \"\" },\r\n  ];\r\n\r\n  return (\r\n    <Layout db={db}>\r\n      <BreadCrumb items={breadcrumbLinks} />\r\n      <BlogsData data={props?.data?.allDataJson} blogImages={props?.data?.allImageSharp?.edges} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const Head = () => (\r\n  <Seo\r\n    title=\"Blogs | Justtry Technologies\"\r\n    headTitle=\"Blogs | Justtry Technologies\"\r\n    description=\"Dive into the world of innovation with Justtry Technologies' blog. Uncover the latest tech trends, gain insights from industry experts, and empower yourself with cutting-edge knowledge. Explore a fusion of expertise and creativity as we unravel the future of technology together. Justtry Technologies - where curiosity meets innovation.\"\r\n    keywords=\"Blog, Keywords, Top 10, Tips, How-to, Guide, Insights, Trends, Best Practices, Expert advice\"\r\n  ></Seo>\r\n);\r\nexport default BlogsScreen;\r\n\r\nexport const query = graphql`\r\n  query MyQuery {\r\n    allImageSharp {\r\n      edges {\r\n        node {\r\n          gatsbyImageData\r\n          id\r\n        }\r\n      }\r\n    }\r\n    allDataJson {\r\n      edges {\r\n        node {\r\n          id\r\n          keyId\r\n          slug\r\n          author_name\r\n          blog_created_date\r\n          title\r\n          short_description\r\n          description\r\n          meta_title\r\n          meta_description\r\n          image\r\n          category\r\n          tags\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        firestore {\r\n          apiKey\r\n          appId\r\n          authDomain\r\n          messagingSenderId\r\n          projectId\r\n          storageBucket\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["_ref","items","React","Container","fluid","className","Row","map","item","index","key","length","text","Link","to","link","data","propsData","blogImages","count","blogsData","setBlogsData","useState","useEffect","loadBlogs","_propsData$edges","edges","sort","a","b","node","keyId","blogsArr","blog","blogImgObj","_blog$node","_blog$node$image","_blogImgObj$node","_blogImgObj$node$gats","_blogImgObj$node$gats2","_blogImgObj$node$gats3","_blogImgObj$node$gats4","jsonBlogImgEndPath","image","split","graphBlogImgEndPath","gatsbyImageData","images","fallback","src","_blogImgObj$node2","_blogImgObj$node2$gat","_blogImgObj$node2$gat2","_blogImgObj$node2$gat3","blogImg","push","id","ele","ind","_blog$node2","_blog$node3","_blog$node4","_blog$node5","_blog$node6","_blog$node7","_blog$node8","_blog$node9","_blog$node10","_blog$node11","Card","Fragment","slug","Img","alt","title","Body","blog_created_date","short_description","Head","Seo","headTitle","description","keywords","props","_props$data","_props$data$site","_props$data$site$site","_props$data2","_props$data3","_props$data3$allImage","app","initializeApp","site","siteMetadata","firestore","db","getFirestore","Layout","BreadCrumb","BlogsData","allDataJson","allImageSharp","CardImg","bsPrefix","variant","as","Component","ref","prefix","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","border","body","Object","assign","Title","Subtitle","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}