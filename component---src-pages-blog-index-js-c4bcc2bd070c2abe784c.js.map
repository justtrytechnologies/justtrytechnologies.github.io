{"version":3,"file":"component---src-pages-blog-index-js-c4bcc2bd070c2abe784c.js","mappings":"2JAgCA,IA5BmBA,IAAgB,IAAf,MAAEC,GAAOD,EAC3B,OACEE,EAAAA,cAACC,EAAAA,EAAS,CAACC,OAAK,EAACC,UAAU,QACzBH,EAAAA,cAACI,EAAAA,EAAG,KACFJ,EAAAA,cAAA,OAAK,aAAW,aAAaG,UAAU,qBACrCH,EAAAA,cAAA,MAAIG,UAAU,cACXJ,EAAMM,KAAI,CAACC,EAAMC,IAChBP,EAAAA,cAAA,MACEQ,IAAKD,EACL,eAAcA,IAAUR,EAAMU,OAAS,EAAI,OAAS,KACpDN,UAAS,mBACPI,IAAUR,EAAMU,OAAS,EAAI,UAAY,KAG1CF,IAAUR,EAAMU,OAAS,EACxBH,EAAKI,KAELV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAIN,EAAKO,MAAOP,EAAKI,YAO7B,C,+MCLhB,MArBkBI,IAChB,MAAM,EAACC,EAAsB,EAACC,IAA4BC,EAAAA,EAAAA,UAASH,IAC7D,EAACI,EAAU,EAACC,IAAgBF,EAAAA,EAAAA,WAAS,GAY3C,MAAO,CACLF,wBACAK,cAZqBC,IACrBF,GAAa,GAKbH,EAHED,EAAwBD,EAASO,EAC7BN,EAAwBD,EACxBO,GAENF,GAAa,EAAM,EAMnBD,YACD,E,gDCsjBH,MA/jBmBI,IACjB,MAAM,GAAEC,GAAOD,EACf,IAAIE,EAAQ,EACZ,MAAM,sBAAET,EAAqB,cAAEK,EAAa,UAAEF,GAAcO,EAAS,IAC/D,EAACC,EAAc,EAACC,IAAoBV,EAAAA,EAAAA,UAAS,KAC7C,EAACW,EAAU,EAACC,IAAgBZ,EAAAA,EAAAA,WAAS,IACrC,EAACa,EAAU,EAACC,IAAgBd,EAAAA,EAAAA,UAAS,IAC3Ce,QAAQC,IAAI,cAAeH,GAE3B,MAAM,EAACI,EAAQ,EAACC,IAAclB,EAAAA,EAAAA,WAAS,IACjC,EAACmB,EAAY,EAACC,IAAkBpB,EAAAA,EAAAA,WAAS,IAoB/CqB,EAAAA,EAAAA,YAAU,KACJV,GAAaL,GACfgB,EAAchB,EAChB,GACC,CAACK,EAAWL,KAEfe,EAAAA,EAAAA,YAAU,KACRT,GAAa,EAAK,GACjB,KAEHS,EAAAA,EAAAA,YAAU,KACR,GAAIV,IACEE,aAAS,EAATA,EAAWrB,QAAS,EAAG,CACzB,MAAM+B,EAAoBC,MAAOlB,EAAImB,KACnC,IAAIC,EAAkB,GAClBC,QAAuBC,EAAAA,EAAAA,WACzBtB,EACAuB,EAAAA,eAAeC,WAEjB,IAAK,IAAIC,KAAWN,EAAO,CACzB,IAAK,IAAIO,KAAiBL,GACpBI,aAAO,EAAPA,EAASE,SAASD,aAAa,EAAbA,EAAezC,OACnCwC,EAAQG,UAAYF,aAAa,EAAbA,EAAezB,MACnCmB,EAAgBS,KAAKJ,IAGzBrB,EAAiBgB,EACnB,GAEFH,EAAkBjB,EAAIO,EACxB,CACF,GACC,CAACF,EAAWL,EAAIO,IAEnBJ,EAAc2B,MAAK,CAACC,EAAGC,IAAMA,EAAEJ,UAAYG,EAAEH,YAE7C,MAAM,EAACK,EAAY,EAACC,IAAkBxC,EAAAA,EAAAA,UAAS,OACzC,EAACyC,EAAQ,EAACC,IAAc1C,EAAAA,EAAAA,WAAS,GAEjCsB,EAAgBE,UACpB,IACE,GAAIP,IAAYwB,EAAS,OACzBvB,GAAW,GACX,MAAM,KACJb,EACAkC,YAAaI,EACbF,QAASG,SACDhB,EAAAA,EAAAA,mBACRtB,EACAuB,EAAAA,eAAegB,KACf,YACA,EACAN,GAEFzB,GAAcgC,GAAQ,GAAAC,QAAAC,EAAAA,EAAAA,GAASF,IAAQE,EAAAA,EAAAA,GAAK3C,MAC5CmC,EAAeG,GACfD,EAAWE,GACX1B,GAAW,EACb,CAAE,MAAO+B,GACPlC,QAAQC,IAAI,OAAQiC,EACtB,CAAC,QACC7B,GAAe,EACjB,GAkBF,OACErC,EAAAA,cAACC,EAAAA,EAAS,CAACC,OAAK,EAACC,UAAU,OACzBH,EAAAA,cAACmE,EAAAA,SAAQ,KACPnE,EAAAA,cAAA,OAAKG,UAAU,mBACbH,EAAAA,cAAA,UAAI,kBACHkC,GACClC,EAAAA,cAAA,OAAKG,UAAU,kBACbH,EAAAA,cAACoE,EAAAA,EAAO,CAACC,QAAS,YAGpBnC,IAAWR,aAAa,EAAbA,EAAejB,SAAU,GACpCT,EAAAA,cAAA,OAAKG,UAAU,kBACbH,EAAAA,cAAA,UAAI,oBAKVA,EAAAA,cAAA,OAAKG,UAAU,gBACbH,EAAAA,cAACC,EAAAA,EAAS,CAACE,UAAU,2BACnBH,EAAAA,cAACI,EAAAA,EAAG,CAACD,UAAU,gBACZuB,aAAa,EAAbA,EAAe4C,MAAM,EAAG,GAAGjE,KAAI,CAACkE,EAAKC,KACvBA,EACA,GAAM,IACjBhD,GAAgB,GAGhBxB,EAAAA,cAACyE,EAAAA,EAAG,CAACjE,IAAKgE,EAAKE,GAAI,EAAGC,GAAI,GAAIxE,UAAU,UACrCqB,EAAQ,GAAM,EACbxB,EAAAA,cAAC4E,EAAAA,EAAI,CAACpE,IAAK+D,EAAIM,GAAI1E,UAAU,gBAC3BH,EAAAA,cAACI,EAAAA,EAAG,CAACD,UAAU,WACbH,EAAAA,cAACyE,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAIxE,UAAU,UAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAK2D,aAAG,EAAHA,EAAKrB,MACZ/C,UAAU,kCAEVH,EAAAA,cAAA,OACE6E,GAAG,cACH1E,UAAU,uBAEVH,EAAAA,cAAA,OACE+E,IAAG,kBAAmBR,aAAG,EAAHA,EAAKrB,MAAI,OAC/B8B,IAAKT,aAAG,EAAHA,EAAKU,UACV9E,UAAU,gBAEZH,EAAAA,cAAA,OAAKG,UAAU,oBACbH,EAAAA,cAAA,OACEkF,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,QAELtF,EAAAA,cAAA,QACEuF,EAAE,mCACFD,KAAK,eAOjBtF,EAAAA,cAACyE,EAAAA,EAAG,CACFK,GAAI,EACJH,GAAI,GACJxE,UAAU,yCAEVH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAK2D,aAAG,EAAHA,EAAKrB,MACZ/C,UAAU,qBAEVH,EAAAA,cAAA,KAAGG,UAAU,gBACVqF,IAAOjB,aAAG,EAAHA,EAAKkB,mBAAmBC,OAC9B,iBAIJ1F,EAAAA,cAAA,KAAGG,UAAU,iBAAiBoE,aAAG,EAAHA,EAAKoB,OACnC3F,EAAAA,cAAA,KAAGG,UAAU,wBACVoE,aAAG,EAAHA,EAAKqB,kBAAkBtB,MAAM,EAAG,KAAM,WAOjDtE,EAAAA,cAAC4E,EAAAA,EAAI,CAACpE,IAAK+D,EAAIM,GAAI1E,UAAU,gBAC3BH,EAAAA,cAACI,EAAAA,EAAG,CAACD,UAAU,WACbH,EAAAA,cAACyE,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAIxE,UAAU,oBAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAK2D,aAAG,EAAHA,EAAKrB,MACZ/C,UAAU,qBAEVH,EAAAA,cAAA,KAAGG,UAAU,gBACVqF,IAAOjB,aAAG,EAAHA,EAAKkB,mBAAmBC,OAC9B,iBAIJ1F,EAAAA,cAAA,KAAGG,UAAU,iBAAiBoE,aAAG,EAAHA,EAAKoB,OACnC3F,EAAAA,cAAA,KAAGG,UAAU,wBACVoE,aAAG,EAAHA,EAAKqB,kBAAkBtB,MAAM,EAAG,KAAM,SAI7CtE,EAAAA,cAACyE,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAIxE,UAAU,iBAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAK2D,aAAG,EAAHA,EAAKrB,MACZ/C,UAAU,kCAEVH,EAAAA,cAAA,OACE6E,GAAG,cACH1E,UAAU,uBAEVH,EAAAA,cAAA,OACE+E,IAAG,kBAAmBR,aAAG,EAAHA,EAAKrB,MAAI,OAC/B8B,IAAKT,aAAG,EAAHA,EAAKU,UACV9E,UAAU,gBAGZH,EAAAA,cAAA,OAAKG,UAAU,qBACbH,EAAAA,cAAA,OACEkF,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,QAELtF,EAAAA,cAAA,QACEuF,EAAE,+CACFD,KAAK,yBAkBrCtF,EAAAA,cAAA,OACEG,UAAU,kBACV0F,MAAO,CACLC,WAAY,gBAGd9F,EAAAA,cAAA,MACE6F,MAAO,CACLE,MAAO,YAEV,iBA+JH/F,EAAAA,cAAA,OACEG,UAAU,eACV0F,MAAO,CACLC,WAAY,gBAGd9F,EAAAA,cAACC,EAAAA,EAAS,CAACE,UAAU,2BACnBH,EAAAA,cAACI,EAAAA,EAAG,CAACD,UAAU,gBACZ2B,aAAS,EAATA,EAAWzB,KAAI,CAACkE,EAAKC,KACPA,EACA,GAAM,IACjBhD,GAAgB,GAGhBxB,EAAAA,cAACyE,EAAAA,EAAG,CAACjE,IAAKgE,EAAKE,GAAI,EAAGC,GAAI,GAAIxE,UAAU,UACrCqB,EAAQ,GAAM,EACbxB,EAAAA,cAAC4E,EAAAA,EAAI,CAACpE,IAAK+D,EAAIM,GAAI1E,UAAU,gBAC3BH,EAAAA,cAACI,EAAAA,EAAG,CAACD,UAAU,WACbH,EAAAA,cAACyE,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAIxE,UAAU,UAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAK2D,aAAG,EAAHA,EAAKrB,MACZ/C,UAAU,iCAEVH,EAAAA,cAAA,OACE6E,GAAG,cACH1E,UAAU,uBAEVH,EAAAA,cAAA,OACE+E,IAAG,kBAAmBR,aAAG,EAAHA,EAAKrB,MAAI,OAC/B8B,IAAKT,aAAG,EAAHA,EAAKU,UACV9E,UAAU,gBAEZH,EAAAA,cAAA,OAAKG,UAAU,oBACbH,EAAAA,cAAA,OACEkF,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,QAELtF,EAAAA,cAAA,QACEuF,EAAE,mCACFD,KAAK,eAOjBtF,EAAAA,cAACyE,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAIxE,UAAU,UAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAK2D,aAAG,EAAHA,EAAKrB,MACZ/C,UAAU,qBAEVH,EAAAA,cAAA,KAAGG,UAAU,gBACVqF,IAAOjB,aAAG,EAAHA,EAAKkB,mBAAmBC,OAC9B,iBAGJ1F,EAAAA,cAAA,KAAGG,UAAU,iBAAiBoE,aAAG,EAAHA,EAAKoB,OACnC3F,EAAAA,cAAA,KAAGG,UAAU,wBACVoE,aAAG,EAAHA,EAAKqB,kBAAkBtB,MAAM,EAAG,KAAM,WAOjDtE,EAAAA,cAAC4E,EAAAA,EAAI,CAACpE,IAAK+D,EAAIM,GAAI1E,UAAU,gBAC3BH,EAAAA,cAACI,EAAAA,EAAG,CAACD,UAAU,WACbH,EAAAA,cAACyE,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAIxE,UAAU,oBAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAK2D,aAAG,EAAHA,EAAKrB,MACZ/C,UAAU,qBAEVH,EAAAA,cAAA,KAAGG,UAAU,gBACVqF,IAAOjB,aAAG,EAAHA,EAAKkB,mBAAmBC,OAC9B,iBAIJ1F,EAAAA,cAAA,KAAGG,UAAU,iBAAiBoE,aAAG,EAAHA,EAAKoB,OACnC3F,EAAAA,cAAA,KAAGG,UAAU,wBACVoE,aAAG,EAAHA,EAAKqB,kBAAkBtB,MAAM,EAAG,KAAM,SAI7CtE,EAAAA,cAACyE,EAAAA,EAAG,CAACK,GAAI,EAAGH,GAAI,GAAIxE,UAAU,iBAC5BH,EAAAA,cAACW,EAAAA,KAAI,CACHC,GAAE,IAAK2D,aAAG,EAAHA,EAAKrB,MACZ/C,UAAU,kCAEVH,EAAAA,cAAA,OACE6E,GAAG,cACH1E,UAAU,uBAEVH,EAAAA,cAAA,OACE+E,IAAG,kBAAmBR,aAAG,EAAHA,EAAKrB,MAAI,OAC/B8B,IAAKT,aAAG,EAAHA,EAAKU,UACV9E,UAAU,gBAGZH,EAAAA,cAAA,OAAKG,UAAU,qBACbH,EAAAA,cAAA,OACEkF,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,QAELtF,EAAAA,cAAA,QACEuF,EAAE,+CACFD,KAAK,sBAc3BlD,GAAesB,GACf1D,EAAAA,cAACyE,EAAAA,EAAG,CAACuB,GAAI,IACPhG,EAAAA,cAACiG,EAAAA,EAAM,CACLC,SAAUhE,EACV/B,UAAU,gBACVgG,QAAS5D,GACV,aACYL,GAAWlC,EAAAA,cAACoE,EAAAA,EAAO,WAYhC,E,oBC7jBhB,MAqBagC,EAAQC,IAAW,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7B,MAAM,KAAErF,GAAS+E,EACjBrE,QAAQC,IAAI,SAAUX,GAEtB,MAAMsF,EAAUtF,SAAmB,QAAfgF,EAAJhF,EAAMuF,qBAAa,IAAAP,GAAO,QAAPC,EAAnBD,EAAqBQ,aAAK,IAAAP,OAAtB,EAAJA,EAA4BQ,MAAMC,IAAW,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAC1D,OAAOL,SAAW,QAANC,EAALD,EAAOM,YAAI,IAAAL,GAAiB,QAAjBC,EAAXD,EAAaM,uBAAe,IAAAL,GAAQ,QAARC,EAA5BD,EAA8BM,cAAM,IAAAL,GAAU,QAAVC,EAApCD,EAAsCM,gBAAQ,IAAAL,GAAK,QAALC,EAA9CD,EAAgDrC,WAAG,IAAAsC,OAA9C,EAALA,EAAqDK,SAC1D,eACD,IAEH,OACE1H,EAAAA,cAAC2H,EAAAA,EAAG,CACFhC,MAAM,qDACNiC,UAAU,qDACVC,YAAY,mVACZb,MAAOJ,SAAa,QAANJ,EAAPI,EAASU,YAAI,IAAAd,GAAiB,QAAjBC,EAAbD,EAAee,uBAAe,IAAAd,GAAQ,QAARC,EAA9BD,EAAgCe,cAAM,IAAAd,GAAU,QAAVC,EAAtCD,EAAwCe,gBAAQ,IAAAd,OAAzC,EAAPA,EAAkD5B,KACpD,EAIX,MAxCqBsB,IAAW,IAADyB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7B,MAAMC,GAAMC,EAAAA,EAAAA,IAAclC,SAAW,QAANyB,EAALzB,EAAO/E,YAAI,IAAAwG,GAAM,QAANC,EAAXD,EAAaU,YAAI,IAAAT,GAAc,QAAdC,EAAjBD,EAAmBU,oBAAY,IAAAT,OAA1B,EAALA,EAAiCU,WACrDnH,GAAKoH,EAAAA,EAAAA,IAAaL,GAClBM,EAAkB,CACtB,CAAElI,KAAM,OAAQG,KAAM,KACtB,CAAEH,KAAM,QAASG,KAAM,KAIzB,OAFAmB,QAAQC,IAAI,oBAAqB2G,GAG/B5I,EAAAA,cAAC6I,EAAAA,EAAM,CAACtH,GAAIA,GACVvB,EAAAA,cAAC8I,EAAAA,EAAU,CAAC/I,MAAO6I,IACnB5I,EAAAA,cAAC+I,EAAS,CACRC,WAAY3C,SAAW,QAAN4B,EAAL5B,EAAO/E,YAAI,IAAA2G,GAAe,QAAfC,EAAXD,EAAapB,qBAAa,IAAAqB,OAArB,EAALA,EAA4BpB,MACxCvF,GAAIA,EACJ0H,QAAS5C,SAAW,QAAN8B,EAAL9B,EAAO/E,YAAI,IAAA6G,GAAM,QAANC,EAAXD,EAAaK,YAAI,IAAAJ,GAAc,QAAdC,EAAjBD,EAAmBK,oBAAY,IAAAJ,OAA1B,EAALA,EAAiCY,UAErC,C,gICtBb,MAAMC,EAAuB,cAE7B,EACEC,WACAhJ,YACAkE,UACA+E,GAAIC,EAAY,SACbhD,GACFiD,KACD,MAAMC,GAAS,QAAmBJ,EAAU,YAC5C,OAAoB,SAAKE,EAAW,CAClCC,IAAKA,EACLnJ,UAAW,IAAWkE,EAAU,GAAGkF,KAAUlF,IAAYkF,EAAQpJ,MAC9DkG,GACH,IAEJ6C,EAAQM,YAAc,UACtB,Q,UCfA,MAAMC,EAA0B,cAAiB,EAC/CN,WACAhJ,YAEAiJ,GAAIC,EAAY,SACbhD,GACFiD,KACD,MAAMC,GAAS,QAAmBJ,EAAU,eACtCO,GAAe,IAAAC,UAAQ,KAAM,CACjCC,mBAAoBL,KAClB,CAACA,IACL,OAAoB,SAAKM,EAAA,EAAkBC,SAAU,CACnDC,MAAOL,EACPM,UAAuB,SAAKX,EAAW,CACrCC,IAAKA,KACFjD,EACHlG,UAAW,IAAWA,EAAWoJ,MAEnC,IAEJE,EAAWD,YAAc,aACzB,QCnBA,MAAMS,GAAgB,EAAAC,EAAA,GAAiB,MACjCC,GAAgB,EAAAD,EAAA,GAAiB,MACjCE,GAAW,EAAAC,EAAA,GAAmB,aAC9BC,GAAY,EAAAD,EAAA,GAAmB,aAAc,CACjDhB,UAAWY,IAEPM,GAAe,EAAAF,EAAA,GAAmB,gBAAiB,CACvDhB,UAAWc,IAEPK,GAAW,EAAAH,EAAA,GAAmB,YAAa,CAC/ChB,UAAW,MAEPoB,GAAW,EAAAJ,EAAA,GAAmB,YAAa,CAC/ChB,UAAW,MAEPqB,GAAa,EAAAL,EAAA,GAAmB,eAChCM,GAAiB,EAAAN,EAAA,GAAmB,oBACpCzF,EAAoB,cAAiB,EACzCuE,WACAhJ,YACAyK,KACAlK,OACAmK,SACAC,QAAO,EACPd,WAEAZ,GAAIC,EAAY,SACbhD,GACFiD,KACD,MAAMC,GAAS,QAAmBJ,EAAU,QAC5C,OAAoB,SAAKE,EAAW,CAClCC,IAAKA,KACFjD,EACHlG,UAAW,IAAWA,EAAWoJ,EAAQqB,GAAM,MAAMA,IAAMlK,GAAQ,QAAQA,IAAQmK,GAAU,UAAUA,KACvGb,SAAUc,GAAoB,SAAKV,EAAU,CAC3CJ,SAAUA,IACPA,GACL,IAEJpF,EAAK4E,YAAc,OACnB,MAAeuB,OAAOC,OAAOpG,EAAM,CACjCqG,IAAK,EACLC,MAAOZ,EACPa,SAAUZ,EACVa,KAAMhB,EACNzJ,KAAM6J,EACNa,KAAMZ,EACNa,OAAQ,EACRC,OAAQb,EACRc,WAAYb,G","sources":["webpack://justtry-app/./src/components/common/breadcrumb.js","webpack://justtry-app/./src/components/common/loadmore.js","webpack://justtry-app/./src/screens/blogs/index.js","webpack://justtry-app/./src/pages/blog/index.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/CardImg.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://justtry-app/./node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\nconst BreadCrumb = ({ items }) => {\r\n  return (\r\n    <Container fluid className=\"gx-0\">\r\n      <Row>\r\n        <nav aria-label=\"breadcrumb\" className=\"custom-breadcrumb\">\r\n          <ol className=\"breadcrumb\">\r\n            {items.map((item, index) => (\r\n              <li\r\n                key={index}\r\n                aria-current={index === items.length - 1 ? \"page\" : null}\r\n                className={`breadcrumb-item${\r\n                  index === items.length - 1 ? \" active\" : \"\"\r\n                }`}\r\n              >\r\n                {index === items.length - 1 ? (\r\n                  item.text\r\n                ) : (\r\n                  <Link to={item.link}>{item.text}</Link>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </nav>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BreadCrumb;\r\n","import { useState } from \"react\";\r\n\r\nconst LoadMore = (nbItem) => {\r\n  const [numberItemsPagination, setNumberItemsPagination] = useState(nbItem);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const loadMoreItems = (arrayLength) => {\r\n    setIsLoading(true);\r\n    const numberItems =\r\n      numberItemsPagination + nbItem < arrayLength\r\n        ? numberItemsPagination + nbItem\r\n        : arrayLength;\r\n    setNumberItemsPagination(numberItems);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return {\r\n    numberItemsPagination,\r\n    loadMoreItems,\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default LoadMore;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport Loading from \"../../components/common/loading\";\r\nimport LoadMore from \"../../components/common/loadmore\";\r\nimport { utils } from \"../../core/helper\";\r\nimport moment from \"moment\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\nimport { collectionKeys } from \"@core/helper/utils\";\r\nimport { collection, getDocs, query } from \"firebase/firestore/lite\";\r\n\r\nconst BlogsData = (data) => {\r\n  const { db } = data;\r\n  let count = 0;\r\n  const { numberItemsPagination, loadMoreItems, isLoading } = LoadMore(6);\r\n  const [trendingBlogs, setTrendingBlogs] = useState([]);\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const [blogsList, setBlogsList] = useState([]);\r\n  console.log(\"blogsList::\", blogsList);\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [initLoading, setInitLoading] = useState(true);\r\n\r\n  // const loadBlogsList = async (db) => {\r\n  //   try {\r\n  //     setLoading(true);\r\n  //     const data = await utils.getDocData(db, \"blog\");\r\n  //     if (data?.length > 0) {\r\n  //       setBlogsList(data);\r\n  //       setLoading(false);\r\n  //     } else {\r\n  //       setBlogsList([]);\r\n  //       setLoading(false);\r\n  //     }\r\n  //   } catch (err) {\r\n  //     setLoading(false);\r\n  //     setBlogsList([]);\r\n  //     console.log(\"err:;\", err);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (isMounted && db) {\r\n      loadBlogsList(db);\r\n    }\r\n  }, [isMounted, db]);\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isMounted) {\r\n      if (blogsList?.length > 0) {\r\n        const sortTrendingBlogs = async (db, blogs) => {\r\n          let addViewCountArr = [];\r\n          let blogsCountsArr = await utils.getDocData(\r\n            db,\r\n            collectionKeys.VIEWCOUNT\r\n          );\r\n          for (let blogObj of blogs) {\r\n            for (let blogsCountDoc of blogsCountsArr) {\r\n              if (blogObj?.slug === blogsCountDoc?.key) {\r\n                blogObj.viewCount = blogsCountDoc?.count;\r\n                addViewCountArr.push(blogObj);\r\n              }\r\n            }\r\n            setTrendingBlogs(addViewCountArr);\r\n          }\r\n        };\r\n        sortTrendingBlogs(db, blogsList);\r\n      }\r\n    }\r\n  }, [isMounted, db, blogsList]);\r\n\r\n  trendingBlogs.sort((a, b) => b.viewCount - a.viewCount);\r\n\r\n  const [lastVisible, setLastVisible] = useState(null);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const loadBlogsList = async () => {\r\n    try {\r\n      if (loading || !hasMore) return;\r\n      setLoading(true);\r\n      const {\r\n        data,\r\n        lastVisible: newLastVisible,\r\n        hasMore: moreData,\r\n      } = await utils.fetchPaginatedData(\r\n        db,\r\n        collectionKeys.BLOG,\r\n        \"createdAt\",\r\n        6,\r\n        lastVisible\r\n      );\r\n      setBlogsList((prevData) => [...prevData, ...data]);\r\n      setLastVisible(newLastVisible);\r\n      setHasMore(moreData);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(\"er::\", error);\r\n    } finally {\r\n      setInitLoading(false);\r\n    }\r\n  };\r\n\r\n  // const getSlugsOnly = async (db) => {\r\n  //   try {\r\n  //     const q = query(collection(db, collectionKeys.BLOG)); // Only fetch 'slug' field\r\n  //     const querySnapshot = await getDocs(q);\r\n  //     const slugs = querySnapshot.docs.map((doc) => ({\r\n  //       slug: doc.data().slug,\r\n  //     }));\r\n  //     console.log(\"slugs::\", slugs);\r\n  //     return slugs;\r\n  //   } catch (err) {\r\n  //     console.log(\"Error fetching slugs:\", err);\r\n  //   }\r\n  // };\r\n  // getSlugsOnly(db);\r\n\r\n  return (\r\n    <Container fluid className=\"p-0\">\r\n      <Fragment>\r\n        <div className=\"blog_details_bg\">\r\n          <h1>Trending Blogs</h1>\r\n          {loading && (\r\n            <div className=\"loader_wrapper\">\r\n              <Loading variant={\"light\"} />\r\n            </div>\r\n          )}\r\n          {!loading && trendingBlogs?.length <= 0 && (\r\n            <div className=\"loader_wrapper\">\r\n              <h3>No Blogs Found</h3>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* {!loading && ( */}\r\n        <div className=\"blog_list_bg\">\r\n          <Container className=\"blog_container_position\">\r\n            <Row className=\"blog_row_gap\">\r\n              {trendingBlogs?.slice(0, 6).map((ele, ind) => {\r\n                let blogId = ind;\r\n                if (blogId % 2 === 0) {\r\n                  count = count + 1;\r\n                }\r\n                return (\r\n                  <Col key={ind} lg={6} xs={12} className=\"p-lg-0\">\r\n                    {count % 2 !== 0 ? (\r\n                      <Card key={ele.id} className=\"jt_blog_card\">\r\n                        <Row className=\"mx-lg-0\">\r\n                          <Col sm={6} xs={12} className=\"p-sm-0\">\r\n                            <Link\r\n                              to={`${ele?.slug}`}\r\n                              className=\"text-decoration-none  d-block \"\r\n                            >\r\n                              <div\r\n                                id=\"arrow_right\"\r\n                                className=\"jt_blog_img_wrapper\"\r\n                              >\r\n                                <img\r\n                                  src={`/images/blogs/${ele?.slug}.png`}\r\n                                  alt={ele?.image_alt}\r\n                                  className=\"jt_blog_img\"\r\n                                />\r\n                                <div className=\"blog_arrow_first\">\r\n                                  <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"15\"\r\n                                    height=\"18\"\r\n                                    viewBox=\"0 0 15 18\"\r\n                                    fill=\"none\"\r\n                                  >\r\n                                    <path\r\n                                      d=\"M0 9L15 0.339745L15 17.6603L0 9Z\"\r\n                                      fill=\"white\"\r\n                                    />\r\n                                  </svg>\r\n                                </div>\r\n                              </div>\r\n                            </Link>\r\n                          </Col>\r\n                          <Col\r\n                            sm={6}\r\n                            xs={12}\r\n                            className=\"p-sm-0 d-flex justify-content-center \"\r\n                          >\r\n                            <Link\r\n                              to={`${ele?.slug}`}\r\n                              className=\"jt_blog_card_body\"\r\n                            >\r\n                              <p className=\"jt_blog_date\">\r\n                                {moment(ele?.blog_created_date).format(\r\n                                  \"DD MMMM YYYY\"\r\n                                )}\r\n                              </p>\r\n\r\n                              <p className=\"jt_blog_title\">{ele?.title}</p>\r\n                              <p className=\"jt_blog_description\">\r\n                                {ele?.short_description.slice(0, 65) + \"...\"}\r\n                              </p>\r\n                            </Link>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card>\r\n                    ) : (\r\n                      <Card key={ele.id} className=\"jt_blog_card\">\r\n                        <Row className=\"mx-lg-0\">\r\n                          <Col sm={6} xs={12} className=\"p-sm-0 order_two\">\r\n                            <Link\r\n                              to={`${ele?.slug}`}\r\n                              className=\"jt_blog_card_body\"\r\n                            >\r\n                              <p className=\"jt_blog_date\">\r\n                                {moment(ele?.blog_created_date).format(\r\n                                  \"DD MMMM YYYY\"\r\n                                )}\r\n                              </p>\r\n\r\n                              <p className=\"jt_blog_title\">{ele?.title}</p>\r\n                              <p className=\"jt_blog_description\">\r\n                                {ele?.short_description.slice(0, 65) + \"...\"}\r\n                              </p>\r\n                            </Link>\r\n                          </Col>\r\n                          <Col sm={6} xs={12} className=\"p-0 order_one\">\r\n                            <Link\r\n                              to={`${ele?.slug}`}\r\n                              className=\"text-decoration-none  d-block \"\r\n                            >\r\n                              <div\r\n                                id=\"arrow_right\"\r\n                                className=\"jt_blog_img_wrapper\"\r\n                              >\r\n                                <img\r\n                                  src={`/images/blogs/${ele?.slug}.png`}\r\n                                  alt={ele?.image_alt}\r\n                                  className=\"jt_blog_img\"\r\n                                />\r\n\r\n                                <div className=\"blog_arrow_second\">\r\n                                  <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"15\"\r\n                                    height=\"18\"\r\n                                    viewBox=\"0 0 15 18\"\r\n                                    fill=\"none\"\r\n                                  >\r\n                                    <path\r\n                                      d=\"M15 9.22363L0 17.8839L0 0.563378L15 9.22363Z\"\r\n                                      fill=\"white\"\r\n                                    />\r\n                                  </svg>\r\n                                </div>\r\n                              </div>\r\n                            </Link>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card>\r\n                    )}\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n        {/* )} */}\r\n      </Fragment>\r\n      <div\r\n        className=\"blog_details_bg\"\r\n        style={{\r\n          background: \"transparent\",\r\n        }}\r\n      >\r\n        <h2\r\n          style={{\r\n            color: \"#7534fc\",\r\n          }}\r\n        >\r\n          Latest Blogs\r\n        </h2>\r\n        {/* {loading && (\r\n          <div className=\"loader_wrapper\">\r\n            <Loading variant={\"dark\"} />\r\n          </div>\r\n        )} */}\r\n      </div>\r\n\r\n      {/* {!loading && blogsList?.length > 0 && (\r\n        <div\r\n          className=\"blog_list_bg\"\r\n          style={{\r\n            background: \"transparent\",\r\n          }}\r\n        >\r\n          <Container className=\"blog_container_position\">\r\n            <Row className=\"blog_row_gap\">\r\n              {blogsList?.slice(0, numberItemsPagination).map((ele, ind) => {\r\n                let blogId = ind;\r\n                if (blogId % 2 === 0) {\r\n                  count = count + 1;\r\n                }\r\n                let imagePath = `../../images/${ele?.image_path}.png`;\r\n\r\n                return (\r\n                  <Col lg={6} xs={12} className=\"p-lg-0\">\r\n                    {count % 2 !== 0 ? (\r\n                      <Card key={ele.id} className=\"jt_blog_card\">\r\n                        <Row className=\"mx-lg-0\">\r\n                          <Col sm={6} xs={12} className=\"p-sm-0\">\r\n                            <Link\r\n                              to={`${ele?.slug}`}\r\n                              className=\"text-decoration-none d-block \"\r\n                            >\r\n                              <div\r\n                                id=\"arrow_right\"\r\n                                className=\"jt_blog_img_wrapper\"\r\n                              >\r\n                                <StaticImage\r\n                                  src={\r\n                                    \"../../styles/assets/images/no-image.jpg\"\r\n                                  }\r\n                                  alt={ele?.image_alt}\r\n                                  className=\"jt_blog_img\"\r\n                                />\r\n                                <div className=\"blog_arrow_first\">\r\n                                  <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"15\"\r\n                                    height=\"18\"\r\n                                    viewBox=\"0 0 15 18\"\r\n                                    fill=\"none\"\r\n                                  >\r\n                                    <path\r\n                                      d=\"M0 9L15 0.339745L15 17.6603L0 9Z\"\r\n                                      fill=\"white\"\r\n                                    />\r\n                                  </svg>\r\n                                </div>\r\n                              </div>\r\n                            </Link>\r\n                          </Col>\r\n                          <Col sm={6} xs={12} className=\"p-sm-0\">\r\n                            <Link\r\n                              to={`${ele?.slug}`}\r\n                              className=\"jt_blog_card_body\"\r\n                            >\r\n                              <p className=\"jt_blog_date\">\r\n                                {moment(ele?.blog_created_date).format(\r\n                                  \"DD MMMM YYYY\"\r\n                                )}\r\n                              </p>\r\n                              <p className=\"jt_blog_title\">{ele?.title}</p>\r\n                              <p className=\"jt_blog_description\">\r\n                                {ele?.short_description.slice(0, 65) + \"...\"}\r\n                              </p>\r\n                            </Link>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card>\r\n                    ) : (\r\n                      <Card key={ele.id} className=\"jt_blog_card\">\r\n                        <Row className=\"mx-lg-0\">\r\n                          <Col sm={6} xs={12} className=\"p-sm-0 order_two\">\r\n                            <Link\r\n                              to={`${ele?.slug}`}\r\n                              className=\"jt_blog_card_body\"\r\n                            >\r\n                              <p className=\"jt_blog_date\">\r\n                                {moment(ele?.blog_created_date).format(\r\n                                  \"DD MMMM YYYY\"\r\n                                )}\r\n                              </p>\r\n\r\n                              <p className=\"jt_blog_title\">{ele?.title}</p>\r\n                              <p className=\"jt_blog_description\">\r\n                                {ele?.short_description.slice(0, 65) + \"...\"}\r\n                              </p>\r\n                            </Link>\r\n                          </Col>\r\n                          <Col sm={6} xs={12} className=\"p-0 order_one\">\r\n                            <Link\r\n                              to={`${ele?.slug}`}\r\n                              className=\"text-decoration-none  d-block \"\r\n                            >\r\n                              <div\r\n                                id=\"arrow_right\"\r\n                                className=\"jt_blog_img_wrapper\"\r\n                              >\r\n                                <StaticImage\r\n                                  src={`../../styles/assets/images/no-image.jpg`}\r\n                                  alt={ele?.image_alt}\r\n                                  className=\"jt_blog_img\"\r\n                                />\r\n\r\n                                <div className=\"blog_arrow_second\">\r\n                                  <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"15\"\r\n                                    height=\"18\"\r\n                                    viewBox=\"0 0 15 18\"\r\n                                    fill=\"none\"\r\n                                  >\r\n                                    <path\r\n                                      d=\"M15 9.22363L0 17.8839L0 0.563378L15 9.22363Z\"\r\n                                      fill=\"white\"\r\n                                    />\r\n                                  </svg>\r\n                                </div>\r\n                              </div>\r\n                            </Link>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card>\r\n                    )}\r\n                  </Col>\r\n                );\r\n              })}\r\n\r\n              {numberItemsPagination !== blogsList?.length && (\r\n                <Col md={12}>\r\n                  <Button\r\n                    disabled={\r\n                      isLoading || numberItemsPagination >= blogsList?.length\r\n                    }\r\n                    className=\"blog_load_btn\"\r\n                    onClick={() => loadMoreItems(numberItemsPagination + 2)}\r\n                  >\r\n                    Load more {isLoading && <Loading />}\r\n                  </Button>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      )} */}\r\n\r\n      <div\r\n        className=\"blog_list_bg\"\r\n        style={{\r\n          background: \"transparent\",\r\n        }}\r\n      >\r\n        <Container className=\"blog_container_position\">\r\n          <Row className=\"blog_row_gap\">\r\n            {blogsList?.map((ele, ind) => {\r\n              let blogId = ind;\r\n              if (blogId % 2 === 0) {\r\n                count = count + 1;\r\n              }\r\n              return (\r\n                <Col key={ind} lg={6} xs={12} className=\"p-lg-0\">\r\n                  {count % 2 !== 0 ? (\r\n                    <Card key={ele.id} className=\"jt_blog_card\">\r\n                      <Row className=\"mx-lg-0\">\r\n                        <Col sm={6} xs={12} className=\"p-sm-0\">\r\n                          <Link\r\n                            to={`${ele?.slug}`}\r\n                            className=\"text-decoration-none d-block \"\r\n                          >\r\n                            <div\r\n                              id=\"arrow_right\"\r\n                              className=\"jt_blog_img_wrapper\"\r\n                            >\r\n                              <img\r\n                                src={`/images/blogs/${ele?.slug}.png`}\r\n                                alt={ele?.image_alt}\r\n                                className=\"jt_blog_img\"\r\n                              />\r\n                              <div className=\"blog_arrow_first\">\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width=\"15\"\r\n                                  height=\"18\"\r\n                                  viewBox=\"0 0 15 18\"\r\n                                  fill=\"none\"\r\n                                >\r\n                                  <path\r\n                                    d=\"M0 9L15 0.339745L15 17.6603L0 9Z\"\r\n                                    fill=\"white\"\r\n                                  />\r\n                                </svg>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </Col>\r\n                        <Col sm={6} xs={12} className=\"p-sm-0\">\r\n                          <Link\r\n                            to={`${ele?.slug}`}\r\n                            className=\"jt_blog_card_body\"\r\n                          >\r\n                            <p className=\"jt_blog_date\">\r\n                              {moment(ele?.blog_created_date).format(\r\n                                \"DD MMMM YYYY\"\r\n                              )}\r\n                            </p>\r\n                            <p className=\"jt_blog_title\">{ele?.title}</p>\r\n                            <p className=\"jt_blog_description\">\r\n                              {ele?.short_description.slice(0, 65) + \"...\"}\r\n                            </p>\r\n                          </Link>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  ) : (\r\n                    <Card key={ele.id} className=\"jt_blog_card\">\r\n                      <Row className=\"mx-lg-0\">\r\n                        <Col sm={6} xs={12} className=\"p-sm-0 order_two\">\r\n                          <Link\r\n                            to={`${ele?.slug}`}\r\n                            className=\"jt_blog_card_body\"\r\n                          >\r\n                            <p className=\"jt_blog_date\">\r\n                              {moment(ele?.blog_created_date).format(\r\n                                \"DD MMMM YYYY\"\r\n                              )}\r\n                            </p>\r\n\r\n                            <p className=\"jt_blog_title\">{ele?.title}</p>\r\n                            <p className=\"jt_blog_description\">\r\n                              {ele?.short_description.slice(0, 65) + \"...\"}\r\n                            </p>\r\n                          </Link>\r\n                        </Col>\r\n                        <Col sm={6} xs={12} className=\"p-0 order_one\">\r\n                          <Link\r\n                            to={`${ele?.slug}`}\r\n                            className=\"text-decoration-none  d-block \"\r\n                          >\r\n                            <div\r\n                              id=\"arrow_right\"\r\n                              className=\"jt_blog_img_wrapper\"\r\n                            >\r\n                              <img\r\n                                src={`/images/blogs/${ele?.slug}.png`}\r\n                                alt={ele?.image_alt}\r\n                                className=\"jt_blog_img\"\r\n                              />\r\n\r\n                              <div className=\"blog_arrow_second\">\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width=\"15\"\r\n                                  height=\"18\"\r\n                                  viewBox=\"0 0 15 18\"\r\n                                  fill=\"none\"\r\n                                >\r\n                                  <path\r\n                                    d=\"M15 9.22363L0 17.8839L0 0.563378L15 9.22363Z\"\r\n                                    fill=\"white\"\r\n                                  />\r\n                                </svg>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card>\r\n                  )}\r\n                </Col>\r\n              );\r\n            })}\r\n\r\n            {!initLoading && hasMore && (\r\n              <Col md={12}>\r\n                <Button\r\n                  disabled={loading}\r\n                  className=\"blog_load_btn\"\r\n                  onClick={loadBlogsList}\r\n                >\r\n                  Load more {loading && <Loading />}\r\n                </Button>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* {loading && <p>Loading...</p>}\r\n      {hasMore && !loading && (\r\n        <button onClick={loadData}>Load More</button>\r\n      )} */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BlogsData;\r\n\r\n// let blogData = [\r\n//   {\r\n//     id: \"1girt26eelE3jXcU2gh2\",\r\n//     title:\r\n//       \"E-commerce in the Automotive Industry: Steering Toward the Future\",\r\n//     slug: \"ecommerce-automotive-industry\",\r\n//     short_description:\r\n//       \"E-commerce, an abbreviation for electronic commerce, denotes the digital exchange of goods and services through online platforms. When discussing e-commerce, it's common for people to immediately think of Amazon, the renowned international e-commerce company.\",\r\n//     image_path: \"blog-4\",\r\n//     content:\r\n//       '<div class=\"raw-html-embed\"><p>E-commerce, an abbreviation for electronic commerce, denotes the digital exchange of goods and services through online platforms. When discussing e-commerce, it\\'s common for people to immediately think of Amazon, the renowned international e-commerce company. E-commerce has transformed the way we shop, providing access to a wide range of products, from laptops to cars, anytime and anywhere. This, in turn, has eliminated the need to visit physical stores. E-commerce has been beneficial for both sellers and buyers simultaneously. While sellers benefit from global reach and increased profit margins, buyers are provided with enticing discounts and offers. </p><h2>The Automotive Industry Today: A Brief Overview</h2><p>The global automotive industry was tremendously hit by the pandemic, with consumers thinking twice before investing in automobiles and being more cautious. However, as COVID-19 restrictions eased, light vehicle (LV) sales began a recovery process in 2021 and gained momentum in 2022. Notably, the electric vehicle (EV) and hybrid segments have emerged as hotspots of activity within the industry. </p><p>Studies indicate that electric vehicles are poised to claim a remarkable 54% market share by 2035. Furthermore, the inclusion of \\\\\"digital platforms for automobile sales\\\\\" is a key factor driving the automobile industry\\'s growth. This transformation reflects the resilience and adaptability of the automotive sector as it steers towards a more digitally connected future.</p><h2>E-commerce in Automotive Industry: The Origin Story</h2><p>Amid the pandemic\\'s ‘in-person’ restrictions, technology emerged as a lifeline for the automotive industry. Dealerships worldwide closed their physical showrooms and started to embrace alternatives such as mobile consultations and video conferences. Buyers, too, harnessed digital tools like websites and apps to seamlessly explore and coordinate essential services like financing and insurance, transforming the car-buying experience into a remote and virtual affair. This eventually led to the convergence of e-commerce and the automotive industry.</p><div class=\"blog_details_explore_btn_wrapper\"><p>Explore our more details</p><button>Contact Us</button></div><h2> How the Automotive Industry is Revving Up Its Online Presence</h2><p>The global automotive e-commerce market is expected to reach $213.08 billion by 2029, as reported by Fortune Business Insights. This growth is being primarily driven by the spiking number of smartphone users, the ever-growing prominence of digital marketing, and the ongoing shift towards online shopping.</p><p>Furthermore, the convenience and simplicity of buying vehicles and automotive products online have significantly contributed to the rise of automotive e-commerce. With the emergence of e-commerce platforms and marketplaces (like Carvana, CarGurus, and Vroom), consumers can now effortlessly browse and purchase vehicles, parts, and accessories from the comfort of their own homes. The automotive industry is clearly heading towards a future where more transactions occur online, and the current trends indicate that this trajectory will persist.</p><h2>Perks of Automotive E-commerce</h2><p><strong><u>Unparalleled Convenience</u></strong><br> Whether you\\'re at home, at work, or on the go, you can browse, select, and purchase vehicles and auto parts with ease, no matter the time or place.</p><p><strong><u>A World of Choices</u></strong><br>Dive into a virtual universe of automotive options and products that cater to your needs and preferences, all accessible with just a few clicks.</p><p><strong><u>Price Transparency</u></strong><br>With swift price comparisons, you can hunt for the best deals, promotions, and discounts, ensuring you get the most value for your money.</p><p><strong><u>Informed Decisions</u></strong><br>Leverage the collective wisdom of fellow consumers through customer reviews and feedback, empowering you to make informed choices and avoid potential pitfalls.</p><p><strong><u>Swift Transactions</u></strong><br>Experience the efficiency of streamlined purchase processes, including secure and hassle-free payment options, eliminating the need for paperwork and long queues.</p><p><strong><u>Always Open</u></strong><br>Automotive e-commerce platforms are your 24/7 shopping companions, always ready to serve your needs, regardless of the time or day.</p><h2>Closing Thoughts</h2><p>With manufacturers investing their time, effort, and resources into analyzing the automotive industry and tracking e-commerce trends, consumers can anticipate a more seamless and tech-driven experience when purchasing their next vehicle online. Companies such as Audi and Mercedes are at the forefront of enhancing the online car shopping experience by introducing virtual and augmented reality features, bringing a sense of reality to the digital car-buying journey. The rapid pace of innovation in automotive e-commerce suggests that it will inevitably become the standard for car buyers everywhere in the years to come.</p></div>',\r\n//     createdAt: \"2024-10-14T14:25:06+05:30\",\r\n//     lastUpdate: \"2024-10-14T16:12:40+05:30\",\r\n//     image_alt: \"ecommerce-automotive-industry\",\r\n//   },\r\n//   {\r\n//     id: \"7dKYuiOxrqbXXIq4xT7n\",\r\n//     title: \"10 Best FREE Crypto Trading Bots in 2024\",\r\n//     slug: \"free-crypto-trading-bots-2024\",\r\n//     short_description:\r\n//       \"A Crypto trading bot is software that helps you automate your trading strategies. In other words, crypto trading bots automatically execute orders based on your trading strategy at your crypto exchange without manual intervention. This reduces risks and gives you an extra edge over manual traders.\",\r\n//     image_path: \"blog-7\",\r\n//     content:\r\n//       '<div class=\"raw-html-embed\"><h2>What is a Crypto trading bot?</h2><p> A Crypto trading bot is software that helps you automate your trading strategies. In other words, crypto trading bots automatically execute orders based on your trading strategy at your crypto exchange without manual intervention. This reduces risks and gives you an extra edge over manual traders.</p><p> <a href=\"/cryptocurrency-exchange-development-company\" target=\"_blank\">Exchanges</a> are now stepping into the trading bot space and launching Grid bots and DCA bots to provide better trading tools to their customers and increase trading volume to earn more fees.</p><p> However, starting with a crypto trading bot might be confusing and overwhelming. Therefore we have picked the best and easy-to-use trading bots for you. Some of the best trading bots for crypto listed below are free and open-source software.</p><p> If you are a beginner, start with pre-building ready-to-use trading strategy templates, reducing the risk of error when automating your strategy.</p><h2>Top 10 Crypto Trading Bots</h2><h3>1. Pionex — FREE best trading bots for crypto</h3><p> Don’t need to hassle with the API Keys while using Pionex. Pionex is the exchange with in-built crypto trading bots. It’s one of the best free trading bot platforms for <a href=\"/cryptocurrency-exchange-development-company\" target=\"_blank\">cryptocurrency</a> I’ve ever seen since 2017. Pionex also created some products on options trading, such as Lottery, where you can invest as low as $1. Pionex\\'s bots support a variety of trading pairs, including Bitcoin, Ethereum, and other major cryptocurrencies. The platform offers users the flexibility to customize their strategies or choose from preset options.</p><h3>2. Ku-Coin — Crypto trading bots for beginners</h3><p> Ku-Coin has few built-in trading bots, such as Grid bots for both spot and futures markets and a DCA bot. Ku-Coin is an exchange; therefore, these bots will be able to execute trades much better than any third-party bots connecting your crypto exchange using API keys. Exchanges are now stepping into the trading bot space and launching Grid bots and DCA bots to provide better trading tools to their customers and increase trading volume to earn more fees.</p><h3>3. Bits Gap — Grid Trading Bot for Binance</h3><p>Bits gap bot is best known for its unique grid bots. These bots allow you to perform high-frequency trading, who is only accessible to big hedge funds, or you need to buy these tools at high prices.</p><p> Each time the buy limit order is filled, the bot places a new sell order right above that price. And vice versa, a new buy order is placed below any filled sell order. As long as the price stays within the borders of the trading range, the bot will be trading non-stop.</p><p> Bitsgap algorithm is designed to maximize profit from buying low and selling high each time the price swings. Automated bots have risk-control features like Stop-loss, Trailing UP, Take profit, and several exit strategies. Moreover, the Bitsgap trading terminal offers you some top-notch tools.</p><h3>4. Tafabot — Trading Bot with Telegram Support</h3><p> Tafabot is an impressive selection of advanced trading bots, which includes the Martingale bot, Arbitrage bot, Grid bot, DCA bots, Smart Invest bot, Custom bots, and the NeuralNet bot. They have also created a Telegram group (Our Tafabot), where they share the top profitable configurations with live trading sessions, allowing you to stay up-to-date and informed on the latest strategies.</p><p> Coinbase, Kucoin, BYBIT, and many others. With partnerships with some of the most reputable exchanges in the industry, such as Binance, Huobi, MEXC Global and, Bybit, OKX, you can rest assured that Tafabot has you covered.</p><h3>5. Crypto Hopper — Trading bot Strategies and Marketplace</h3><p> One of the well-known trading bots on Crypto Hopper is the market-making bot. However, compared to Grid bots, Crypto Hopper allows you to create your own trading strategies and copy others using the Crypto Hopper marketplace.</p><p> Crypto Hopper Marketplace allows you to buy third-party services such as crypto signals, trading strategies, apps, and templates. Moreover, the bot offers a demo trading account, strategy designer, social trading platform, paper trading mode, and market arbitrage tool.</p><div class=\"blog_details_explore_btn_wrapper\"><p>Explore our more details</p><button>Contact Us</button></div><h3>6. Coin Rule — You can make your own Coin base Trading Bot!</h3><p> Coin Rule is a next-level bot for beginners. The “if-this-then-that” rule allows even less advanced crypto traders to build their cryptocurrency trading strategy in a minute. The user-friendly interface guides users in making the trading bot step-by-step.</p><p> In addition, the platform allows various cryptocurrency trading strategies, including stop loss, take profit, and integrating the leading technical indicators.</p><p> The list of trading strategies that Coin Rule allows is limitless, and the company regularly posts new ideas in the platform’s Knowledge Base.</p><h3>7. Trality — The Most Advanced Crypto Trading Bots at Your Fingertips</h3><p> Founded in 2019, I discovered Trality a year later and continue to be impressed by its expanding list of innovative features.</p><p> Investors can rent profitable bots tailored to individual risk tolerances (low, medium, and high) and investment goals based on a full suite of metrics, while bot creators can now monetize their bots and earn passive income from investors around the world. Most importantly, all bot algorithms remain completely private (every creator retains full IP rights).</p><p> A nice additional feature is margin trading, and the platform is also equipped with a power backtester. Pair it with Trality’s proprietary Optimizer to fine-tune parameters and validate your ideas. Once the bot is ready, it can be set up to live-trade on popular exchanges like Binance, Coinbase Pro, Kraken and Bitpanda.</p><h3>8. Trality — The Most Advanced Crypto Trading Bots at Your Fingertips</h3><p> Founded in 2019, I discovered Trality a year later and continue to be impressed by its expanding list of innovative features.</p><p> 3Commas is one of the top crypto trading bots. I put it on the list because the UI is more for a professional trader.</p><p>Recently 3Commas released a new GRID bot and a DCA bot.</p><ul> <li> So if you’re a professional bot trader already, you should try 3Commas. It has two subscription levels — Basic and Pro. The basic level bot price is $29/month, while the latter costs $99/month and has many more features. </li> <li> The <a href=\"/cryptocurrency-exchange-development-company\" target=\"_blank\">cryptocurrency</a> trading bot on 3Commas can implement multiple bitcoin trading strategies based on technical indicators and enable trading bitcoin for profit. </li> <li> The community is good, and you can buy some online courses using the 3Commas Bitcoin trading bot. </li> <li> Furthermore, the platform also offers a third-party crypto signals Marketplace. </li></ul><h3>9. Cornix — Automate Telegram-based crypto signal</h3><p> They’ve successfully combined their cutting-edge software with a simplistic, user-friendly interface (create your bot in as little as three clicks), which is one of the main reasons they have entered the list. Cornix believes anyone can trade crypto, and they want to let people access a simple crypto trading platform without compromising on safety.</p><p> Recently released a new Advanced DCA bots. Try Cornix for free; no credit card is required.</p><h3>10. Trade Santa — Automated Crypto Trading Software</h3><p> Trade Santa trading bot works on eight main exchanges, Binance, Bittrex, HitBTC, and Bitfinex to help you crypto trade simultaneously on them. It has already helped hundreds of thousands of users simplify their daily trading: over 210,000 registered users and over 22 million transactions completed.</p><p>Main Features</p><ul> <li>Trade Santa bots can trade on both futures and spot markets.</li> <li> Trade Santa offers a variety of signals, like Trading View custom signals, pre-built signals based on Trading View Screener and technical indicators like Bollinger Bands, MACD, RSI, etc. </li> <li> Stop loss, trailing stop loss, trailing take profit, and other risk management tools. </li> <li>DCA and grid strategies.</li> <li> Demo trading allows you to test your strategy against the real market conditions without putting in any real money. </li> <li> Telegram notifications and real-time tracking so you can always check what your bots are doing. </li> <li> TradeSanta also has a nice feature that allows you to quickly close all positions and transfer all your assets into USDT or BTC. It can be helpful if you need to do it quickly when, for example, the market starts to crash or you want to fix your earnings. </li></ul></div>',\r\n//     createdAt: \"2024-10-14T14:27:21+05:30\",\r\n//     lastUpdate: \"2024-10-14T16:12:22+05:30\",\r\n//     image_alt: \"free-crypto-trading-bots-2024\",\r\n//   },\r\n// ];\r\n\r\n// let blogImgArr = [\r\n//   {\r\n//     node: {\r\n//       id: \"1504a0d3-27fa-5157-b3a8-4aedc9fc9d07\",\r\n//       gatsbyImageData: {\r\n//         layout: \"constrained\",\r\n//         backgroundColor: \"#d8b898\",\r\n//         images: {\r\n//           fallback: {\r\n//             src: \"/static/959e1095ce46d4abeff91ad030de9ddd/245fe/blog-4.png\",\r\n//             srcSet:\r\n//               \"/static/959e1095ce46d4abeff91ad030de9ddd/01f88/blog-4.png 225w,\\n/static/959e1095ce46d4abeff91ad030de9ddd/412ba/blog-4.png 450w,\\n/static/959e1095ce46d4abeff91ad030de9ddd/245fe/blog-4.png 900w\",\r\n//             sizes: \"(min-width: 900px) 900px, 100vw\",\r\n//           },\r\n//           sources: [\r\n//             {\r\n//               srcSet:\r\n//                 \"/static/959e1095ce46d4abeff91ad030de9ddd/ef819/blog-4.webp 225w,\\n/static/959e1095ce46d4abeff91ad030de9ddd/79371/blog-4.webp 450w,\\n/static/959e1095ce46d4abeff91ad030de9ddd/ff899/blog-4.webp 900w\",\r\n//               type: \"image/webp\",\r\n//               sizes: \"(min-width: 900px) 900px, 100vw\",\r\n//             },\r\n//           ],\r\n//         },\r\n//         width: 900,\r\n//         height: 500,\r\n//       },\r\n//     },\r\n//   },\r\n//   {\r\n//     node: {\r\n//       id: \"f88f3264-ce18-5d4c-9f96-3e5fc2e665cd\",\r\n//       gatsbyImageData: {\r\n//         layout: \"constrained\",\r\n//         backgroundColor: \"#080808\",\r\n//         images: {\r\n//           fallback: {\r\n//             src: \"/static/095dab94ea11ba613050a3c17910d919/245fe/blog-7.png\",\r\n//             srcSet:\r\n//               \"/static/095dab94ea11ba613050a3c17910d919/01f88/blog-7.png 225w,\\n/static/095dab94ea11ba613050a3c17910d919/412ba/blog-7.png 450w,\\n/static/095dab94ea11ba613050a3c17910d919/245fe/blog-7.png 900w\",\r\n//             sizes: \"(min-width: 900px) 900px, 100vw\",\r\n//           },\r\n//           sources: [\r\n//             {\r\n//               srcSet:\r\n//                 \"/static/095dab94ea11ba613050a3c17910d919/ef819/blog-7.webp 225w,\\n/static/095dab94ea11ba613050a3c17910d919/79371/blog-7.webp 450w,\\n/static/095dab94ea11ba613050a3c17910d919/ff899/blog-7.webp 900w\",\r\n//               type: \"image/webp\",\r\n//               sizes: \"(min-width: 900px) 900px, 100vw\",\r\n//             },\r\n//           ],\r\n//         },\r\n//         width: 900,\r\n//         height: 500,\r\n//       },\r\n//     },\r\n//   },\r\n// ];\r\n\r\n// let image = \"/static/142d8707e24002168e4f7a8e16e4a4d5/245fe/blog-10.png\";\r\n// console.log(\"split\", image.split(\"/\"));\r\n","import Layout from \"@components/layout\";\r\nimport Seo from \"@components/seo\";\r\nimport React from \"react\";\r\nimport BlogsData from \"@screens/blogs\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore/lite\";\r\nimport { graphql } from \"gatsby\";\r\nimport BreadCrumb from \"@components/common/breadcrumb\";\r\n\r\nconst BlogsScreen = (props) => {\r\n  const app = initializeApp(props?.data?.site?.siteMetadata?.firestore);\r\n  const db = getFirestore(app);\r\n  const breadcrumbLinks = [\r\n    { text: \"Home\", link: \"/\" },\r\n    { text: \"Blogs\", link: \"\" },\r\n  ];\r\n  console.log(\"breadcrumbLinks::\", breadcrumbLinks);\r\n\r\n  return (\r\n    <Layout db={db}>\r\n      <BreadCrumb items={breadcrumbLinks} />\r\n      <BlogsData\r\n        blogImages={props?.data?.allImageSharp?.edges}\r\n        db={db}\r\n        siteUrl={props?.data?.site?.siteMetadata?.siteUrl}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const Head = (props) => {\r\n  const { data } = props;\r\n  console.log(\"data::\", data);\r\n  \r\n  const logoObj = data?.allImageSharp?.edges?.find((image) => {\r\n    return image?.node?.gatsbyImageData?.images?.fallback?.src?.includes(\r\n      \"new_logo.png\"\r\n    );\r\n  });\r\n  return (\r\n    <Seo\r\n      title=\"Justtry Technologies Blog: Updates, news, Articles\"\r\n      metaTitle=\"Justtry Technologies Blog: Updates, news, Articles\"\r\n      description=\"Dive into the world of innovation with Justtry Technologies' blog. Uncover the latest tech trends, gain insights from industry experts, and empower yourself with cutting-edge knowledge. Explore a fusion of expertise and creativity as we unravel the future of technology together. Justtry Technologies - where curiosity meets innovation.\"\r\n      image={logoObj?.node?.gatsbyImageData?.images?.fallback?.src}\r\n    ></Seo>\r\n  );\r\n};\r\n\r\nexport default BlogsScreen;\r\n\r\nexport const query = graphql`\r\n  query MyQuery {\r\n    allImageSharp {\r\n      edges {\r\n        node {\r\n          gatsbyImageData\r\n          id\r\n        }\r\n      }\r\n    }\r\n    allDataJson {\r\n      edges {\r\n        node {\r\n          id\r\n          keyId\r\n          slug\r\n          author_name\r\n          blog_created_date\r\n          title\r\n          short_description\r\n          description\r\n          meta_title\r\n          meta_description\r\n          image\r\n          category\r\n          tags\r\n        }\r\n      }\r\n      pageInfo {\r\n        perPage\r\n        hasNextPage\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        firestore {\r\n          apiKey\r\n          appId\r\n          authDomain\r\n          messagingSenderId\r\n          projectId\r\n          storageBucket\r\n        }\r\n        siteUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["_ref","items","React","Container","fluid","className","Row","map","item","index","key","length","text","Link","to","link","nbItem","numberItemsPagination","setNumberItemsPagination","useState","isLoading","setIsLoading","loadMoreItems","arrayLength","data","db","count","LoadMore","trendingBlogs","setTrendingBlogs","isMounted","setIsMounted","blogsList","setBlogsList","console","log","loading","setLoading","initLoading","setInitLoading","useEffect","loadBlogsList","sortTrendingBlogs","async","blogs","addViewCountArr","blogsCountsArr","utils","collectionKeys","VIEWCOUNT","blogObj","blogsCountDoc","slug","viewCount","push","sort","a","b","lastVisible","setLastVisible","hasMore","setHasMore","newLastVisible","moreData","BLOG","prevData","concat","_toConsumableArray","error","Fragment","Loading","variant","slice","ele","ind","Col","lg","xs","Card","id","sm","src","alt","image_alt","xmlns","width","height","viewBox","fill","d","moment","blog_created_date","format","title","short_description","style","background","color","md","Button","disabled","onClick","Head","props","_data$allImageSharp","_data$allImageSharp$e","_logoObj$node","_logoObj$node$gatsbyI","_logoObj$node$gatsbyI2","_logoObj$node$gatsbyI3","logoObj","allImageSharp","edges","find","image","_image$node","_image$node$gatsbyIma","_image$node$gatsbyIma2","_image$node$gatsbyIma3","_image$node$gatsbyIma4","node","gatsbyImageData","images","fallback","includes","Seo","metaTitle","description","_props$data","_props$data$site","_props$data$site$site","_props$data2","_props$data2$allImage","_props$data3","_props$data3$site","_props$data3$site$sit","app","initializeApp","site","siteMetadata","firestore","getFirestore","breadcrumbLinks","Layout","BreadCrumb","BlogsData","blogImages","siteUrl","CardImg","bsPrefix","as","Component","ref","prefix","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","border","body","Object","assign","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}