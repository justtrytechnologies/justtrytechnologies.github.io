{"version":3,"file":"06655b80a470c0ad3e56b82c1aa6e96ee0450a23-346c568728fbe058fd8b.js","mappings":"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","sources":["webpack://justtry-app/./src/styles/assets/images/Hero-logo.avif","webpack://justtry-app/./node_modules/country-state-city/lib/utils/index.js","webpack://justtry-app/./node_modules/country-state-city/lib/country.js","webpack://justtry-app/./node_modules/firebase/app/dist/esm/index.esm.js","webpack://justtry-app/./src/components/common/move-forward.js","webpack://justtry-app/./src/core/helper/utils.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/Hero-logo-d815e19e7527a08402cc95c5a3a04e12.avif\";","export const findEntryByCode = (source, code) => {\n    if (code && source != null) {\n        const codex = source.findIndex((c) => {\n            return c.isoCode === code;\n        });\n        return codex !== -1 ? source[codex] : undefined;\n    }\n    return undefined;\n};\nexport const findStateByCodeAndCountryCode = (source, code, countryCode) => {\n    if (code && countryCode && source != null) {\n        const codex = source.findIndex((c) => {\n            return c.isoCode === code && c.countryCode === countryCode;\n        });\n        return codex !== -1 ? source[codex] : undefined;\n    }\n    return undefined;\n};\nexport function defaultKeyToCompare(entity) {\n    return entity.name;\n}\nexport const compare = (a, b, \n// eslint-disable-next-line no-unused-vars\nkeyToCompare = defaultKeyToCompare) => {\n    if (keyToCompare(a) < keyToCompare(b))\n        return -1;\n    if (keyToCompare(a) > keyToCompare(b))\n        return 1;\n    return 0;\n};\nexport const convertArrayToObject = (keys, arr) => {\n    const result = arr.map((subArr) => {\n        return Object.fromEntries(keys.map((key, index) => [key, subArr[index]]));\n    });\n    return result;\n};\n","import countryList from './assets/country.json';\nimport { compare, findEntryByCode } from './utils';\n// Get a country by isoCode.\nfunction getCountryByCode(isoCode) {\n    if (!isoCode)\n        return undefined;\n    return findEntryByCode(countryList, isoCode);\n}\n// Get a list of all countries.\nfunction getAllCountries() {\n    return countryList;\n}\nfunction sortByIsoCode(countries) {\n    return countries.sort((a, b) => {\n        return compare(a, b, (entity) => {\n            return entity.isoCode;\n        });\n    });\n}\nexport default {\n    getCountryByCode,\n    getAllCountries,\n    sortByIsoCode,\n};\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"10.3.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","import React from \"react\";\r\nimport moveForwardImg from \"../../styles/assets/images/Hero-logo.avif\";\r\nimport { Country } from \"country-state-city\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { collection, addDoc, getFirestore } from \"firebase/firestore/lite\";\r\nimport { utils } from \"../../core/helper\";\r\n\r\nconst MoveForward = () => {\r\n  // const data = useStaticQuery(graphql`\r\n  //   query {\r\n  //     site(siteMetadata: {}) {\r\n  //       id\r\n  //       firestore {\r\n  //         apiKey\r\n  //         authDomain\r\n  //         projectId\r\n  //         storageBucket\r\n  //         messagingSenderId\r\n  //         appId\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // `);\r\n  // Initialize Firebase\r\n\r\n  const firebaseConfig = {\r\n    apiKey: process.env.FIREBASE_API_KEY,\r\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.FIREBASE_MESSAGE_SENDER_ID,\r\n    appId: process.env.FIREBASE_APP_ID,\r\n  };\r\n\r\n  // console.log(\"data::\", data);\r\n\r\n  const app = initializeApp(firebaseConfig);\r\n  console.log(\"app::\", app);\r\n  const db = getFirestore(app);\r\n\r\n  const countries = Country.getAllCountries();\r\n  const init = {\r\n    name: \"\",\r\n    email: \"\",\r\n    country: \"\",\r\n    contact: \"\",\r\n    message: \"\",\r\n  };\r\n  const [talkToUsInp, setTalkToUsInp] = React.useState(init);\r\n\r\n  function handleTalkToUsInpChange(event) {\r\n    const { name, value } = event.target;\r\n    console.log(\"valuesOnchange::\", value);\r\n    setTalkToUsInp((prevFormData) => ({ ...prevFormData, [name]: value }));\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const clients = collection(db, \"clients\");\r\n    console.log(\"clients::\", clients);\r\n    await addDoc(clients, talkToUsInp);\r\n    utils.showSuccssMsg(\"We will contact/talk to you soon\");\r\n    setTalkToUsInp(init);\r\n  };\r\n\r\n  return (\r\n    // <section className=\"section-cta\" id=\"talktous\">\r\n    //   <div className=\"container\">\r\n    //     <div className=\"cta\">\r\n    //       <div className=\"bottomAnimation cta-text-box\">\r\n    //         <h2 className=\"heading-secondary\">\r\n    //           READY TO MOVE FORWARD WITH JUSTTRY TEAM?\r\n    //         </h2>\r\n    //         <p className=\"cta-text\">\r\n    //           Increase efficency, productivity, and business performance with\r\n    //           Flipflop various products that have been used by tens of thousands\r\n    //           of businesses in the word.\r\n    //         </p>\r\n\r\n    //         <form onSubmit={handleSubmit} className=\"cta-form\">\r\n    //           <div>\r\n    //             <label for=\"full-name\">Name</label>\r\n    //             <input\r\n    //               id=\"full-name\"\r\n    //               type=\"text\"\r\n    //               placeholder=\"Enter Your Name\"\r\n    //               name=\"name\"\r\n    //               value={talkToUsInp.name}\r\n    //               onChange={(e) => handleTalkToUsInpChange(e)}\r\n    //               required\r\n    //             />\r\n    //           </div>\r\n    //           <div>\r\n    //             <label for=\"email\">Email address</label>\r\n    //             <input\r\n    //               id=\"email\"\r\n    //               type=\"email\"\r\n    //               placeholder=\"me@example.com\"\r\n    //               name=\"email\"\r\n    //               value={talkToUsInp.email}\r\n    //               onChange={(e) => handleTalkToUsInpChange(e)}\r\n    //               required\r\n    //             />\r\n    //           </div>\r\n    //           <div>\r\n    //             <label for=\"select-where\">Where did you hear from us?</label>\r\n    //             <select\r\n    //               name=\"country\"\r\n    //               onChange={(e) => handleTalkToUsInpChange(e)}\r\n    //               id=\"select-where\"\r\n    //               required\r\n    //             >\r\n    //               <option value=\"\">Please choose one option:</option>\r\n    //               {countries.map((ele, ind) => {\r\n    //                 return (\r\n    //                   <option key={ind} value={ele.isoCode}>\r\n    //                     {ele.name}\r\n    //                   </option>\r\n    //                 );\r\n    //               })}\r\n    //             </select>\r\n    //           </div>\r\n    //           <div>\r\n    //             <label for=\"mobile\">Skype / Whatsapp / Mobile</label>\r\n    //             <input\r\n    //               id=\"mobile\"\r\n    //               type=\"tel\"\r\n    //               placeholder=\"Skype / Whatsapp / Mobile\"\r\n    //               name=\"mobile\"\r\n    //               value={talkToUsInp.mobile}\r\n    //               onChange={(e) => handleTalkToUsInpChange(e)}\r\n    //               required\r\n    //             />\r\n    //           </div>\r\n    //           <div>\r\n    //             <label for=\"content\">Content</label>\r\n    //             <textarea\r\n    //               id=\"content\"\r\n    //               placeholder=\"Type content here\"\r\n    //               name=\"content\"\r\n    //               value={talkToUsInp.content}\r\n    //               onChange={(e) => handleTalkToUsInpChange(e)}\r\n    //               rows={5}\r\n    //               className=\"input\"\r\n    //               required\r\n    //             ></textarea>\r\n    //           </div>\r\n    //           <button className=\"btn btn--form\">Submit</button>\r\n    //         </form>\r\n    //       </div>\r\n\r\n    //       <div\r\n    //         className=\"rightAnimation cta-img-box\"\r\n    //         role=\"img\"\r\n    //         aria-label=\"Some Tech Design\"\r\n    //       >\r\n    //         <img src={logo} alt=\"\" />\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    // </section>\r\n    <section className=\"section-cta p-5\">\r\n      <div\r\n        className=\"container p-5 col-md-12 bg-white shadow rounded-5\"\r\n        style={{\r\n          background: `linear-gradient(to right bottom, #b197fc, #fcc2d7)`,\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6  col-12 p-5\">\r\n            <h2 className=\"text-uppercase\">\r\n              ready to move forward with justtry?\r\n            </h2>\r\n            <p>\r\n              {\" \"}\r\n              Increase efficency, productivity, and business performance with\r\n              Flipflop various products that have been used by tens of thousands\r\n              of businesses in the word.\r\n            </p>\r\n            <form onSubmit={handleSubmit} className=\"cta-form\">\r\n              <div>\r\n                <label for=\"full-name\">Name</label>\r\n                <input\r\n                  id=\"full-name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Your Name\"\r\n                  name=\"name\"\r\n                  value={talkToUsInp.name}\r\n                  onChange={(e) => handleTalkToUsInpChange(e)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label for=\"email\">Email address</label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"me@example.com\"\r\n                  name=\"email\"\r\n                  value={talkToUsInp.email}\r\n                  onChange={(e) => handleTalkToUsInpChange(e)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label for=\"select-where\">Where did you hear from us?</label>\r\n                <select\r\n                  name=\"country\"\r\n                  onChange={(e) => handleTalkToUsInpChange(e)}\r\n                  id=\"select-where\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Please choose one option:</option>\r\n                  {countries.map((ele, ind) => {\r\n                    return (\r\n                      <option key={ind} value={ele.isoCode}>\r\n                        {ele.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label for=\"mobile\">Skype / Whatsapp / Mobile</label>\r\n                <input\r\n                  id=\"mobile\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Skype / Whatsapp / Mobile\"\r\n                  name=\"mobile\"\r\n                  value={talkToUsInp.mobile}\r\n                  onChange={(e) => handleTalkToUsInpChange(e)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label for=\"content\">Content</label>\r\n                <textarea\r\n                  id=\"content\"\r\n                  placeholder=\"Type content here\"\r\n                  name=\"content\"\r\n                  value={talkToUsInp.content}\r\n                  onChange={(e) => handleTalkToUsInpChange(e)}\r\n                  rows={5}\r\n                  className=\"input\"\r\n                  required\r\n                ></textarea>\r\n              </div>\r\n              <button className=\"btn btn--form\">Submit</button>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-md-6 p-5 d-flex flex-column align-items-center justify-content-center\">\r\n            <img\r\n              className=\"w-auto\"\r\n              src={moveForwardImg}\r\n              alt=\"move-forward-img\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MoveForward;\r\n","import { graphql } from \"gatsby\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const showSuccssMsg = (msg) => {\r\n  toast.success(msg, { autoClose: 2000 });\r\n};\r\n\r\nexport const showErrMsg = (msg) => {\r\n  toast.error(msg, { autoClose: 2000 });\r\n};\r\n\r\n// export const graphqlData = (limit, skip) => graphql`\r\n// query MyQuery {\r\n//   allDataJson(limit: ${limit}, skip: ${skip}) {\r\n//     edges {\r\n//       node {\r\n//         id\r\n//         bio\r\n//         image\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n// `;\r\n"],"names":["defaultKeyToCompare","entity","name","getCountryByCode","isoCode","source","code","codex","findIndex","c","undefined","findEntryByCode","getAllCountries","sortByIsoCode","countries","sort","a","b","keyToCompare","compare","MoveForward","firebaseConfig","apiKey","process","FIREBASE_API_KEY","authDomain","FIREBASE_AUTH_DOMAIN","projectId","FIREBASE_PROJECT_ID","storageBucket","FIREBASE_STORAGE_BUCKET","messagingSenderId","FIREBASE_MESSAGE_SENDER_ID","appId","FIREBASE_APP_ID","app","initializeApp","console","log","db","getFirestore","Country","init","email","country","contact","message","talkToUsInp","setTalkToUsInp","React","handleTalkToUsInpChange","event","value","target","prevFormData","className","style","background","onSubmit","async","e","preventDefault","clients","collection","msg","addDoc","toast","success","autoClose","for","id","type","placeholder","onChange","required","map","ele","ind","key","mobile","content","rows","src","moveForwardImg","alt"],"sourceRoot":""}